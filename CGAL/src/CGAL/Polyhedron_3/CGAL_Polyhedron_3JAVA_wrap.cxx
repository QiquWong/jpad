/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13




  #include <SWIG_CGAL/Java/exception.h>


SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <stdexcept>


#include <string>


#if !defined(SWIGPYTHON) && !defined(SWIGJAVA)
  #define SWIG_CGAL_NON_SUPPORTED_TARGET_LANGUAGE 1
#else
  #define SWIG_CGAL_NON_SUPPORTED_TARGET_LANGUAGE 0
#endif  

 
#include <SWIG_CGAL/Polyhedron_3/all_includes.h> 

 typedef SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_>  Polyhedron_3_Halfedge_handle_SWIG_wrapper; 
 typedef SWIG_Polyhedron_3::CGAL_Vertex_handle<Polyhedron_3_>  Polyhedron_3_Vertex_handle_SWIG_wrapper; 
 typedef SWIG_Polyhedron_3::CGAL_Facet_handle<Polyhedron_3_>  Polyhedron_3_Facet_handle_SWIG_wrapper; 
 typedef Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle<Polyhedron_3_>,SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_>,SWIG_Polyhedron_3::CGAL_Facet_handle<Polyhedron_3_> >  Polyhedron_3_SWIG_wrapper; 
 typedef General_modifier<Polyhedron_3_::HalfedgeDS>  Polyhedron_modifier_SWIG_wrapper; 
 typedef SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_> >  Polyhedron_3_Halfedge_iterator_SWIG_wrapper; 
 typedef SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_> >  Polyhedron_3_Edge_iterator_SWIG_wrapper; 
 typedef SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle<Polyhedron_3_> >  Polyhedron_3_Vertex_iterator_SWIG_wrapper; 
 typedef SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle<Polyhedron_3_> >  Polyhedron_3_Facet_iterator_SWIG_wrapper; 
 typedef SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3>  Polyhedron_3_Point_iterator_SWIG_wrapper; 
 typedef SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_> >  Polyhedron_3_Halfedge_around_vertex_circulator_SWIG_wrapper; 
 typedef SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle<Polyhedron_3_> >  Polyhedron_3_Halfedge_around_facet_circulator_SWIG_wrapper; 

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Halfedge_1handle(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *)new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1opposite_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->opposite();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1opposite_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->opposite(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1next_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1next_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1prev_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->prev();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1prev_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->prev(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1next_1on_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->next_on_vertex();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1next_1on_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next_on_vertex(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1prev_1on_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->prev_on_vertex();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1prev_1on_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->prev_on_vertex(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1border(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_border();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1border_1edge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_border_edge();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1vertex_1begin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->vertex_begin();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1facet_1begin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->facet_begin();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1vertex_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->vertex_degree();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1bivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_bivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1trivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_trivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1facet_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->facet_degree();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1triangle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_triangle();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1is_1quad(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_quad();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->vertex();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->vertex(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1facet_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->facet();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1facet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->facet(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1lt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator <(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1gt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator >(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1le(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator <=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1ge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator >=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator ==(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->operator !=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1hashCode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->hashCode();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->id();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1set_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try{
      (arg1)->set_id(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = ((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1handle_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Halfedge_1handle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Vertex_1handle(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *)new SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1point_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->point();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1point_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->point(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1halfedge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->halfedge();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1halfedge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->halfedge(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1vertex_1begin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->vertex_begin();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator **)&jresult = new SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator((const SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Halfedge_around_vertex_circulator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1set_1halfedge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->set_halfedge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1vertex_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->vertex_degree();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1is_1bivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_bivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1is_1trivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_trivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1lt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator <(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1gt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator >(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1le(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator <=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1ge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator >=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator ==(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->operator !=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1hashCode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->hashCode();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->id();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1set_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try{
      (arg1)->set_id(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1set_1point(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->set_point((Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = ((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jresult = new SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self((const SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1handle_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Vertex_1handle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Facet_1handle(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *)new SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1halfedge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->halfedge();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1halfedge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->halfedge(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1facet_1begin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (arg1)->facet_begin();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator **)&jresult = new SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator((const SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Halfedge_around_facet_circulator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1set_1halfedge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->set_halfedge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1facet_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->facet_degree();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1is_1triangle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_triangle();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1is_1quad(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_quad();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1lt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator <(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1gt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator >(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1le(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator <=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1ge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator >=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator ==(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->operator !=(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1hashCode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->hashCode();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->id();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1set_1id(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try{
      (arg1)->set_id(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      result = ((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jresult = new SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self((const SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1handle_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Facet_1handle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg1 = (SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *)new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  {
    try{
      result = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *)new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >((char const *)arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (unsigned int)jarg3; 
  {
    try{
      result = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *)new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >(arg1,arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int *arg2 = 0 ;
  unsigned int *arg3 = 0 ;
  unsigned int *arg4 = 0 ;
  unsigned int temp2 ;
  unsigned int temp3 ;
  unsigned int temp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  temp2 = (unsigned int)jarg2; 
  arg2 = &temp2; 
  temp3 = (unsigned int)jarg3; 
  arg3 = &temp3; 
  temp4 = (unsigned int)jarg4; 
  arg4 = &temp4; 
  {
    try{
      (arg1)->reserve((unsigned int const &)*arg2,(unsigned int const &)*arg3,(unsigned int const &)*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1tetrahedron_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->make_tetrahedron();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1tetrahedron_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->make_tetrahedron(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1tetrahedron_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Point_3 *arg2 = 0 ;
  Point_3 *arg3 = 0 ;
  Point_3 *arg4 = 0 ;
  Point_3 *arg5 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = *(Point_3 **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg4 = *(Point_3 **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg5 = *(Point_3 **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->make_tetrahedron((Point_3 const &)*arg2,(Point_3 const &)*arg3,(Point_3 const &)*arg4,(Point_3 const &)*arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1tetrahedron_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Point_3 *arg2 = 0 ;
  Point_3 *arg3 = 0 ;
  Point_3 *arg4 = 0 ;
  Point_3 *arg5 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg3 = *(Point_3 **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg4 = *(Point_3 **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg5 = *(Point_3 **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg6 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->make_tetrahedron((Point_3 const &)*arg2,(Point_3 const &)*arg3,(Point_3 const &)*arg4,(Point_3 const &)*arg5,*arg6);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1triangle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->make_triangle();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1triangle_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->make_triangle(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1triangle_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Point_3 *arg2 = 0 ;
  Point_3 *arg3 = 0 ;
  Point_3 *arg4 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = *(Point_3 **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg4 = *(Point_3 **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->make_triangle((Point_3 const &)*arg2,(Point_3 const &)*arg3,(Point_3 const &)*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1triangle_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Point_3 *arg2 = 0 ;
  Point_3 *arg3 = 0 ;
  Point_3 *arg4 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg3 = *(Point_3 **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg4 = *(Point_3 **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  arg5 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->make_triangle((Point_3 const &)*arg2,(Point_3 const &)*arg3,(Point_3 const &)*arg4,*arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->empty();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1size_1of_1vertices(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->size_of_vertices();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1size_1of_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->size_of_halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1size_1of_1facets(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->size_of_facets();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1capacity_1of_1vertices(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->capacity_of_vertices();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1capacity_1of_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->capacity_of_halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1capacity_1of_1facets(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->capacity_of_facets();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->bytes();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1bytes_1reserved(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->bytes_reserved();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1vertices(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Vertex_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->vertices();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Vertex_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Vertex_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Vertex_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1facets(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Facet_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->facets();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Facet_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Facet_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Facet_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1edges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->edges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1points(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Point_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->points();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Point_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Point_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Point_iterator &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1closed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_closed();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1pure_1bivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_pure_bivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1pure_1trivalent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_pure_trivalent();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1pure_1triangle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_pure_triangle();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1pure_1quad(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_pure_quad();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1triangle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->is_triangle((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1tetrahedron(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->is_tetrahedron((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1facet_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->split_facet((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1facet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->split_facet((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1facet_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->join_facet((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1facet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->join_facet((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->split_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->split_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->join_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->join_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1edge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->split_edge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1edge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->split_edge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1flip_1edge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->flip_edge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1flip_1edge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->flip_edge((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1create_1center_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->create_center_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1create_1center_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->create_center_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1erase_1center_1vertex_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->erase_center_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1erase_1center_1vertex_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->erase_center_vertex((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1loop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->split_loop((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1split_1loop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg5 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->split_loop((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg4,*arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1loop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->join_loop((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1join_1loop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->join_loop((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1hole_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->make_hole((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1make_1hole_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->make_hole((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1fill_1hole_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->fill_hole((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1fill_1hole_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->fill_hole((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1add_1vertex_1and_1facet_1to_1border_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->add_vertex_and_facet_to_border((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1add_1vertex_1and_1facet_1to_1border_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->add_vertex_and_facet_to_border((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1add_1facet_1to_1border_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (arg1)->add_facet_to_border((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1add_1facet_1to_1border_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg3 = 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg3 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  arg4 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->add_facet_to_border((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2,(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg3,*arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1erase_1facet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->erase_facet((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1erase_1connected_1component(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->erase_connected_component((SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1keep_1largest_1connected_1components(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int *arg2 = 0 ;
  unsigned int temp2 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  temp2 = (unsigned int)jarg2; 
  arg2 = &temp2; 
  {
    try{
      result = (unsigned int)(arg1)->keep_largest_connected_components((unsigned int const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1normalize_1border(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      (arg1)->normalize_border();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1size_1of_1border_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->size_of_border_halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1size_1of_1border_1edges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (unsigned int)(arg1)->size_of_border_edges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1border_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->border_halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1non_1border_1halfedges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->non_border_halfedges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Halfedge_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1border_1edges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->border_edges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1non_1border_1edges(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->non_border_edges();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Edge_iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1inside_1out(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      (arg1)->inside_out();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1is_1valid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->is_valid();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1normalized_1border_1is_1valid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->normalized_border_is_valid();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1delegate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Modifier_base< Polyhedron_3_ > arg2 ;
  Modifier_base< Polyhedron_3_ > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  argp2 = *(Modifier_base< Polyhedron_3_ > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Modifier_base< Polyhedron_3_ >");
    return ;
  }
  arg2 = *argp2; 
  {
    try{
      (arg1)->delegate(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1delegate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  General_modifier< Polyhedron_3_::HalfedgeDS > arg2 ;
  General_modifier< Polyhedron_3_::HalfedgeDS > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  argp2 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null General_modifier< Polyhedron_3_::HalfedgeDS >");
    return ;
  }
  arg2 = *argp2; 
  {
    try{
      (arg1)->delegate(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1write_1to_1file_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int)jarg3; 
  {
    try{
      ((Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->write_to_file((char const *)arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1write_1to_1file_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    try{
      ((Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->write_to_file((char const *)arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jresult = new Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self((const Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Polyhedron_3_wrapper< Polyhedron_3_,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_1modifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  General_modifier< Polyhedron_3_::HalfedgeDS > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (General_modifier< Polyhedron_3_::HalfedgeDS > *)new General_modifier< Polyhedron_3_::HalfedgeDS >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1begin_1surface_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jint jarg5) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Modifier_mode arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (Modifier_mode)jarg5; 
  {
    try{
      (arg1)->begin_surface(arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1begin_1surface_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try{
      (arg1)->begin_surface(arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1begin_1surface_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try{
      (arg1)->begin_surface(arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1end_1surface(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      (arg1)->end_surface();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1add_1vertex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->add_vertex((Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1begin_1facet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      (arg1)->begin_facet();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1end_1facet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      (arg1)->end_facet();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1add_1vertex_1to_1facet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try{
      (arg1)->add_vertex_to_facet(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1rollback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      (arg1)->rollback();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_1modifier_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_1modifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  General_modifier< Polyhedron_3_::HalfedgeDS > *arg1 = (General_modifier< Polyhedron_3_::HalfedgeDS > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(General_modifier< Polyhedron_3_::HalfedgeDS > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Halfedge_1iterator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1iterator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Halfedge_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Halfedge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Edge_1iterator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Edge_1iterator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Edge_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Edge_iterator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Vertex_1iterator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Vertex_1iterator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Vertex_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Vertex_iterator,SWIG_Polyhedron_3::CGAL_Vertex_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Facet_1iterator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Facet_1iterator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Facet_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Facet_iterator,SWIG_Polyhedron_3::CGAL_Facet_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Point_1iterator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *)new SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self **)&jresult = new SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self((const SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Point_1iterator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Point_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< Polyhedron_3_::Point_iterator,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Halfedge_1around_1vertex_1circulator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1prev(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->prev();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1vertex_1circulator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Halfedge_1around_1vertex_1circulator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_vertex_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_new_1Polyhedron_13_1Halfedge_1around_1facet_1circulator(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *)new SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jresult = new SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self((const SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1prev(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (arg1)->prev();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > **)&jresult = new SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ >((const SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator ==((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_Polyhedron_13_1Halfedge_1around_1facet_1circulator_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > const *)arg1)->operator !=((SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Polyhedron_13_CGAL_1Polyhedron_13JNI_delete_1Polyhedron_13_1Halfedge_1around_1facet_1circulator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *arg1 = (SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Circulator< Polyhedron_3_::Halfedge_around_facet_circulator,SWIG_Polyhedron_3::CGAL_Halfedge_handle< Polyhedron_3_ > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


#ifdef __cplusplus
}
#endif

