/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Triangulation_2;
 import CGAL.Kernel.Point_2;
public class Constraint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public Constraint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Constraint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CGAL_Triangulation_2JNI.delete_Constraint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Constraint() {
    this(CGAL_Triangulation_2JNI.new_Constraint__SWIG_0(), true);
  }

  public Constraint(Point_2 first, Point_2 second) {
    this(CGAL_Triangulation_2JNI.new_Constraint__SWIG_1(Point_2.getCPtr(first), first, Point_2.getCPtr(second), second), true);
  }

  public Constraint(Constraint p) {
    this(CGAL_Triangulation_2JNI.new_Constraint__SWIG_2(Constraint.getCPtr(p), p), true);
  }

  public void setFirst(Point_2 value) {
    CGAL_Triangulation_2JNI.Constraint_first_set(swigCPtr, this, Point_2.getCPtr(value), value);
  }

  public Point_2 getFirst() {
    long cPtr = CGAL_Triangulation_2JNI.Constraint_first_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Point_2(cPtr, false);
  }

  public void setSecond(Point_2 value) {
    CGAL_Triangulation_2JNI.Constraint_second_set(swigCPtr, this, Point_2.getCPtr(value), value);
  }

  public Point_2 getSecond() {
    long cPtr = CGAL_Triangulation_2JNI.Constraint_second_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Point_2(cPtr, false);
  }

}
