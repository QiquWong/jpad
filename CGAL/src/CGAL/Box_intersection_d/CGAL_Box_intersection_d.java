/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Box_intersection_d;

  import java.util.Iterator;

public class CGAL_Box_intersection_d {
  public static void box_intersection_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback, int cutoff, Topology topology, Setting setting) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_0(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback, cutoff, topology.swigValue(), setting.swigValue());
  }

  public static void box_intersection_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback, int cutoff, Topology topology) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_1(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback, cutoff, topology.swigValue());
  }

  public static void box_intersection_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback, int cutoff) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_2(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback, cutoff);
  }

  public static void box_intersection_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_3(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback);
  }

  public static void box_intersection_all_pairs_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback, Topology topology) {
    CGAL_Box_intersection_dJNI.box_intersection_all_pairs_d__SWIG_0(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback, topology.swigValue());
  }

  public static void box_intersection_all_pairs_d(Iterator<Box_with_id_2> range1, Iterator<Box_with_id_2> range2, Collect_ids_callback_2 callback) {
    CGAL_Box_intersection_dJNI.box_intersection_all_pairs_d__SWIG_1(range1, range2, Collect_ids_callback_2.getCPtr(callback), callback);
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_2> range, Collect_ids_callback_2 callback, int cutoff, Topology topology) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_0(range, Collect_ids_callback_2.getCPtr(callback), callback, cutoff, topology.swigValue());
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_2> range, Collect_ids_callback_2 callback, int cutoff) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_1(range, Collect_ids_callback_2.getCPtr(callback), callback, cutoff);
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_2> range, Collect_ids_callback_2 callback) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_2(range, Collect_ids_callback_2.getCPtr(callback), callback);
  }

  public static void box_self_intersection_all_pairs_d(Iterator<Box_with_id_2> range, Collect_ids_callback_2 callback, Topology topology) {
    CGAL_Box_intersection_dJNI.box_self_intersection_all_pairs_d__SWIG_0(range, Collect_ids_callback_2.getCPtr(callback), callback, topology.swigValue());
  }

  public static void box_self_intersection_all_pairs_d(Iterator<Box_with_id_2> range, Collect_ids_callback_2 callback) {
    CGAL_Box_intersection_dJNI.box_self_intersection_all_pairs_d__SWIG_1(range, Collect_ids_callback_2.getCPtr(callback), callback);
  }

  public static void box_intersection_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback, int cutoff, Topology topology, Setting setting) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_4(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback, cutoff, topology.swigValue(), setting.swigValue());
  }

  public static void box_intersection_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback, int cutoff, Topology topology) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_5(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback, cutoff, topology.swigValue());
  }

  public static void box_intersection_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback, int cutoff) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_6(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback, cutoff);
  }

  public static void box_intersection_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback) {
    CGAL_Box_intersection_dJNI.box_intersection_d__SWIG_7(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback);
  }

  public static void box_intersection_all_pairs_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback, Topology topology) {
    CGAL_Box_intersection_dJNI.box_intersection_all_pairs_d__SWIG_2(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback, topology.swigValue());
  }

  public static void box_intersection_all_pairs_d(Iterator<Box_with_id_3> range1, Iterator<Box_with_id_3> range2, Collect_ids_callback_3 callback) {
    CGAL_Box_intersection_dJNI.box_intersection_all_pairs_d__SWIG_3(range1, range2, Collect_ids_callback_3.getCPtr(callback), callback);
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_3> range, Collect_ids_callback_3 callback, int cutoff, Topology topology) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_3(range, Collect_ids_callback_3.getCPtr(callback), callback, cutoff, topology.swigValue());
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_3> range, Collect_ids_callback_3 callback, int cutoff) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_4(range, Collect_ids_callback_3.getCPtr(callback), callback, cutoff);
  }

  public static void box_self_intersection_d(Iterator<Box_with_id_3> range, Collect_ids_callback_3 callback) {
    CGAL_Box_intersection_dJNI.box_self_intersection_d__SWIG_5(range, Collect_ids_callback_3.getCPtr(callback), callback);
  }

  public static void box_self_intersection_all_pairs_d(Iterator<Box_with_id_3> range, Collect_ids_callback_3 callback, Topology topology) {
    CGAL_Box_intersection_dJNI.box_self_intersection_all_pairs_d__SWIG_2(range, Collect_ids_callback_3.getCPtr(callback), callback, topology.swigValue());
  }

  public static void box_self_intersection_all_pairs_d(Iterator<Box_with_id_3> range, Collect_ids_callback_3 callback) {
    CGAL_Box_intersection_dJNI.box_self_intersection_all_pairs_d__SWIG_3(range, Collect_ids_callback_3.getCPtr(callback), callback);
  }

}
