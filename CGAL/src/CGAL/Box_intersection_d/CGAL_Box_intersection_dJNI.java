/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Box_intersection_d;

  import java.util.Iterator;
  import CGAL.Kernel.Bbox_2;
  import CGAL.Kernel.Bbox_3;
  import CGAL.Kernel.Segment_2;
  import CGAL.Kernel.Point_2;

public class CGAL_Box_intersection_dJNI {

    static {
      try {
          System.loadLibrary("CGAL_Box_intersection_d");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Box_intersection_d failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Pair_of_int__SWIG_0();
  public final static native long new_Pair_of_int__SWIG_1(int jarg1, int jarg2);
  public final static native long new_Pair_of_int__SWIG_2(long jarg1, Pair_of_int jarg1_);
  public final static native void Pair_of_int_first_set(long jarg1, Pair_of_int jarg1_, int jarg2);
  public final static native int Pair_of_int_first_get(long jarg1, Pair_of_int jarg1_);
  public final static native void Pair_of_int_second_set(long jarg1, Pair_of_int jarg1_, int jarg2);
  public final static native int Pair_of_int_second_get(long jarg1, Pair_of_int jarg1_);
  public final static native void delete_Pair_of_int(long jarg1);
  public final static native long new_Ids_iterator();
  public final static native long Ids_iterator_slow_next(long jarg1, Ids_iterator jarg1_);
  public final static native void Ids_iterator_next(long jarg1, Ids_iterator jarg1_, long jarg2, Pair_of_int jarg2_);
  public final static native long Ids_iterator_clone__SWIG_0(long jarg1, Ids_iterator jarg1_);
  public final static native void Ids_iterator_clone__SWIG_1(long jarg1, Ids_iterator jarg1_, long jarg2, Ids_iterator jarg2_);
  public final static native boolean Ids_iterator_hasNext(long jarg1, Ids_iterator jarg1_);
  public final static native boolean Ids_iterator_equals(long jarg1, Ids_iterator jarg1_, long jarg2, Ids_iterator jarg2_);
  public final static native boolean Ids_iterator_not_equals(long jarg1, Ids_iterator jarg1_, long jarg2, Ids_iterator jarg2_);
  public final static native void delete_Ids_iterator(long jarg1);
  public final static native long new_Box_for_segment_polyline_2(long jarg1, Segment_2 jarg1_, int jarg2, int jarg3);
  public final static native void delete_Box_for_segment_polyline_2(long jarg1);
  public final static native long new_Box_with_id_2(long jarg1, Bbox_2 jarg1_, int jarg2);
  public final static native void delete_Box_with_id_2(long jarg1);
  public final static native long new_Box_with_id_3(long jarg1, Bbox_3 jarg1_, int jarg2);
  public final static native void delete_Box_with_id_3(long jarg1);
  public final static native long Collect_ids_callback_2_ids(long jarg1, Collect_ids_callback_2 jarg1_);
  public final static native long new_Collect_ids_callback_2();
  public final static native void delete_Collect_ids_callback_2(long jarg1);
  public final static native long Collect_ids_callback_3_ids(long jarg1, Collect_ids_callback_3 jarg1_);
  public final static native long new_Collect_ids_callback_3();
  public final static native void delete_Collect_ids_callback_3(long jarg1);
  public final static native void box_intersection_d__SWIG_0(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void box_intersection_d__SWIG_1(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_, int jarg4, int jarg5);
  public final static native void box_intersection_d__SWIG_2(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_, int jarg4);
  public final static native void box_intersection_d__SWIG_3(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_);
  public final static native void box_intersection_all_pairs_d__SWIG_0(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_, int jarg4);
  public final static native void box_intersection_all_pairs_d__SWIG_1(Iterator<Box_with_id_2> jarg1, Iterator<Box_with_id_2> jarg2, long jarg3, Collect_ids_callback_2 jarg3_);
  public final static native void box_self_intersection_d__SWIG_0(Iterator<Box_with_id_2> jarg1, long jarg2, Collect_ids_callback_2 jarg2_, int jarg3, int jarg4);
  public final static native void box_self_intersection_d__SWIG_1(Iterator<Box_with_id_2> jarg1, long jarg2, Collect_ids_callback_2 jarg2_, int jarg3);
  public final static native void box_self_intersection_d__SWIG_2(Iterator<Box_with_id_2> jarg1, long jarg2, Collect_ids_callback_2 jarg2_);
  public final static native void box_self_intersection_all_pairs_d__SWIG_0(Iterator<Box_with_id_2> jarg1, long jarg2, Collect_ids_callback_2 jarg2_, int jarg3);
  public final static native void box_self_intersection_all_pairs_d__SWIG_1(Iterator<Box_with_id_2> jarg1, long jarg2, Collect_ids_callback_2 jarg2_);
  public final static native void box_intersection_d__SWIG_4(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void box_intersection_d__SWIG_5(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_, int jarg4, int jarg5);
  public final static native void box_intersection_d__SWIG_6(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_, int jarg4);
  public final static native void box_intersection_d__SWIG_7(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_);
  public final static native void box_intersection_all_pairs_d__SWIG_2(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_, int jarg4);
  public final static native void box_intersection_all_pairs_d__SWIG_3(Iterator<Box_with_id_3> jarg1, Iterator<Box_with_id_3> jarg2, long jarg3, Collect_ids_callback_3 jarg3_);
  public final static native void box_self_intersection_d__SWIG_3(Iterator<Box_with_id_3> jarg1, long jarg2, Collect_ids_callback_3 jarg2_, int jarg3, int jarg4);
  public final static native void box_self_intersection_d__SWIG_4(Iterator<Box_with_id_3> jarg1, long jarg2, Collect_ids_callback_3 jarg2_, int jarg3);
  public final static native void box_self_intersection_d__SWIG_5(Iterator<Box_with_id_3> jarg1, long jarg2, Collect_ids_callback_3 jarg2_);
  public final static native void box_self_intersection_all_pairs_d__SWIG_2(Iterator<Box_with_id_3> jarg1, long jarg2, Collect_ids_callback_3 jarg2_, int jarg3);
  public final static native void box_self_intersection_all_pairs_d__SWIG_3(Iterator<Box_with_id_3> jarg1, long jarg2, Collect_ids_callback_3 jarg2_);
}
