/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Alpha_shape_2;
import CGAL.Kernel.Point_2; import CGAL.Kernel.Ref_int; import CGAL.Triangulation_2.Ref_Locate_type_2; import CGAL.Kernel.Weighted_point_2; import CGAL.Kernel.Triangle_2; import CGAL.Kernel.Segment_2;  import java.util.Iterator; import java.util.Collection; import CGAL.Java.JavaData;
public class CGAL_Alpha_shape_2JNI {

    static {
      try {
          System.loadLibrary("CGAL_Alpha_shape_2");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Alpha_shape_2 failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Object();
  public final static native boolean Object_is_Point_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Point_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Point_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Point_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Triangle_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Triangle_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Triangle_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Triangle_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Segment_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Segment_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Segment_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Segment_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Line_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Line_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Line_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Line_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Plane_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Plane_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Ray_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Ray_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Ray_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Ray_3(long jarg1, Object jarg1_);
  public final static native boolean Object_empty(long jarg1, Object jarg1_);
  public final static native void delete_Object(long jarg1);
  public final static native long new_Vertex_range__SWIG_0();
  public final static native long new_Vertex_range__SWIG_1(double jarg1, double jarg2);
  public final static native long new_Vertex_range__SWIG_2(long jarg1, Vertex_range jarg1_);
  public final static native void Vertex_range_first_set(long jarg1, Vertex_range jarg1_, double jarg2);
  public final static native double Vertex_range_first_get(long jarg1, Vertex_range jarg1_);
  public final static native void Vertex_range_second_set(long jarg1, Vertex_range jarg1_, double jarg2);
  public final static native double Vertex_range_second_get(long jarg1, Vertex_range jarg1_);
  public final static native void delete_Vertex_range(long jarg1);
  public final static native void Face_Interval_3_first_set(long jarg1, Face_Interval_3 jarg1_, double jarg2);
  public final static native double Face_Interval_3_first_get(long jarg1, Face_Interval_3 jarg1_);
  public final static native void Face_Interval_3_second_set(long jarg1, Face_Interval_3 jarg1_, double jarg2);
  public final static native double Face_Interval_3_second_get(long jarg1, Face_Interval_3 jarg1_);
  public final static native void Face_Interval_3_third_set(long jarg1, Face_Interval_3 jarg1_, double jarg2);
  public final static native double Face_Interval_3_third_get(long jarg1, Face_Interval_3 jarg1_);
  public final static native long new_Face_Interval_3__SWIG_0();
  public final static native long new_Face_Interval_3__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long Face_Interval_3_clone__SWIG_0(long jarg1, Face_Interval_3 jarg1_);
  public final static native void Face_Interval_3_clone__SWIG_1(long jarg1, Face_Interval_3 jarg1_, long jarg2, Face_Interval_3 jarg2_);
  public final static native void delete_Face_Interval_3(long jarg1);
  public final static native long new_Alpha_shape_2_Face_handle();
  public final static native int Alpha_shape_2_Face_handle_dimension(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native long Alpha_shape_2_Face_handle_vertex__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Alpha_shape_2_Face_handle_vertex__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Alpha_shape_2_Vertex_handle jarg3_);
  public final static native boolean Alpha_shape_2_Face_handle_has_vertex(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Alpha_shape_2_Face_handle_index__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_Face_handle_neighbor__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Alpha_shape_2_Face_handle_neighbor__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native boolean Alpha_shape_2_Face_handle_has_neighbor(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native int Alpha_shape_2_Face_handle_index__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native void Alpha_shape_2_Face_handle_set_vertex(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Alpha_shape_2_Vertex_handle jarg3_);
  public final static native void Alpha_shape_2_Face_handle_set_vertices__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_set_vertices__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_, long jarg4, Alpha_shape_2_Vertex_handle jarg4_);
  public final static native void Alpha_shape_2_Face_handle_set_neighbor(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Alpha_shape_2_Face_handle_set_neighbors__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_set_neighbors__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Face_handle jarg4_);
  public final static native void Alpha_shape_2_Face_handle_reorient(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_ccw_permute(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_cw_permute(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native boolean Alpha_shape_2_Face_handle_is_valid__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native boolean Alpha_shape_2_Face_handle_is_valid__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, boolean jarg2);
  public final static native boolean Alpha_shape_2_Face_handle_lt(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Alpha_shape_2_Face_handle_gt(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Alpha_shape_2_Face_handle_le(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Alpha_shape_2_Face_handle_ge(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Alpha_shape_2_Face_handle_equals(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Alpha_shape_2_Face_handle_not_equals(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native int Alpha_shape_2_Face_handle_hashCode(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native long Alpha_shape_2_Face_handle_clone__SWIG_0(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_clone__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_Face_handle_info(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Alpha_shape_2_Face_handle_get_info(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, JavaData jarg2_);
  public final static native void Alpha_shape_2_Face_handle_set_info(long jarg1, Alpha_shape_2_Face_handle jarg1_, long jarg2, JavaData jarg2_);
  public final static native double Alpha_shape_2_Face_handle_get_alpha(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native long Alpha_shape_2_Face_handle_get_ranges(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Alpha_shape_2_Face_handle_set_ranges(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Face_Interval_3 jarg3_);
  public final static native void Alpha_shape_2_Face_handle_set_alpha(long jarg1, Alpha_shape_2_Face_handle jarg1_, double jarg2);
  public final static native void delete_Alpha_shape_2_Face_handle(long jarg1);
  public final static native long new_Alpha_shape_2_Vertex_handle();
  public final static native long Alpha_shape_2_Vertex_handle_point__SWIG_0(long jarg1, Alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Alpha_shape_2_Vertex_handle_point__SWIG_1(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Alpha_shape_2_Vertex_handle_set_point(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_lt(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_gt(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_le(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_ge(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_equals(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_handle_not_equals(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Alpha_shape_2_Vertex_handle_hashCode(long jarg1, Alpha_shape_2_Vertex_handle jarg1_);
  public final static native long Alpha_shape_2_Vertex_handle_clone__SWIG_0(long jarg1, Alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Alpha_shape_2_Vertex_handle_clone__SWIG_1(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_Vertex_handle_get_range(long jarg1, Alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Alpha_shape_2_Vertex_handle_set_range(long jarg1, Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Vertex_range jarg2_);
  public final static native void delete_Alpha_shape_2_Vertex_handle(long jarg1);
  public final static native long new_Alpha_shape_2_Edge__SWIG_0();
  public final static native long new_Alpha_shape_2_Edge__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native long new_Alpha_shape_2_Edge__SWIG_2(long jarg1, Alpha_shape_2_Edge jarg1_);
  public final static native void Alpha_shape_2_Edge_first_set(long jarg1, Alpha_shape_2_Edge jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_Edge_first_get(long jarg1, Alpha_shape_2_Edge jarg1_);
  public final static native void Alpha_shape_2_Edge_second_set(long jarg1, Alpha_shape_2_Edge jarg1_, int jarg2);
  public final static native int Alpha_shape_2_Edge_second_get(long jarg1, Alpha_shape_2_Edge jarg1_);
  public final static native void delete_Alpha_shape_2_Edge(long jarg1);
  public final static native long new_Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2();
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_clear(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_dimension(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_number_of_vertices(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_number_of_faces(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_face__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_face__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_infinite__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_infinite__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_infinite__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_edge__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_face__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_, long jarg4, Alpha_shape_2_Vertex_handle jarg4_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_infinite__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_edge__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_, long jarg4, Ref_Alpha_shape_2_Face_handle jarg4_, long jarg5, Ref_int jarg5_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_includes_edge(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_, long jarg4, Ref_Alpha_shape_2_Vertex_handle jarg4_, long jarg5, Ref_Alpha_shape_2_Face_handle jarg5_, long jarg6, Ref_int jarg6_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_face__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_, long jarg4, Alpha_shape_2_Vertex_handle jarg4_, long jarg5, Ref_Alpha_shape_2_Face_handle jarg5_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Face_handle jarg4_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_oriented_side(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Point_2 jarg3_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_side_of_oriented_circle(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Ref_Locate_type_2 jarg3_, long jarg4, Ref_int jarg4_, long jarg5, Alpha_shape_2_Face_handle jarg5_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate__SWIG_4(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Ref_Locate_type_2 jarg3_, long jarg4, Ref_int jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_vertices(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_edges(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_faces(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_vertices(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_edges(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_faces(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_points(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_line_walk__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_line_walk__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_, long jarg4, Alpha_shape_2_Face_handle jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_faces__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_faces__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_faces__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_faces__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Face_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_edges__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_edges__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Edge_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_edges__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_edges__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Edge_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_vertices__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_vertices__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Vertex_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_vertices__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_vertices__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Vertex_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_mirror_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_mirror_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3, long jarg4, Alpha_shape_2_Vertex_handle jarg4_);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_mirror_index(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_ccw(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, int jarg2);
  public final static native int Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_cw(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, int jarg2);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_circumcenter__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_circumcenter__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Point_2 jarg3_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_set_infinite_vertex(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_valid__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_valid__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, boolean jarg2);
  public final static native boolean Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_valid__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, boolean jarg2, int jarg3);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_triangle__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_triangle__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Triangle_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_segment__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_segment__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3, long jarg4, Segment_2 jarg4_);
  public final static native long Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_segment__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native void Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_segment__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_, long jarg3, Segment_2 jarg3_);
  public final static native void delete_Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2(long jarg1);
  public final static native long new_Alpha_shape_2_All_vertices_iterator();
  public final static native long Alpha_shape_2_All_vertices_iterator_slow_next(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_All_vertices_iterator_next(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_All_vertices_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_All_vertices_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_vertices_iterator_hasNext(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native boolean Alpha_shape_2_All_vertices_iterator_equals(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_vertices_iterator_not_equals(long jarg1, Alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_All_vertices_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Finite_vertices_iterator();
  public final static native long Alpha_shape_2_Finite_vertices_iterator_slow_next(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_vertices_iterator_next(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_Finite_vertices_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_vertices_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_vertices_iterator_hasNext(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Finite_vertices_iterator_equals(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_vertices_iterator_not_equals(long jarg1, Alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Finite_vertices_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_All_faces_iterator();
  public final static native long Alpha_shape_2_All_faces_iterator_slow_next(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_);
  public final static native void Alpha_shape_2_All_faces_iterator_next(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_All_faces_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_);
  public final static native void Alpha_shape_2_All_faces_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Alpha_shape_2_All_faces_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_faces_iterator_hasNext(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_);
  public final static native boolean Alpha_shape_2_All_faces_iterator_equals(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Alpha_shape_2_All_faces_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_faces_iterator_not_equals(long jarg1, Alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Alpha_shape_2_All_faces_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_All_faces_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Finite_faces_iterator();
  public final static native long Alpha_shape_2_Finite_faces_iterator_slow_next(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_faces_iterator_next(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_Finite_faces_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_faces_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_faces_iterator_hasNext(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Finite_faces_iterator_equals(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_faces_iterator_not_equals(long jarg1, Alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Finite_faces_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_All_edges_iterator();
  public final static native long Alpha_shape_2_All_edges_iterator_slow_next(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_All_edges_iterator_next(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native long Alpha_shape_2_All_edges_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_All_edges_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Alpha_shape_2_All_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_edges_iterator_hasNext(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_);
  public final static native boolean Alpha_shape_2_All_edges_iterator_equals(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Alpha_shape_2_All_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_All_edges_iterator_not_equals(long jarg1, Alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Alpha_shape_2_All_edges_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_All_edges_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Finite_edges_iterator();
  public final static native long Alpha_shape_2_Finite_edges_iterator_slow_next(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_edges_iterator_next(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native long Alpha_shape_2_Finite_edges_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_Finite_edges_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_edges_iterator_hasNext(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Finite_edges_iterator_equals(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Finite_edges_iterator_not_equals(long jarg1, Alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Finite_edges_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Point_iterator();
  public final static native long Alpha_shape_2_Point_iterator_slow_next(long jarg1, Alpha_shape_2_Point_iterator jarg1_);
  public final static native void Alpha_shape_2_Point_iterator_next(long jarg1, Alpha_shape_2_Point_iterator jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Alpha_shape_2_Point_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Point_iterator jarg1_);
  public final static native void Alpha_shape_2_Point_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Point_iterator jarg1_, long jarg2, Alpha_shape_2_Point_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Point_iterator_hasNext(long jarg1, Alpha_shape_2_Point_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Point_iterator_equals(long jarg1, Alpha_shape_2_Point_iterator jarg1_, long jarg2, Alpha_shape_2_Point_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Point_iterator_not_equals(long jarg1, Alpha_shape_2_Point_iterator jarg1_, long jarg2, Alpha_shape_2_Point_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Point_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Line_face_circulator();
  public final static native long Alpha_shape_2_Line_face_circulator_slow_next(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_);
  public final static native void Alpha_shape_2_Line_face_circulator_next(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_Line_face_circulator_clone__SWIG_0(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_);
  public final static native void Alpha_shape_2_Line_face_circulator_clone__SWIG_1(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Alpha_shape_2_Line_face_circulator jarg2_);
  public final static native long Alpha_shape_2_Line_face_circulator_prev(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Line_face_circulator_hasNext(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Line_face_circulator_equals(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Alpha_shape_2_Line_face_circulator jarg2_);
  public final static native boolean Alpha_shape_2_Line_face_circulator_not_equals(long jarg1, Alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Alpha_shape_2_Line_face_circulator jarg2_);
  public final static native void delete_Alpha_shape_2_Line_face_circulator(long jarg1);
  public final static native long new_Alpha_shape_2_Face_circulator();
  public final static native long Alpha_shape_2_Face_circulator_slow_next(long jarg1, Alpha_shape_2_Face_circulator jarg1_);
  public final static native void Alpha_shape_2_Face_circulator_next(long jarg1, Alpha_shape_2_Face_circulator jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Alpha_shape_2_Face_circulator_clone__SWIG_0(long jarg1, Alpha_shape_2_Face_circulator jarg1_);
  public final static native void Alpha_shape_2_Face_circulator_clone__SWIG_1(long jarg1, Alpha_shape_2_Face_circulator jarg1_, long jarg2, Alpha_shape_2_Face_circulator jarg2_);
  public final static native long Alpha_shape_2_Face_circulator_prev(long jarg1, Alpha_shape_2_Face_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Face_circulator_hasNext(long jarg1, Alpha_shape_2_Face_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Face_circulator_equals(long jarg1, Alpha_shape_2_Face_circulator jarg1_, long jarg2, Alpha_shape_2_Face_circulator jarg2_);
  public final static native boolean Alpha_shape_2_Face_circulator_not_equals(long jarg1, Alpha_shape_2_Face_circulator jarg1_, long jarg2, Alpha_shape_2_Face_circulator jarg2_);
  public final static native void delete_Alpha_shape_2_Face_circulator(long jarg1);
  public final static native long new_Alpha_shape_2_Edge_circulator();
  public final static native long Alpha_shape_2_Edge_circulator_slow_next(long jarg1, Alpha_shape_2_Edge_circulator jarg1_);
  public final static native void Alpha_shape_2_Edge_circulator_next(long jarg1, Alpha_shape_2_Edge_circulator jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native long Alpha_shape_2_Edge_circulator_clone__SWIG_0(long jarg1, Alpha_shape_2_Edge_circulator jarg1_);
  public final static native void Alpha_shape_2_Edge_circulator_clone__SWIG_1(long jarg1, Alpha_shape_2_Edge_circulator jarg1_, long jarg2, Alpha_shape_2_Edge_circulator jarg2_);
  public final static native long Alpha_shape_2_Edge_circulator_prev(long jarg1, Alpha_shape_2_Edge_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Edge_circulator_hasNext(long jarg1, Alpha_shape_2_Edge_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Edge_circulator_equals(long jarg1, Alpha_shape_2_Edge_circulator jarg1_, long jarg2, Alpha_shape_2_Edge_circulator jarg2_);
  public final static native boolean Alpha_shape_2_Edge_circulator_not_equals(long jarg1, Alpha_shape_2_Edge_circulator jarg1_, long jarg2, Alpha_shape_2_Edge_circulator jarg2_);
  public final static native void delete_Alpha_shape_2_Edge_circulator(long jarg1);
  public final static native long new_Alpha_shape_2_Vertex_circulator();
  public final static native long Alpha_shape_2_Vertex_circulator_slow_next(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_);
  public final static native void Alpha_shape_2_Vertex_circulator_next(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_Vertex_circulator_clone__SWIG_0(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_);
  public final static native void Alpha_shape_2_Vertex_circulator_clone__SWIG_1(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Alpha_shape_2_Vertex_circulator jarg2_);
  public final static native long Alpha_shape_2_Vertex_circulator_prev(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Vertex_circulator_hasNext(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_);
  public final static native boolean Alpha_shape_2_Vertex_circulator_equals(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Alpha_shape_2_Vertex_circulator jarg2_);
  public final static native boolean Alpha_shape_2_Vertex_circulator_not_equals(long jarg1, Alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Alpha_shape_2_Vertex_circulator jarg2_);
  public final static native void delete_Alpha_shape_2_Vertex_circulator(long jarg1);
  public final static native long new_Ref_Alpha_shape_2_Face_handle__SWIG_0();
  public final static native long new_Ref_Alpha_shape_2_Face_handle__SWIG_1(long jarg1, Alpha_shape_2_Face_handle jarg1_);
  public final static native void Ref_Alpha_shape_2_Face_handle_set(long jarg1, Ref_Alpha_shape_2_Face_handle jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native long Ref_Alpha_shape_2_Face_handle_object(long jarg1, Ref_Alpha_shape_2_Face_handle jarg1_);
  public final static native long Ref_Alpha_shape_2_Face_handle_clone__SWIG_0(long jarg1, Ref_Alpha_shape_2_Face_handle jarg1_);
  public final static native void Ref_Alpha_shape_2_Face_handle_clone__SWIG_1(long jarg1, Ref_Alpha_shape_2_Face_handle jarg1_, long jarg2, Ref_Alpha_shape_2_Face_handle jarg2_);
  public final static native void delete_Ref_Alpha_shape_2_Face_handle(long jarg1);
  public final static native long new_Ref_Alpha_shape_2_Vertex_handle__SWIG_0();
  public final static native long new_Ref_Alpha_shape_2_Vertex_handle__SWIG_1(long jarg1, Alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Ref_Alpha_shape_2_Vertex_handle_set(long jarg1, Ref_Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Ref_Alpha_shape_2_Vertex_handle_object(long jarg1, Ref_Alpha_shape_2_Vertex_handle jarg1_);
  public final static native long Ref_Alpha_shape_2_Vertex_handle_clone__SWIG_0(long jarg1, Ref_Alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Ref_Alpha_shape_2_Vertex_handle_clone__SWIG_1(long jarg1, Ref_Alpha_shape_2_Vertex_handle jarg1_, long jarg2, Ref_Alpha_shape_2_Vertex_handle jarg2_);
  public final static native void delete_Ref_Alpha_shape_2_Vertex_handle(long jarg1);
  public final static native long new_Internal_Delaunay_Alpha_shape_2();
  public final static native long Internal_Delaunay_Alpha_shape_2_nearest_vertex__SWIG_0(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Delaunay_Alpha_shape_2_nearest_vertex__SWIG_1(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Alpha_shape_2_Face_handle jarg3_, long jarg4, Alpha_shape_2_Vertex_handle jarg4_);
  public final static native long Internal_Delaunay_Alpha_shape_2_nearest_vertex__SWIG_2(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Internal_Delaunay_Alpha_shape_2_nearest_vertex__SWIG_3(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Alpha_shape_2_Vertex_handle jarg3_);
  public final static native void Internal_Delaunay_Alpha_shape_2_get_conflicts_and_boundary(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Alpha_shape_2_Face_handle> jarg3, Collection<Alpha_shape_2_Edge> jarg4, long jarg5, Alpha_shape_2_Face_handle jarg5_);
  public final static native void Internal_Delaunay_Alpha_shape_2_get_conflicts(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Alpha_shape_2_Face_handle> jarg3, long jarg4, Alpha_shape_2_Face_handle jarg4_);
  public final static native void Internal_Delaunay_Alpha_shape_2_get_boundary_of_conflicts(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Alpha_shape_2_Edge> jarg3, long jarg4, Alpha_shape_2_Face_handle jarg4_);
  public final static native long Internal_Delaunay_Alpha_shape_2_dual__SWIG_0(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_Delaunay_Alpha_shape_2_dual__SWIG_1(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long Internal_Delaunay_Alpha_shape_2_dual__SWIG_2(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native void Internal_Delaunay_Alpha_shape_2_dual__SWIG_3(long jarg1, Internal_Delaunay_Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_, long jarg3, Object jarg3_);
  public final static native void delete_Internal_Delaunay_Alpha_shape_2(long jarg1);
  public final static native long new_Alpha_shape_2__SWIG_0();
  public final static native long new_Alpha_shape_2__SWIG_1(double jarg1);
  public final static native long new_Alpha_shape_2__SWIG_2(Iterator<Point_2> jarg1, double jarg2);
  public final static native long new_Alpha_shape_2__SWIG_3(double jarg1, int jarg2);
  public final static native long new_Alpha_shape_2__SWIG_4(Iterator<Point_2> jarg1, double jarg2, int jarg3);
  public final static native int Alpha_shape_2_set_mode__SWIG_0(long jarg1, Alpha_shape_2 jarg1_);
  public final static native int Alpha_shape_2_set_mode__SWIG_1(long jarg1, Alpha_shape_2 jarg1_, int jarg2);
  public final static native int Alpha_shape_2_get_mode(long jarg1, Alpha_shape_2 jarg1_);
  public final static native void Alpha_shape_2_clear(long jarg1, Alpha_shape_2 jarg1_);
  public final static native double Alpha_shape_2_set_alpha(long jarg1, Alpha_shape_2 jarg1_, double jarg2);
  public final static native double Alpha_shape_2_get_alpha(long jarg1, Alpha_shape_2 jarg1_);
  public final static native double Alpha_shape_2_get_nth_alpha(long jarg1, Alpha_shape_2 jarg1_, int jarg2);
  public final static native int Alpha_shape_2_number_of_alphas(long jarg1, Alpha_shape_2 jarg1_);
  public final static native int Alpha_shape_2_make_alpha_shape(long jarg1, Alpha_shape_2 jarg1_, Iterator<Point_2> jarg2);
  public final static native long Alpha_shape_2_alpha(long jarg1, Alpha_shape_2 jarg1_);
  public final static native long Alpha_shape_2_alpha_find(long jarg1, Alpha_shape_2 jarg1_, double jarg2);
  public final static native long Alpha_shape_2_alpha_lower_bound(long jarg1, Alpha_shape_2 jarg1_, double jarg2);
  public final static native long Alpha_shape_2_alpha_upper_bound(long jarg1, Alpha_shape_2 jarg1_, double jarg2);
  public final static native int Alpha_shape_2_number_of_solid_components__SWIG_0(long jarg1, Alpha_shape_2 jarg1_);
  public final static native int Alpha_shape_2_number_of_solid_components__SWIG_1(long jarg1, Alpha_shape_2 jarg1_, double jarg2);
  public final static native long Alpha_shape_2_find_optimal_alpha(long jarg1, Alpha_shape_2 jarg1_, int jarg2);
  public final static native long Alpha_shape_2_alpha_shape_vertices(long jarg1, Alpha_shape_2 jarg1_);
  public final static native long Alpha_shape_2_alpha_shape_edges(long jarg1, Alpha_shape_2 jarg1_);
  public final static native int Alpha_shape_2_classify__SWIG_0(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native int Alpha_shape_2_classify__SWIG_1(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_);
  public final static native int Alpha_shape_2_classify__SWIG_2(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native int Alpha_shape_2_classify__SWIG_3(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native int Alpha_shape_2_classify__SWIG_4(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Alpha_shape_2_classify__SWIG_5(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Point_2 jarg2_, double jarg3);
  public final static native int Alpha_shape_2_classify__SWIG_6(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, double jarg3);
  public final static native int Alpha_shape_2_classify__SWIG_7(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_, double jarg3);
  public final static native int Alpha_shape_2_classify__SWIG_8(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Face_handle jarg2_, int jarg3, double jarg4);
  public final static native int Alpha_shape_2_classify__SWIG_9(long jarg1, Alpha_shape_2 jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_, double jarg3);
  public final static native void delete_Alpha_shape_2(long jarg1);
  public final static native long new_Alpha_shape_2_Alpha_shape_vertices_iterator();
  public final static native long Alpha_shape_2_Alpha_shape_vertices_iterator_slow_next(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_Alpha_shape_vertices_iterator_next(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Alpha_shape_2_Alpha_shape_vertices_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native void Alpha_shape_2_Alpha_shape_vertices_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_shape_vertices_iterator_hasNext(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Alpha_shape_vertices_iterator_equals(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_shape_vertices_iterator_not_equals(long jarg1, Alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Alpha_shape_vertices_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Alpha_shape_edges_iterator();
  public final static native long Alpha_shape_2_Alpha_shape_edges_iterator_slow_next(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_Alpha_shape_edges_iterator_next(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Edge jarg2_);
  public final static native long Alpha_shape_2_Alpha_shape_edges_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native void Alpha_shape_2_Alpha_shape_edges_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_shape_edges_iterator_hasNext(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Alpha_shape_edges_iterator_equals(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_shape_edges_iterator_not_equals(long jarg1, Alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Alpha_shape_edges_iterator(long jarg1);
  public final static native long new_Alpha_shape_2_Alpha_iterator();
  public final static native double Alpha_shape_2_Alpha_iterator_slow_next(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_);
  public final static native long Alpha_shape_2_Alpha_iterator_clone__SWIG_0(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_);
  public final static native void Alpha_shape_2_Alpha_iterator_clone__SWIG_1(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_iterator_hasNext(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_);
  public final static native boolean Alpha_shape_2_Alpha_iterator_equals(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_iterator jarg2_);
  public final static native boolean Alpha_shape_2_Alpha_iterator_not_equals(long jarg1, Alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Alpha_shape_2_Alpha_iterator jarg2_);
  public final static native void delete_Alpha_shape_2_Alpha_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Face_handle();
  public final static native int Weighted_alpha_shape_2_Face_handle_dimension(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native long Weighted_alpha_shape_2_Face_handle_vertex__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Weighted_alpha_shape_2_Face_handle_vertex__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_has_vertex(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_Face_handle_index__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Face_handle_neighbor__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Weighted_alpha_shape_2_Face_handle_neighbor__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_has_neighbor(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_Face_handle_index__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_vertex(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_vertices__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_vertices__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Vertex_handle jarg4_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_neighbor(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_neighbors__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_neighbors__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Face_handle jarg4_);
  public final static native void Weighted_alpha_shape_2_Face_handle_reorient(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_ccw_permute(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_cw_permute(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_is_valid__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_is_valid__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, boolean jarg2);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_lt(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_gt(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_le(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_ge(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_equals(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_handle_not_equals(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_Face_handle_hashCode(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native long Weighted_alpha_shape_2_Face_handle_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Face_handle_info(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_handle_get_info(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, JavaData jarg2_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_info(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, JavaData jarg2_);
  public final static native double Weighted_alpha_shape_2_Face_handle_get_alpha(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native long Weighted_alpha_shape_2_Face_handle_get_ranges(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_ranges(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2, long jarg3, Face_Interval_3 jarg3_);
  public final static native void Weighted_alpha_shape_2_Face_handle_set_alpha(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, double jarg2);
  public final static native void delete_Weighted_alpha_shape_2_Face_handle(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Vertex_handle();
  public final static native long Weighted_alpha_shape_2_Vertex_handle_point__SWIG_0(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Vertex_handle_point__SWIG_1(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native void Weighted_alpha_shape_2_Vertex_handle_set_point(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_lt(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_gt(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_le(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_ge(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_equals(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_handle_not_equals(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_Vertex_handle_hashCode(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native long Weighted_alpha_shape_2_Vertex_handle_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Vertex_handle_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Vertex_handle_get_range(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Weighted_alpha_shape_2_Vertex_handle_set_range(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Vertex_range jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Vertex_handle(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Edge__SWIG_0();
  public final static native long new_Weighted_alpha_shape_2_Edge__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_, int jarg2);
  public final static native long new_Weighted_alpha_shape_2_Edge__SWIG_2(long jarg1, Weighted_alpha_shape_2_Edge jarg1_);
  public final static native void Weighted_alpha_shape_2_Edge_first_set(long jarg1, Weighted_alpha_shape_2_Edge jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Edge_first_get(long jarg1, Weighted_alpha_shape_2_Edge jarg1_);
  public final static native void Weighted_alpha_shape_2_Edge_second_set(long jarg1, Weighted_alpha_shape_2_Edge jarg1_, int jarg2);
  public final static native int Weighted_alpha_shape_2_Edge_second_get(long jarg1, Weighted_alpha_shape_2_Edge jarg1_);
  public final static native void delete_Weighted_alpha_shape_2_Edge(long jarg1);
  public final static native long new_Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2();
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_clear(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_dimension(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_number_of_vertices(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_number_of_faces(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_face__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_face__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_infinite__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_infinite__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_infinite__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_edge__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_face__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Vertex_handle jarg4_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_infinite__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_edge__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_, long jarg4, Ref_Weighted_alpha_shape_2_Face_handle jarg4_, long jarg5, Ref_int jarg5_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_includes_edge(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_, long jarg4, Ref_Weighted_alpha_shape_2_Vertex_handle jarg4_, long jarg5, Ref_Weighted_alpha_shape_2_Face_handle jarg5_, long jarg6, Ref_int jarg6_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_face__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Vertex_handle jarg4_, long jarg5, Ref_Weighted_alpha_shape_2_Face_handle jarg5_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Face_handle jarg4_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_oriented_side(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_side_of_oriented_circle(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Ref_Locate_type_2 jarg3_, long jarg4, Ref_int jarg4_, long jarg5, Weighted_alpha_shape_2_Face_handle jarg5_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate__SWIG_4(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Ref_Locate_type_2 jarg3_, long jarg4, Ref_int jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_vertices(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_edges(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_faces(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_vertices(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_edges(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_faces(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_points(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_line_walk__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_line_walk__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Weighted_point_2 jarg3_, long jarg4, Weighted_alpha_shape_2_Face_handle jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_faces__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_faces__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_faces__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_faces__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Face_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_edges__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_edges__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Edge_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_edges__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_edges__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Edge_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_vertices__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_vertices__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Vertex_circulator jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_vertices__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_vertices__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, long jarg3, Weighted_alpha_shape_2_Face_handle jarg3_, long jarg4, Weighted_alpha_shape_2_Vertex_circulator jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_mirror_vertex__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_mirror_vertex__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3, long jarg4, Weighted_alpha_shape_2_Vertex_handle jarg4_);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_mirror_index(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_ccw(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, int jarg2);
  public final static native int Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_cw(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, int jarg2);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_circumcenter__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_circumcenter__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_set_infinite_vertex(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_valid__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_valid__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, boolean jarg2);
  public final static native boolean Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_valid__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, boolean jarg2, int jarg3);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_triangle__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_triangle__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Triangle_2 jarg3_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_segment__SWIG_0(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_segment__SWIG_1(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3, long jarg4, Segment_2 jarg4_);
  public final static native long Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_segment__SWIG_2(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native void Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_segment__SWIG_3(long jarg1, Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_, long jarg3, Segment_2 jarg3_);
  public final static native void delete_Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_All_vertices_iterator();
  public final static native long Weighted_alpha_shape_2_All_vertices_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_vertices_iterator_next(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_All_vertices_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_vertices_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_vertices_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_All_vertices_iterator_equals(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_vertices_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_All_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_vertices_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_All_vertices_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Finite_vertices_iterator();
  public final static native long Weighted_alpha_shape_2_Finite_vertices_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_vertices_iterator_next(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Finite_vertices_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_vertices_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_vertices_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Finite_vertices_iterator_equals(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_vertices_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Finite_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_vertices_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Finite_vertices_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_All_faces_iterator();
  public final static native long Weighted_alpha_shape_2_All_faces_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_faces_iterator_next(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_All_faces_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_faces_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_faces_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_faces_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_All_faces_iterator_equals(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_faces_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_faces_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_All_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_faces_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_All_faces_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Finite_faces_iterator();
  public final static native long Weighted_alpha_shape_2_Finite_faces_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_faces_iterator_next(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Finite_faces_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_faces_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_faces_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Finite_faces_iterator_equals(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_faces_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Finite_faces_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_faces_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Finite_faces_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_All_edges_iterator();
  public final static native long Weighted_alpha_shape_2_All_edges_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_edges_iterator_next(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native long Weighted_alpha_shape_2_All_edges_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_All_edges_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_edges_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_All_edges_iterator_equals(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_All_edges_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_All_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_All_edges_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_All_edges_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Finite_edges_iterator();
  public final static native long Weighted_alpha_shape_2_Finite_edges_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_edges_iterator_next(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native long Weighted_alpha_shape_2_Finite_edges_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Finite_edges_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_edges_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Finite_edges_iterator_equals(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Finite_edges_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Finite_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Finite_edges_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Finite_edges_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Point_iterator();
  public final static native long Weighted_alpha_shape_2_Point_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Point_iterator_next(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native long Weighted_alpha_shape_2_Point_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Point_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Point_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Point_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Point_iterator_equals(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Point_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Point_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Point_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Point_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Point_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Line_face_circulator();
  public final static native long Weighted_alpha_shape_2_Line_face_circulator_slow_next(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Line_face_circulator_next(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Line_face_circulator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Line_face_circulator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Line_face_circulator jarg2_);
  public final static native long Weighted_alpha_shape_2_Line_face_circulator_prev(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Line_face_circulator_hasNext(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Line_face_circulator_equals(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Line_face_circulator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Line_face_circulator_not_equals(long jarg1, Weighted_alpha_shape_2_Line_face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Line_face_circulator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Line_face_circulator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Face_circulator();
  public final static native long Weighted_alpha_shape_2_Face_circulator_slow_next(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_circulator_next(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Face_circulator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Face_circulator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_circulator jarg2_);
  public final static native long Weighted_alpha_shape_2_Face_circulator_prev(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Face_circulator_hasNext(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Face_circulator_equals(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_circulator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Face_circulator_not_equals(long jarg1, Weighted_alpha_shape_2_Face_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Face_circulator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Face_circulator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Edge_circulator();
  public final static native long Weighted_alpha_shape_2_Edge_circulator_slow_next(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Edge_circulator_next(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native long Weighted_alpha_shape_2_Edge_circulator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Edge_circulator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge_circulator jarg2_);
  public final static native long Weighted_alpha_shape_2_Edge_circulator_prev(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Edge_circulator_hasNext(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Edge_circulator_equals(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge_circulator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Edge_circulator_not_equals(long jarg1, Weighted_alpha_shape_2_Edge_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge_circulator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Edge_circulator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Vertex_circulator();
  public final static native long Weighted_alpha_shape_2_Vertex_circulator_slow_next(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Vertex_circulator_next(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Vertex_circulator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_);
  public final static native void Weighted_alpha_shape_2_Vertex_circulator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_circulator jarg2_);
  public final static native long Weighted_alpha_shape_2_Vertex_circulator_prev(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_circulator_hasNext(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_circulator_equals(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_circulator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Vertex_circulator_not_equals(long jarg1, Weighted_alpha_shape_2_Vertex_circulator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_circulator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Vertex_circulator(long jarg1);
  public final static native long new_Ref_Weighted_alpha_shape_2_Face_handle__SWIG_0();
  public final static native long new_Ref_Weighted_alpha_shape_2_Face_handle__SWIG_1(long jarg1, Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Ref_Weighted_alpha_shape_2_Face_handle_set(long jarg1, Ref_Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native long Ref_Weighted_alpha_shape_2_Face_handle_object(long jarg1, Ref_Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native long Ref_Weighted_alpha_shape_2_Face_handle_clone__SWIG_0(long jarg1, Ref_Weighted_alpha_shape_2_Face_handle jarg1_);
  public final static native void Ref_Weighted_alpha_shape_2_Face_handle_clone__SWIG_1(long jarg1, Ref_Weighted_alpha_shape_2_Face_handle jarg1_, long jarg2, Ref_Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void delete_Ref_Weighted_alpha_shape_2_Face_handle(long jarg1);
  public final static native long new_Ref_Weighted_alpha_shape_2_Vertex_handle__SWIG_0();
  public final static native long new_Ref_Weighted_alpha_shape_2_Vertex_handle__SWIG_1(long jarg1, Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Ref_Weighted_alpha_shape_2_Vertex_handle_set(long jarg1, Ref_Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Ref_Weighted_alpha_shape_2_Vertex_handle_object(long jarg1, Ref_Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native long Ref_Weighted_alpha_shape_2_Vertex_handle_clone__SWIG_0(long jarg1, Ref_Weighted_alpha_shape_2_Vertex_handle jarg1_);
  public final static native void Ref_Weighted_alpha_shape_2_Vertex_handle_clone__SWIG_1(long jarg1, Ref_Weighted_alpha_shape_2_Vertex_handle jarg1_, long jarg2, Ref_Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native void delete_Ref_Weighted_alpha_shape_2_Vertex_handle(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Hidden_vertices_iterator();
  public final static native long Weighted_alpha_shape_2_Hidden_vertices_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Hidden_vertices_iterator_next(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Hidden_vertices_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Hidden_vertices_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Hidden_vertices_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Hidden_vertices_iterator_equals(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Hidden_vertices_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Hidden_vertices_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Hidden_vertices_iterator(long jarg1);
  public final static native long new_Internal_regular_Weighted_alpha_shape_2();
  public final static native int Internal_regular_Weighted_alpha_shape_2_number_of_hidden_vertices(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_regular_Weighted_alpha_shape_2_hidden_vertices(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_);
  public final static native long Internal_regular_Weighted_alpha_shape_2_weighted_circumcenter__SWIG_0(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_regular_Weighted_alpha_shape_2_weighted_circumcenter__SWIG_1(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native long Internal_regular_Weighted_alpha_shape_2_dual__SWIG_0(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native void Internal_regular_Weighted_alpha_shape_2_dual__SWIG_1(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native long Internal_regular_Weighted_alpha_shape_2_dual__SWIG_2(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native void Internal_regular_Weighted_alpha_shape_2_dual__SWIG_3(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_, long jarg3, Object jarg3_);
  public final static native int Internal_regular_Weighted_alpha_shape_2_power_test(long jarg1, Internal_regular_Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, long jarg3, Weighted_point_2 jarg3_);
  public final static native void delete_Internal_regular_Weighted_alpha_shape_2(long jarg1);
  public final static native long new_Weighted_alpha_shape_2__SWIG_0();
  public final static native long new_Weighted_alpha_shape_2__SWIG_1(double jarg1);
  public final static native long new_Weighted_alpha_shape_2__SWIG_2(Iterator<Weighted_point_2> jarg1, double jarg2);
  public final static native long new_Weighted_alpha_shape_2__SWIG_3(double jarg1, int jarg2);
  public final static native long new_Weighted_alpha_shape_2__SWIG_4(Iterator<Weighted_point_2> jarg1, double jarg2, int jarg3);
  public final static native int Weighted_alpha_shape_2_set_mode__SWIG_0(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native int Weighted_alpha_shape_2_set_mode__SWIG_1(long jarg1, Weighted_alpha_shape_2 jarg1_, int jarg2);
  public final static native int Weighted_alpha_shape_2_get_mode(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native void Weighted_alpha_shape_2_clear(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native double Weighted_alpha_shape_2_set_alpha(long jarg1, Weighted_alpha_shape_2 jarg1_, double jarg2);
  public final static native double Weighted_alpha_shape_2_get_alpha(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native double Weighted_alpha_shape_2_get_nth_alpha(long jarg1, Weighted_alpha_shape_2 jarg1_, int jarg2);
  public final static native int Weighted_alpha_shape_2_number_of_alphas(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native int Weighted_alpha_shape_2_make_alpha_shape(long jarg1, Weighted_alpha_shape_2 jarg1_, Iterator<Weighted_point_2> jarg2);
  public final static native long Weighted_alpha_shape_2_alpha(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native long Weighted_alpha_shape_2_alpha_find(long jarg1, Weighted_alpha_shape_2 jarg1_, double jarg2);
  public final static native long Weighted_alpha_shape_2_alpha_lower_bound(long jarg1, Weighted_alpha_shape_2 jarg1_, double jarg2);
  public final static native long Weighted_alpha_shape_2_alpha_upper_bound(long jarg1, Weighted_alpha_shape_2 jarg1_, double jarg2);
  public final static native int Weighted_alpha_shape_2_number_of_solid_components__SWIG_0(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native int Weighted_alpha_shape_2_number_of_solid_components__SWIG_1(long jarg1, Weighted_alpha_shape_2 jarg1_, double jarg2);
  public final static native long Weighted_alpha_shape_2_find_optimal_alpha(long jarg1, Weighted_alpha_shape_2 jarg1_, int jarg2);
  public final static native long Weighted_alpha_shape_2_alpha_shape_vertices(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native long Weighted_alpha_shape_2_alpha_shape_edges(long jarg1, Weighted_alpha_shape_2 jarg1_);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_0(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_1(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_2(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_3(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_4(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_5(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, double jarg3);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_6(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, double jarg3);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_7(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_, double jarg3);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_8(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Face_handle jarg2_, int jarg3, double jarg4);
  public final static native int Weighted_alpha_shape_2_classify__SWIG_9(long jarg1, Weighted_alpha_shape_2 jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_, double jarg3);
  public final static native void delete_Weighted_alpha_shape_2(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Alpha_shape_vertices_iterator();
  public final static native long Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_next(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Vertex_handle jarg2_);
  public final static native long Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_equals(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_vertices_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Alpha_shape_vertices_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Alpha_shape_edges_iterator();
  public final static native long Weighted_alpha_shape_2_Alpha_shape_edges_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Alpha_shape_edges_iterator_next(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Edge jarg2_);
  public final static native long Weighted_alpha_shape_2_Alpha_shape_edges_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Alpha_shape_edges_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_edges_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_edges_iterator_equals(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_shape_edges_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_shape_edges_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Alpha_shape_edges_iterator(long jarg1);
  public final static native long new_Weighted_alpha_shape_2_Alpha_iterator();
  public final static native double Weighted_alpha_shape_2_Alpha_iterator_slow_next(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_);
  public final static native long Weighted_alpha_shape_2_Alpha_iterator_clone__SWIG_0(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_);
  public final static native void Weighted_alpha_shape_2_Alpha_iterator_clone__SWIG_1(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_iterator_hasNext(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_iterator_equals(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_iterator jarg2_);
  public final static native boolean Weighted_alpha_shape_2_Alpha_iterator_not_equals(long jarg1, Weighted_alpha_shape_2_Alpha_iterator jarg1_, long jarg2, Weighted_alpha_shape_2_Alpha_iterator jarg2_);
  public final static native void delete_Weighted_alpha_shape_2_Alpha_iterator(long jarg1);
  public final static native long Internal_Delaunay_Alpha_shape_2_SWIGUpcast(long jarg1);
  public final static native long Alpha_shape_2_SWIGUpcast(long jarg1);
  public final static native long Internal_regular_Weighted_alpha_shape_2_SWIGUpcast(long jarg1);
  public final static native long Weighted_alpha_shape_2_SWIGUpcast(long jarg1);
}
