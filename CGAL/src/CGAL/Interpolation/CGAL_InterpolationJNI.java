/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Interpolation;
import CGAL.Triangulation_2.Delaunay_triangulation_2; import CGAL.Triangulation_3.Delaunay_triangulation_3; import CGAL.Triangulation_2.Regular_triangulation_2; import CGAL.Kernel.Point_2; import CGAL.Kernel.Point_3; import CGAL.Kernel.Vector_3; import CGAL.Kernel.Vector_2; import CGAL.Kernel.Weighted_point_2; import java.util.Collection; import CGAL.Triangulation_2.Delaunay_triangulation_2_Face_handle; import CGAL.Triangulation_2.Delaunay_triangulation_2_Vertex_handle; import CGAL.Triangulation_2.Regular_triangulation_2_Face_handle; import CGAL.Triangulation_2.Regular_triangulation_2_Vertex_handle; import java.util.Iterator; import CGAL.Triangulation_2.Delaunay_triangulation_2_Edge; import CGAL.Triangulation_2.Regular_triangulation_2_Edge; import CGAL.Triangulation_3.Delaunay_triangulation_3_Cell_handle;
public class CGAL_InterpolationJNI {

    static {
      try {
          System.loadLibrary("CGAL_Interpolation");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Interpolation failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Double_and_bool__SWIG_0();
  public final static native long new_Double_and_bool__SWIG_1(double jarg1, boolean jarg2);
  public final static native long new_Double_and_bool__SWIG_2(long jarg1, Double_and_bool jarg1_);
  public final static native void Double_and_bool_first_set(long jarg1, Double_and_bool jarg1_, double jarg2);
  public final static native double Double_and_bool_first_get(long jarg1, Double_and_bool jarg1_);
  public final static native void Double_and_bool_second_set(long jarg1, Double_and_bool jarg1_, boolean jarg2);
  public final static native boolean Double_and_bool_second_get(long jarg1, Double_and_bool jarg1_);
  public final static native void delete_Double_and_bool(long jarg1);
  public final static native void Double_bool_bool_first_set(long jarg1, Double_bool_bool jarg1_, double jarg2);
  public final static native double Double_bool_bool_first_get(long jarg1, Double_bool_bool jarg1_);
  public final static native void Double_bool_bool_second_set(long jarg1, Double_bool_bool jarg1_, boolean jarg2);
  public final static native boolean Double_bool_bool_second_get(long jarg1, Double_bool_bool jarg1_);
  public final static native void Double_bool_bool_third_set(long jarg1, Double_bool_bool jarg1_, boolean jarg2);
  public final static native boolean Double_bool_bool_third_get(long jarg1, Double_bool_bool jarg1_);
  public final static native long new_Double_bool_bool__SWIG_0();
  public final static native long new_Double_bool_bool__SWIG_1(double jarg1, boolean jarg2, boolean jarg3);
  public final static native long Double_bool_bool_clone__SWIG_0(long jarg1, Double_bool_bool jarg1_);
  public final static native void Double_bool_bool_clone__SWIG_1(long jarg1, Double_bool_bool jarg1_, long jarg2, Double_bool_bool jarg2_);
  public final static native void delete_Double_bool_bool(long jarg1);
  public final static native long new_Point_2_and_double__SWIG_0();
  public final static native long new_Point_2_and_double__SWIG_1(long jarg1, Point_2 jarg1_, double jarg2);
  public final static native long new_Point_2_and_double__SWIG_2(long jarg1, Point_2_and_double jarg1_);
  public final static native void Point_2_and_double_first_set(long jarg1, Point_2_and_double jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Point_2_and_double_first_get(long jarg1, Point_2_and_double jarg1_);
  public final static native void Point_2_and_double_second_set(long jarg1, Point_2_and_double jarg1_, double jarg2);
  public final static native double Point_2_and_double_second_get(long jarg1, Point_2_and_double jarg1_);
  public final static native void delete_Point_2_and_double(long jarg1);
  public final static native long new_Weighted_point_2_and_double__SWIG_0();
  public final static native long new_Weighted_point_2_and_double__SWIG_1(long jarg1, Weighted_point_2 jarg1_, double jarg2);
  public final static native long new_Weighted_point_2_and_double__SWIG_2(long jarg1, Weighted_point_2_and_double jarg1_);
  public final static native void Weighted_point_2_and_double_first_set(long jarg1, Weighted_point_2_and_double jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native long Weighted_point_2_and_double_first_get(long jarg1, Weighted_point_2_and_double jarg1_);
  public final static native void Weighted_point_2_and_double_second_set(long jarg1, Weighted_point_2_and_double jarg1_, double jarg2);
  public final static native double Weighted_point_2_and_double_second_get(long jarg1, Weighted_point_2_and_double jarg1_);
  public final static native void delete_Weighted_point_2_and_double(long jarg1);
  public final static native long new_Point_3_and_double__SWIG_0();
  public final static native long new_Point_3_and_double__SWIG_1(long jarg1, Point_3 jarg1_, double jarg2);
  public final static native long new_Point_3_and_double__SWIG_2(long jarg1, Point_3_and_double jarg1_);
  public final static native void Point_3_and_double_first_set(long jarg1, Point_3_and_double jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Point_3_and_double_first_get(long jarg1, Point_3_and_double jarg1_);
  public final static native void Point_3_and_double_second_set(long jarg1, Point_3_and_double jarg1_, double jarg2);
  public final static native double Point_3_and_double_second_get(long jarg1, Point_3_and_double jarg1_);
  public final static native void delete_Point_3_and_double(long jarg1);
  public final static native long new_Data_access_double_2();
  public final static native void Data_access_double_2_set(long jarg1, Data_access_double_2 jarg1_, long jarg2, Point_2 jarg2_, double jarg3);
  public final static native double Data_access_double_2_get(long jarg1, Data_access_double_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void delete_Data_access_double_2(long jarg1);
  public final static native long new_Data_access_vector_2();
  public final static native void Data_access_vector_2_set(long jarg1, Data_access_vector_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Vector_2 jarg3_);
  public final static native long Data_access_vector_2_get(long jarg1, Data_access_vector_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void delete_Data_access_vector_2(long jarg1);
  public final static native long natural_neighbor_coordinates_2__SWIG_0(long jarg1, Delaunay_triangulation_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Point_2_and_double> jarg3, long jarg4, Delaunay_triangulation_2_Face_handle jarg4_);
  public final static native long natural_neighbor_coordinates_2__SWIG_1(long jarg1, Delaunay_triangulation_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Point_2_and_double> jarg3);
  public final static native long natural_neighbor_coordinates_2__SWIG_2(long jarg1, Delaunay_triangulation_2 jarg1_, long jarg2, Point_2 jarg2_, Collection<Point_2_and_double> jarg3, Iterator<Delaunay_triangulation_2_Edge> jarg4);
  public final static native long natural_neighbor_coordinates_2__SWIG_3(long jarg1, Delaunay_triangulation_2 jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_, Collection<Point_2_and_double> jarg3);
  public final static native long regular_neighbor_coordinates_2__SWIG_0(long jarg1, Regular_triangulation_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, Collection<Weighted_point_2_and_double> jarg3, long jarg4, Regular_triangulation_2_Face_handle jarg4_);
  public final static native long regular_neighbor_coordinates_2__SWIG_1(long jarg1, Regular_triangulation_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, Collection<Weighted_point_2_and_double> jarg3);
  public final static native long regular_neighbor_coordinates_2__SWIG_2(long jarg1, Regular_triangulation_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, Collection<Weighted_point_2_and_double> jarg3, Iterator<Regular_triangulation_2_Edge> jarg4, Iterator<Regular_triangulation_2_Vertex_handle> jarg5);
  public final static native long regular_neighbor_coordinates_2__SWIG_3(long jarg1, Regular_triangulation_2 jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_, Collection<Weighted_point_2_and_double> jarg3);
  public final static native void surface_neighbors_3__SWIG_0(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3> jarg4);
  public final static native boolean surface_neighbors_certified_3__SWIG_0(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3> jarg4);
  public final static native boolean surface_neighbors_certified_3__SWIG_1(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, double jarg4, Collection<Point_3> jarg5);
  public final static native void surface_neighbors_3__SWIG_1(long jarg1, Delaunay_triangulation_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3> jarg4, long jarg5, Delaunay_triangulation_3_Cell_handle jarg5_);
  public final static native void surface_neighbors_3__SWIG_2(long jarg1, Delaunay_triangulation_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3> jarg4);
  public final static native long surface_neighbor_coordinates_3__SWIG_0(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3_and_double> jarg4);
  public final static native long surface_neighbor_coordinates_certified_3__SWIG_0(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3_and_double> jarg4);
  public final static native long surface_neighbor_coordinates_certified_3__SWIG_1(Iterator<Point_3> jarg1, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, double jarg4, Collection<Point_3_and_double> jarg5);
  public final static native long surface_neighbor_coordinates_3__SWIG_1(long jarg1, Delaunay_triangulation_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3_and_double> jarg4, long jarg5, Delaunay_triangulation_3_Cell_handle jarg5_);
  public final static native long surface_neighbor_coordinates_3__SWIG_2(long jarg1, Delaunay_triangulation_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Vector_3 jarg3_, Collection<Point_3_and_double> jarg4);
  public final static native double linear_interpolation(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Data_access_double_2 jarg3_);
  public final static native long quadratic_interpolation(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Point_2 jarg3_, long jarg4, Data_access_double_2 jarg4_, long jarg5, Data_access_vector_2 jarg5_);
  public final static native long sibson_c1_interpolation(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Point_2 jarg3_, long jarg4, Data_access_double_2 jarg4_, long jarg5, Data_access_vector_2 jarg5_);
  public final static native long sibson_c1_interpolation_square(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Point_2 jarg3_, long jarg4, Data_access_double_2 jarg4_, long jarg5, Data_access_vector_2 jarg5_);
  public final static native long farin_c1_interpolation(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Point_2 jarg3_, long jarg4, Data_access_double_2 jarg4_, long jarg5, Data_access_vector_2 jarg5_);
  public final static native long sibson_gradient_fitting(Iterator<Point_2_and_double> jarg1, double jarg2, long jarg3, Point_2 jarg3_, long jarg4, Data_access_double_2 jarg4_);
  public final static native void sibson_gradient_fitting_nn_2(long jarg1, Delaunay_triangulation_2 jarg1_, long jarg2, Data_access_vector_2 jarg2_, long jarg3, Data_access_double_2 jarg3_);
  public final static native void sibson_gradient_fitting_rn_2(long jarg1, Regular_triangulation_2 jarg1_, long jarg2, Data_access_vector_2 jarg2_, long jarg3, Data_access_double_2 jarg3_);
}
