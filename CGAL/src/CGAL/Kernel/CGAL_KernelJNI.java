/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Kernel;
import java.util.Iterator; import java.util.Collection;
public class CGAL_KernelJNI {

    static {
      try {
          System.loadLibrary("CGAL_Kernel");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Kernel failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Point_2__SWIG_0();
  public final static native long new_Point_2__SWIG_1(long jarg1, Origin jarg1_);
  public final static native long new_Point_2__SWIG_2(double jarg1, double jarg2);
  public final static native double Point_2_x(long jarg1, Point_2 jarg1_);
  public final static native double Point_2_y(long jarg1, Point_2 jarg1_);
  public final static native long Point_2_bbox__SWIG_0(long jarg1, Point_2 jarg1_);
  public final static native void Point_2_bbox__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native void Point_2_set_coordinates(long jarg1, Point_2 jarg1_, double jarg2, double jarg3);
  public final static native String Point_2_toString(long jarg1, Point_2 jarg1_);
  public final static native long Point_2_minus__SWIG_0(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Point_2_plus(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Point_2_minus__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Point_2_minus__SWIG_2(long jarg1, Point_2 jarg1_, long jarg2, Origin jarg2_);
  public final static native boolean Point_2_equals__SWIG_0(long jarg1, Point_2 jarg1_, long jarg2, Origin jarg2_);
  public final static native boolean Point_2_lt(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Point_2_gt(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Point_2_le(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Point_2_ge(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Point_2_equals__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Point_2_not_equals(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Point_2_iplus(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Point_2_iminus(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Point_2_clone__SWIG_0(long jarg1, Point_2 jarg1_);
  public final static native void Point_2_clone__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void delete_Point_2(long jarg1);
  public final static native long new_Weighted_point_2__SWIG_0();
  public final static native long new_Weighted_point_2__SWIG_1(double jarg1, double jarg2);
  public final static native long new_Weighted_point_2__SWIG_2(long jarg1, Point_2 jarg1_, double jarg2);
  public final static native double Weighted_point_2_weight(long jarg1, Weighted_point_2 jarg1_);
  public final static native double Weighted_point_2_x(long jarg1, Weighted_point_2 jarg1_);
  public final static native double Weighted_point_2_y(long jarg1, Weighted_point_2 jarg1_);
  public final static native long Weighted_point_2_point(long jarg1, Weighted_point_2 jarg1_);
  public final static native boolean Weighted_point_2_equals(long jarg1, Weighted_point_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native boolean Weighted_point_2_not_equals(long jarg1, Weighted_point_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native String Weighted_point_2_toString(long jarg1, Weighted_point_2 jarg1_);
  public final static native long Weighted_point_2_clone__SWIG_0(long jarg1, Weighted_point_2 jarg1_);
  public final static native void Weighted_point_2_clone__SWIG_1(long jarg1, Weighted_point_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native void delete_Weighted_point_2(long jarg1);
  public final static native long new_Segment_2__SWIG_0();
  public final static native long new_Segment_2__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Segment_2_source__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_source__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Segment_2_target__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_target__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Segment_2_min__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_min__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Segment_2_max__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_max__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Segment_2_vertex__SWIG_0(long jarg1, Segment_2 jarg1_, int jarg2);
  public final static native void Segment_2_vertex__SWIG_1(long jarg1, Segment_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native long Segment_2_point__SWIG_0(long jarg1, Segment_2 jarg1_, int jarg2);
  public final static native void Segment_2_point__SWIG_1(long jarg1, Segment_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native double Segment_2_squared_length(long jarg1, Segment_2 jarg1_);
  public final static native long Segment_2_opposite__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_opposite__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long Segment_2_direction__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_direction__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long Segment_2_to_vector__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_to_vector__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Segment_2_supporting_line__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_supporting_line__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long Segment_2_bbox__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_bbox__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Segment_2_is_degenerate(long jarg1, Segment_2 jarg1_);
  public final static native boolean Segment_2_is_horizontal(long jarg1, Segment_2 jarg1_);
  public final static native boolean Segment_2_is_vertical(long jarg1, Segment_2 jarg1_);
  public final static native boolean Segment_2_has_on(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Segment_2_collinear_has_on(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Segment_2_equals(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean Segment_2_not_equals(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native String Segment_2_toString(long jarg1, Segment_2 jarg1_);
  public final static native long Segment_2_clone__SWIG_0(long jarg1, Segment_2 jarg1_);
  public final static native void Segment_2_clone__SWIG_1(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native void delete_Segment_2(long jarg1);
  public final static native long new_Triangle_2__SWIG_0();
  public final static native long new_Triangle_2__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long Triangle_2_vertex__SWIG_0(long jarg1, Triangle_2 jarg1_, int jarg2);
  public final static native void Triangle_2_vertex__SWIG_1(long jarg1, Triangle_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native boolean Triangle_2_is_degenerate(long jarg1, Triangle_2 jarg1_);
  public final static native boolean Triangle_2_has_on_positive_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Triangle_2_has_on_negative_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Triangle_2_has_on_boundary(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Triangle_2_has_on_bounded_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Triangle_2_has_on_unbounded_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native int Triangle_2_orientation(long jarg1, Triangle_2 jarg1_);
  public final static native int Triangle_2_oriented_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native int Triangle_2_bounded_side(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Triangle_2_opposite__SWIG_0(long jarg1, Triangle_2 jarg1_);
  public final static native void Triangle_2_opposite__SWIG_1(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double Triangle_2_area(long jarg1, Triangle_2 jarg1_);
  public final static native long Triangle_2_bbox__SWIG_0(long jarg1, Triangle_2 jarg1_);
  public final static native void Triangle_2_bbox__SWIG_1(long jarg1, Triangle_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Triangle_2_equals(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean Triangle_2_not_equals(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native String Triangle_2_toString(long jarg1, Triangle_2 jarg1_);
  public final static native long Triangle_2_clone__SWIG_0(long jarg1, Triangle_2 jarg1_);
  public final static native void Triangle_2_clone__SWIG_1(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native void delete_Triangle_2(long jarg1);
  public final static native long new_Ray_2__SWIG_0(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long new_Ray_2__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long new_Ray_2__SWIG_2(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long new_Ray_2__SWIG_3(long jarg1, Point_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long Ray_2_source__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_source__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Ray_2_point__SWIG_0(long jarg1, Ray_2 jarg1_, int jarg2);
  public final static native void Ray_2_point__SWIG_1(long jarg1, Ray_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native long Ray_2_direction__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_direction__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long Ray_2_to_vector__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_to_vector__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Ray_2_supporting_line__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_supporting_line__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long Ray_2_opposite__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_opposite__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean Ray_2_is_degenerate(long jarg1, Ray_2 jarg1_);
  public final static native boolean Ray_2_is_horizontal(long jarg1, Ray_2 jarg1_);
  public final static native boolean Ray_2_is_vertical(long jarg1, Ray_2 jarg1_);
  public final static native boolean Ray_2_has_on(long jarg1, Ray_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Ray_2_collinear_has_on(long jarg1, Ray_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Ray_2_equals(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean Ray_2_not_equals(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native String Ray_2_toString(long jarg1, Ray_2 jarg1_);
  public final static native long Ray_2_clone__SWIG_0(long jarg1, Ray_2 jarg1_);
  public final static native void Ray_2_clone__SWIG_1(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native void delete_Ray_2(long jarg1);
  public final static native long new_Direction_2__SWIG_0(double jarg1, double jarg2);
  public final static native long new_Direction_2__SWIG_1(long jarg1, Vector_2 jarg1_);
  public final static native long new_Direction_2__SWIG_2(long jarg1, Line_2 jarg1_);
  public final static native long new_Direction_2__SWIG_3(long jarg1, Ray_2 jarg1_);
  public final static native long new_Direction_2__SWIG_4(long jarg1, Segment_2 jarg1_);
  public final static native double Direction_2_delta(long jarg1, Direction_2 jarg1_, int jarg2);
  public final static native double Direction_2_dx(long jarg1, Direction_2 jarg1_);
  public final static native double Direction_2_dy(long jarg1, Direction_2 jarg1_);
  public final static native boolean Direction_2_counterclockwise_in_between(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_, long jarg3, Direction_2 jarg3_);
  public final static native long Direction_2_vector__SWIG_0(long jarg1, Direction_2 jarg1_);
  public final static native void Direction_2_vector__SWIG_1(long jarg1, Direction_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native boolean Direction_2_lt(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native boolean Direction_2_gt(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native boolean Direction_2_le(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native boolean Direction_2_ge(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native boolean Direction_2_equals(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native boolean Direction_2_not_equals(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long Direction_2_minus__SWIG_0(long jarg1, Direction_2 jarg1_);
  public final static native void Direction_2_minus__SWIG_1(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native String Direction_2_toString(long jarg1, Direction_2 jarg1_);
  public final static native long Direction_2_clone__SWIG_0(long jarg1, Direction_2 jarg1_);
  public final static native void Direction_2_clone__SWIG_1(long jarg1, Direction_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native void delete_Direction_2(long jarg1);
  public final static native long new_Line_2__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_Line_2__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long new_Line_2__SWIG_2(long jarg1, Point_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long new_Line_2__SWIG_3(long jarg1, Point_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long new_Line_2__SWIG_4(long jarg1, Segment_2 jarg1_);
  public final static native long new_Line_2__SWIG_5(long jarg1, Ray_2 jarg1_);
  public final static native double Line_2_a(long jarg1, Line_2 jarg1_);
  public final static native double Line_2_b(long jarg1, Line_2 jarg1_);
  public final static native double Line_2_c(long jarg1, Line_2 jarg1_);
  public final static native long Line_2_point__SWIG_0(long jarg1, Line_2 jarg1_, int jarg2);
  public final static native void Line_2_point__SWIG_1(long jarg1, Line_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native long Line_2_projection__SWIG_0(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Line_2_projection__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native double Line_2_x_at_y(long jarg1, Line_2 jarg1_, double jarg2);
  public final static native double Line_2_y_at_x(long jarg1, Line_2 jarg1_, double jarg2);
  public final static native boolean Line_2_is_degenerate(long jarg1, Line_2 jarg1_);
  public final static native boolean Line_2_is_horizontal(long jarg1, Line_2 jarg1_);
  public final static native boolean Line_2_is_vertical(long jarg1, Line_2 jarg1_);
  public final static native int Line_2_oriented_side(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Line_2_has_on(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Line_2_has_on_positive_side(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Line_2_has_on_negative_side(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Line_2_to_vector__SWIG_0(long jarg1, Line_2 jarg1_);
  public final static native void Line_2_to_vector__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Line_2_direction__SWIG_0(long jarg1, Line_2 jarg1_);
  public final static native void Line_2_direction__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long Line_2_opposite__SWIG_0(long jarg1, Line_2 jarg1_);
  public final static native void Line_2_opposite__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long Line_2_perpendicular__SWIG_0(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Line_2_perpendicular__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Line_2 jarg3_);
  public final static native boolean Line_2_equals(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean Line_2_not_equals(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native String Line_2_toString(long jarg1, Line_2 jarg1_);
  public final static native long Line_2_clone__SWIG_0(long jarg1, Line_2 jarg1_);
  public final static native void Line_2_clone__SWIG_1(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native void delete_Line_2(long jarg1);
  public final static native long new_Vector_2__SWIG_0();
  public final static native long new_Vector_2__SWIG_1(long jarg1, Null_vector jarg1_);
  public final static native long new_Vector_2__SWIG_2(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long new_Vector_2__SWIG_3(long jarg1, Segment_2 jarg1_);
  public final static native long new_Vector_2__SWIG_4(long jarg1, Ray_2 jarg1_);
  public final static native long new_Vector_2__SWIG_5(long jarg1, Line_2 jarg1_);
  public final static native long new_Vector_2__SWIG_6(int jarg1, int jarg2);
  public final static native long new_Vector_2__SWIG_7(double jarg1, double jarg2);
  public final static native double Vector_2_x(long jarg1, Vector_2 jarg1_);
  public final static native double Vector_2_y(long jarg1, Vector_2 jarg1_);
  public final static native double Vector_2_cartesian(long jarg1, Vector_2 jarg1_, int jarg2);
  public final static native int Vector_2_dimension(long jarg1, Vector_2 jarg1_);
  public final static native long Vector_2_direction__SWIG_0(long jarg1, Vector_2 jarg1_);
  public final static native void Vector_2_direction__SWIG_1(long jarg1, Vector_2 jarg1_, long jarg2, Direction_2 jarg2_);
  public final static native long Vector_2_perpendicular__SWIG_0(long jarg1, Vector_2 jarg1_, int jarg2);
  public final static native void Vector_2_perpendicular__SWIG_1(long jarg1, Vector_2 jarg1_, int jarg2, long jarg3, Vector_2 jarg3_);
  public final static native double Vector_2_squared_length(long jarg1, Vector_2 jarg1_);
  public final static native long Vector_2_plus(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_minus__SWIG_0(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_minus__SWIG_1(long jarg1, Vector_2 jarg1_);
  public final static native double Vector_2_times__SWIG_0(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_times__SWIG_1(long jarg1, Vector_2 jarg1_, double jarg2);
  public final static native long Vector_2_div(long jarg1, Vector_2 jarg1_, double jarg2);
  public final static native boolean Vector_2_equals__SWIG_0(long jarg1, Vector_2 jarg1_, long jarg2, Null_vector jarg2_);
  public final static native boolean Vector_2_equals__SWIG_1(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native boolean Vector_2_not_equals(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_iplus(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_iminus(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Vector_2_itimes(long jarg1, Vector_2 jarg1_, double jarg2);
  public final static native long Vector_2_idiv(long jarg1, Vector_2 jarg1_, double jarg2);
  public final static native String Vector_2_toString(long jarg1, Vector_2 jarg1_);
  public final static native long Vector_2_clone__SWIG_0(long jarg1, Vector_2 jarg1_);
  public final static native void Vector_2_clone__SWIG_1(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native void Vector_2_normalize(long jarg1, Vector_2 jarg1_);
  public final static native void delete_Vector_2(long jarg1);
  public final static native long new_Point_3__SWIG_0();
  public final static native long new_Point_3__SWIG_1(long jarg1, Origin jarg1_);
  public final static native long new_Point_3__SWIG_2(double jarg1, double jarg2, double jarg3);
  public final static native double Point_3_x(long jarg1, Point_3 jarg1_);
  public final static native double Point_3_y(long jarg1, Point_3 jarg1_);
  public final static native double Point_3_z(long jarg1, Point_3 jarg1_);
  public final static native long Point_3_bbox__SWIG_0(long jarg1, Point_3 jarg1_);
  public final static native void Point_3_bbox__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native void Point_3_set_coordinates(long jarg1, Point_3 jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native String Point_3_toString(long jarg1, Point_3 jarg1_);
  public final static native long Point_3_minus__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Point_3_plus(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Point_3_minus__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Point_3_minus__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Origin jarg2_);
  public final static native boolean Point_3_equals__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Origin jarg2_);
  public final static native boolean Point_3_lt(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Point_3_gt(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Point_3_le(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Point_3_ge(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Point_3_equals__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Point_3_not_equals(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Point_3_iplus(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Point_3_iminus(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Point_3_clone__SWIG_0(long jarg1, Point_3 jarg1_);
  public final static native void Point_3_clone__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void delete_Point_3(long jarg1);
  public final static native long new_Weighted_point_3__SWIG_0();
  public final static native long new_Weighted_point_3__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_Weighted_point_3__SWIG_2(long jarg1, Point_3 jarg1_, double jarg2);
  public final static native double Weighted_point_3_weight(long jarg1, Weighted_point_3 jarg1_);
  public final static native double Weighted_point_3_x(long jarg1, Weighted_point_3 jarg1_);
  public final static native double Weighted_point_3_y(long jarg1, Weighted_point_3 jarg1_);
  public final static native double Weighted_point_3_z(long jarg1, Weighted_point_3 jarg1_);
  public final static native long Weighted_point_3_point(long jarg1, Weighted_point_3 jarg1_);
  public final static native boolean Weighted_point_3_equals(long jarg1, Weighted_point_3 jarg1_, long jarg2, Weighted_point_3 jarg2_);
  public final static native boolean Weighted_point_3_not_equals(long jarg1, Weighted_point_3 jarg1_, long jarg2, Weighted_point_3 jarg2_);
  public final static native String Weighted_point_3_toString(long jarg1, Weighted_point_3 jarg1_);
  public final static native long Weighted_point_3_clone__SWIG_0(long jarg1, Weighted_point_3 jarg1_);
  public final static native void Weighted_point_3_clone__SWIG_1(long jarg1, Weighted_point_3 jarg1_, long jarg2, Weighted_point_3 jarg2_);
  public final static native void delete_Weighted_point_3(long jarg1);
  public final static native long new_Plane_3__SWIG_0();
  public final static native long new_Plane_3__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Plane_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long new_Plane_3__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long new_Plane_3__SWIG_4(long jarg1, Point_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long new_Plane_3__SWIG_5(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Plane_3__SWIG_6(long jarg1, Ray_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Plane_3__SWIG_7(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Plane_3_a(long jarg1, Plane_3 jarg1_);
  public final static native double Plane_3_b(long jarg1, Plane_3 jarg1_);
  public final static native double Plane_3_c(long jarg1, Plane_3 jarg1_);
  public final static native double Plane_3_d(long jarg1, Plane_3 jarg1_);
  public final static native long Plane_3_projection__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void Plane_3_projection__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long Plane_3_opposite__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_opposite__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long Plane_3_point__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_point__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Plane_3_orthogonal_vector__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_orthogonal_vector__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Plane_3_perpendicular_line__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void Plane_3_perpendicular_line__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Line_3 jarg3_);
  public final static native long Plane_3_orthogonal_direction__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_orthogonal_direction__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long Plane_3_base1__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_base1__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Plane_3_base2__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_base2__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Plane_3_to_2d__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void Plane_3_to_2d__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long Plane_3_to_3d__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Plane_3_to_3d__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native int Plane_3_oriented_side(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Plane_3_has_on__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Plane_3_has_on_positive_side(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Plane_3_has_on_negative_side(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Plane_3_has_on__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean Plane_3_is_degenerate(long jarg1, Plane_3 jarg1_);
  public final static native boolean Plane_3_equals(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean Plane_3_not_equals(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native String Plane_3_toString(long jarg1, Plane_3 jarg1_);
  public final static native long Plane_3_clone__SWIG_0(long jarg1, Plane_3 jarg1_);
  public final static native void Plane_3_clone__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native void delete_Plane_3(long jarg1);
  public final static native long new_Segment_3__SWIG_0();
  public final static native long new_Segment_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_source__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_source__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_target__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_target__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_min__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_min__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_max__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_max__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_vertex__SWIG_0(long jarg1, Segment_3 jarg1_, int jarg2);
  public final static native void Segment_3_vertex__SWIG_1(long jarg1, Segment_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native long Segment_3_point__SWIG_0(long jarg1, Segment_3 jarg1_, int jarg2);
  public final static native void Segment_3_point__SWIG_1(long jarg1, Segment_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native double Segment_3_squared_length(long jarg1, Segment_3 jarg1_);
  public final static native long Segment_3_opposite__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_opposite__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean Segment_3_is_degenerate(long jarg1, Segment_3 jarg1_);
  public final static native boolean Segment_3_has_on(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Segment_3_to_vector__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_to_vector__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Segment_3_direction__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_direction__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long Segment_3_supporting_line__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_supporting_line__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long Segment_3_bbox__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_bbox__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Segment_3_equals(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean Segment_3_not_equals(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native String Segment_3_toString(long jarg1, Segment_3 jarg1_);
  public final static native long Segment_3_clone__SWIG_0(long jarg1, Segment_3 jarg1_);
  public final static native void Segment_3_clone__SWIG_1(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native void delete_Segment_3(long jarg1);
  public final static native long new_Line_3__SWIG_0();
  public final static native long new_Line_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Line_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long new_Line_3__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long new_Line_3__SWIG_4(long jarg1, Segment_3 jarg1_);
  public final static native long new_Line_3__SWIG_5(long jarg1, Ray_3 jarg1_);
  public final static native long Line_3_projection__SWIG_0(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void Line_3_projection__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long Line_3_point__SWIG_0(long jarg1, Line_3 jarg1_, int jarg2);
  public final static native void Line_3_point__SWIG_1(long jarg1, Line_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native boolean Line_3_is_degenerate(long jarg1, Line_3 jarg1_);
  public final static native boolean Line_3_has_on(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Line_3_perpendicular_plane__SWIG_0(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native void Line_3_perpendicular_plane__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Plane_3 jarg3_);
  public final static native long Line_3_opposite__SWIG_0(long jarg1, Line_3 jarg1_);
  public final static native void Line_3_opposite__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long Line_3_to_vector__SWIG_0(long jarg1, Line_3 jarg1_);
  public final static native void Line_3_to_vector__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Line_3_direction__SWIG_0(long jarg1, Line_3 jarg1_);
  public final static native void Line_3_direction__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native boolean Line_3_equals(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean Line_3_not_equals(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native String Line_3_toString(long jarg1, Line_3 jarg1_);
  public final static native long Line_3_clone__SWIG_0(long jarg1, Line_3 jarg1_);
  public final static native void Line_3_clone__SWIG_1(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native void delete_Line_3(long jarg1);
  public final static native long new_Sphere_3__SWIG_0(long jarg1, Point_3 jarg1_, double jarg2, int jarg3);
  public final static native long new_Sphere_3__SWIG_1(long jarg1, Point_3 jarg1_, double jarg2);
  public final static native long new_Sphere_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_, long jarg4, Point_3 jarg4_);
  public final static native long new_Sphere_3__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_, int jarg4);
  public final static native long new_Sphere_3__SWIG_4(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long new_Sphere_3__SWIG_5(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, int jarg3);
  public final static native long new_Sphere_3__SWIG_6(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Sphere_3__SWIG_7(long jarg1, Point_3 jarg1_);
  public final static native long Sphere_3_center__SWIG_0(long jarg1, Sphere_3 jarg1_);
  public final static native void Sphere_3_center__SWIG_1(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Sphere_3_squared_radius(long jarg1, Sphere_3 jarg1_);
  public final static native int Sphere_3_orientation(long jarg1, Sphere_3 jarg1_);
  public final static native boolean Sphere_3_is_degenerate(long jarg1, Sphere_3 jarg1_);
  public final static native int Sphere_3_oriented_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native int Sphere_3_bounded_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on_positive_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on_negative_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on_boundary(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on_bounded_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on_unbounded_side(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Sphere_3_has_on(long jarg1, Sphere_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Sphere_3_opposite__SWIG_0(long jarg1, Sphere_3 jarg1_);
  public final static native void Sphere_3_opposite__SWIG_1(long jarg1, Sphere_3 jarg1_, long jarg2, Sphere_3 jarg2_);
  public final static native long Sphere_3_bbox__SWIG_0(long jarg1, Sphere_3 jarg1_);
  public final static native void Sphere_3_bbox__SWIG_1(long jarg1, Sphere_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Sphere_3_equals(long jarg1, Sphere_3 jarg1_, long jarg2, Sphere_3 jarg2_);
  public final static native boolean Sphere_3_not_equals(long jarg1, Sphere_3 jarg1_, long jarg2, Sphere_3 jarg2_);
  public final static native String Sphere_3_toString(long jarg1, Sphere_3 jarg1_);
  public final static native long Sphere_3_clone__SWIG_0(long jarg1, Sphere_3 jarg1_);
  public final static native void Sphere_3_clone__SWIG_1(long jarg1, Sphere_3 jarg1_, long jarg2, Sphere_3 jarg2_);
  public final static native void delete_Sphere_3(long jarg1);
  public final static native long new_Triangle_3__SWIG_0();
  public final static native long new_Triangle_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long Triangle_3_vertex__SWIG_0(long jarg1, Triangle_3 jarg1_, int jarg2);
  public final static native void Triangle_3_vertex__SWIG_1(long jarg1, Triangle_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native long Triangle_3_supporting_plane(long jarg1, Triangle_3 jarg1_);
  public final static native boolean Triangle_3_is_degenerate(long jarg1, Triangle_3 jarg1_);
  public final static native boolean Triangle_3_has_on(long jarg1, Triangle_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Triangle_3_squared_area(long jarg1, Triangle_3 jarg1_);
  public final static native long Triangle_3_bbox__SWIG_0(long jarg1, Triangle_3 jarg1_);
  public final static native void Triangle_3_bbox__SWIG_1(long jarg1, Triangle_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Triangle_3_equals(long jarg1, Triangle_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean Triangle_3_not_equals(long jarg1, Triangle_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native String Triangle_3_toString(long jarg1, Triangle_3 jarg1_);
  public final static native long Triangle_3_clone__SWIG_0(long jarg1, Triangle_3 jarg1_);
  public final static native void Triangle_3_clone__SWIG_1(long jarg1, Triangle_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native void delete_Triangle_3(long jarg1);
  public final static native long new_Ray_3__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Ray_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long new_Ray_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long new_Ray_3__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long Ray_3_source__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_source__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Ray_3_point__SWIG_0(long jarg1, Ray_3 jarg1_, int jarg2);
  public final static native void Ray_3_point__SWIG_1(long jarg1, Ray_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native long Ray_3_direction__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_direction__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long Ray_3_to_vector__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_to_vector__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Ray_3_supporting_line__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_supporting_line__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long Ray_3_opposite__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_opposite__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean Ray_3_is_degenerate(long jarg1, Ray_3 jarg1_);
  public final static native boolean Ray_3_has_on(long jarg1, Ray_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Ray_3_equals(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean Ray_3_not_equals(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native String Ray_3_toString(long jarg1, Ray_3 jarg1_);
  public final static native long Ray_3_clone__SWIG_0(long jarg1, Ray_3 jarg1_);
  public final static native void Ray_3_clone__SWIG_1(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native void delete_Ray_3(long jarg1);
  public final static native long new_Direction_3__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_Direction_3__SWIG_1(long jarg1, Vector_3 jarg1_);
  public final static native long new_Direction_3__SWIG_2(long jarg1, Line_3 jarg1_);
  public final static native long new_Direction_3__SWIG_3(long jarg1, Ray_3 jarg1_);
  public final static native long new_Direction_3__SWIG_4(long jarg1, Segment_3 jarg1_);
  public final static native double Direction_3_delta(long jarg1, Direction_3 jarg1_, int jarg2);
  public final static native double Direction_3_dx(long jarg1, Direction_3 jarg1_);
  public final static native double Direction_3_dy(long jarg1, Direction_3 jarg1_);
  public final static native double Direction_3_dz(long jarg1, Direction_3 jarg1_);
  public final static native long Direction_3_vector__SWIG_0(long jarg1, Direction_3 jarg1_);
  public final static native void Direction_3_vector__SWIG_1(long jarg1, Direction_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native boolean Direction_3_equals(long jarg1, Direction_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native boolean Direction_3_not_equals(long jarg1, Direction_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native long Direction_3_minus__SWIG_0(long jarg1, Direction_3 jarg1_);
  public final static native void Direction_3_minus__SWIG_1(long jarg1, Direction_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native String Direction_3_toString(long jarg1, Direction_3 jarg1_);
  public final static native long Direction_3_clone__SWIG_0(long jarg1, Direction_3 jarg1_);
  public final static native void Direction_3_clone__SWIG_1(long jarg1, Direction_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native void delete_Direction_3(long jarg1);
  public final static native long new_Tetrahedron_3__SWIG_0();
  public final static native long new_Tetrahedron_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_, long jarg4, Point_3 jarg4_);
  public final static native long Tetrahedron_3_vertex__SWIG_0(long jarg1, Tetrahedron_3 jarg1_, int jarg2);
  public final static native void Tetrahedron_3_vertex__SWIG_1(long jarg1, Tetrahedron_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native boolean Tetrahedron_3_is_degenerate(long jarg1, Tetrahedron_3 jarg1_);
  public final static native boolean Tetrahedron_3_has_on_positive_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Tetrahedron_3_has_on_negative_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Tetrahedron_3_has_on_boundary(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Tetrahedron_3_has_on_bounded_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Tetrahedron_3_has_on_unbounded_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native int Tetrahedron_3_orientation(long jarg1, Tetrahedron_3 jarg1_);
  public final static native int Tetrahedron_3_oriented_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native int Tetrahedron_3_bounded_side(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Tetrahedron_3_volume(long jarg1, Tetrahedron_3 jarg1_);
  public final static native long Tetrahedron_3_bbox__SWIG_0(long jarg1, Tetrahedron_3 jarg1_);
  public final static native void Tetrahedron_3_bbox__SWIG_1(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Tetrahedron_3_equals(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Tetrahedron_3 jarg2_);
  public final static native boolean Tetrahedron_3_not_equals(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Tetrahedron_3 jarg2_);
  public final static native String Tetrahedron_3_toString(long jarg1, Tetrahedron_3 jarg1_);
  public final static native long Tetrahedron_3_clone__SWIG_0(long jarg1, Tetrahedron_3 jarg1_);
  public final static native void Tetrahedron_3_clone__SWIG_1(long jarg1, Tetrahedron_3 jarg1_, long jarg2, Tetrahedron_3 jarg2_);
  public final static native void delete_Tetrahedron_3(long jarg1);
  public final static native long new_Vector_3__SWIG_0();
  public final static native long new_Vector_3__SWIG_1(long jarg1, Null_vector jarg1_);
  public final static native long new_Vector_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Vector_3__SWIG_3(long jarg1, Segment_3 jarg1_);
  public final static native long new_Vector_3__SWIG_4(long jarg1, Ray_3 jarg1_);
  public final static native long new_Vector_3__SWIG_5(long jarg1, Line_3 jarg1_);
  public final static native long new_Vector_3__SWIG_6(int jarg1, int jarg2, int jarg3);
  public final static native long new_Vector_3__SWIG_7(double jarg1, double jarg2, double jarg3);
  public final static native double Vector_3_x(long jarg1, Vector_3 jarg1_);
  public final static native double Vector_3_y(long jarg1, Vector_3 jarg1_);
  public final static native double Vector_3_z(long jarg1, Vector_3 jarg1_);
  public final static native double Vector_3_cartesian(long jarg1, Vector_3 jarg1_, int jarg2);
  public final static native long Vector_3_direction__SWIG_0(long jarg1, Vector_3 jarg1_);
  public final static native void Vector_3_direction__SWIG_1(long jarg1, Vector_3 jarg1_, long jarg2, Direction_3 jarg2_);
  public final static native double Vector_3_squared_length(long jarg1, Vector_3 jarg1_);
  public final static native int Vector_3_dimension(long jarg1, Vector_3 jarg1_);
  public final static native long Vector_3_plus(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_minus__SWIG_0(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_minus__SWIG_1(long jarg1, Vector_3 jarg1_);
  public final static native double Vector_3_times__SWIG_0(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_times__SWIG_1(long jarg1, Vector_3 jarg1_, double jarg2);
  public final static native long Vector_3_div(long jarg1, Vector_3 jarg1_, double jarg2);
  public final static native boolean Vector_3_equals__SWIG_0(long jarg1, Vector_3 jarg1_, long jarg2, Null_vector jarg2_);
  public final static native boolean Vector_3_equals__SWIG_1(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native boolean Vector_3_not_equals(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_iplus(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_iminus(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Vector_3_itimes(long jarg1, Vector_3 jarg1_, double jarg2);
  public final static native long Vector_3_idiv(long jarg1, Vector_3 jarg1_, double jarg2);
  public final static native void Vector_3_set_coordinates(long jarg1, Vector_3 jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native String Vector_3_toString(long jarg1, Vector_3 jarg1_);
  public final static native long Vector_3_clone__SWIG_0(long jarg1, Vector_3 jarg1_);
  public final static native void Vector_3_clone__SWIG_1(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native void Vector_3_normalize(long jarg1, Vector_3 jarg1_);
  public final static native void delete_Vector_3(long jarg1);
  public final static native long new_Bbox_2__SWIG_0();
  public final static native long new_Bbox_2__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native int Bbox_2_dimension(long jarg1, Bbox_2 jarg1_);
  public final static native double Bbox_2_xmin(long jarg1, Bbox_2 jarg1_);
  public final static native double Bbox_2_ymin(long jarg1, Bbox_2 jarg1_);
  public final static native double Bbox_2_xmax(long jarg1, Bbox_2 jarg1_);
  public final static native double Bbox_2_ymax(long jarg1, Bbox_2 jarg1_);
  public final static native double Bbox_2_min(long jarg1, Bbox_2 jarg1_, int jarg2);
  public final static native double Bbox_2_max(long jarg1, Bbox_2 jarg1_, int jarg2);
  public final static native long Bbox_2_plus(long jarg1, Bbox_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native long Bbox_2_iplus(long jarg1, Bbox_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Bbox_2_equals(long jarg1, Bbox_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Bbox_2_not_equals(long jarg1, Bbox_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native String Bbox_2_toString(long jarg1, Bbox_2 jarg1_);
  public final static native long Bbox_2_clone__SWIG_0(long jarg1, Bbox_2 jarg1_);
  public final static native void Bbox_2_clone__SWIG_1(long jarg1, Bbox_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native void delete_Bbox_2(long jarg1);
  public final static native long new_Bbox_3__SWIG_0();
  public final static native long new_Bbox_3__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native int Bbox_3_dimension(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_xmin(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_ymin(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_zmin(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_xmax(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_ymax(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_zmax(long jarg1, Bbox_3 jarg1_);
  public final static native double Bbox_3_min(long jarg1, Bbox_3 jarg1_, int jarg2);
  public final static native double Bbox_3_max(long jarg1, Bbox_3 jarg1_, int jarg2);
  public final static native long Bbox_3_plus(long jarg1, Bbox_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native long Bbox_3_iplus(long jarg1, Bbox_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Bbox_3_equals(long jarg1, Bbox_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Bbox_3_not_equals(long jarg1, Bbox_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native String Bbox_3_toString(long jarg1, Bbox_3 jarg1_);
  public final static native long Bbox_3_clone__SWIG_0(long jarg1, Bbox_3 jarg1_);
  public final static native void Bbox_3_clone__SWIG_1(long jarg1, Bbox_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native void delete_Bbox_3(long jarg1);
  public final static native long new_Object();
  public final static native boolean Object_is_Point_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Point_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Point_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Point_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Triangle_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Triangle_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Triangle_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Triangle_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Segment_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Segment_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Segment_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Segment_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Line_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Line_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Line_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Line_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Plane_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Plane_3(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Ray_2(long jarg1, Object jarg1_);
  public final static native long Object_get_Ray_2(long jarg1, Object jarg1_);
  public final static native boolean Object_is_Ray_3(long jarg1, Object jarg1_);
  public final static native long Object_get_Ray_3(long jarg1, Object jarg1_);
  public final static native boolean Object_empty(long jarg1, Object jarg1_);
  public final static native void delete_Object(long jarg1);
  public final static native long new_Polygon_2__SWIG_0();
  public final static native void Polygon_2_set(long jarg1, Polygon_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native int Polygon_2_insert__SWIG_0(long jarg1, Polygon_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native void Polygon_2_push_back(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Polygon_2_clear(long jarg1, Polygon_2 jarg1_);
  public final static native void Polygon_2_reverse_orientation(long jarg1, Polygon_2 jarg1_);
  public final static native void Polygon_2_erase__SWIG_0(long jarg1, Polygon_2 jarg1_, int jarg2);
  public final static native void Polygon_2_erase__SWIG_1(long jarg1, Polygon_2 jarg1_, int jarg2, int jarg3);
  public final static native boolean Polygon_2_is_simple(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_is_convex(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_orientation(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_oriented_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native int Polygon_2_bounded_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double Polygon_2_area(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_left_vertex(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_right_vertex(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_top_vertex(long jarg1, Polygon_2 jarg1_);
  public final static native int Polygon_2_bottom_vertex(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_is_counterclockwise_oriented(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_is_clockwise_oriented(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_is_collinear_oriented(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_has_on_positive_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Polygon_2_has_on_negative_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Polygon_2_has_on_boundary(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Polygon_2_has_on_bounded_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Polygon_2_has_on_unbounded_side(long jarg1, Polygon_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Polygon_2_vertex__SWIG_0(long jarg1, Polygon_2 jarg1_, int jarg2);
  public final static native void Polygon_2_vertex__SWIG_1(long jarg1, Polygon_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native long Polygon_2_edge__SWIG_0(long jarg1, Polygon_2 jarg1_, int jarg2);
  public final static native void Polygon_2_edge__SWIG_1(long jarg1, Polygon_2 jarg1_, int jarg2, long jarg3, Segment_2 jarg3_);
  public final static native int Polygon_2_size(long jarg1, Polygon_2 jarg1_);
  public final static native boolean Polygon_2_is_empty(long jarg1, Polygon_2 jarg1_);
  public final static native long Polygon_2_bbox__SWIG_0(long jarg1, Polygon_2 jarg1_);
  public final static native void Polygon_2_bbox__SWIG_1(long jarg1, Polygon_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Polygon_2_equals(long jarg1, Polygon_2 jarg1_, long jarg2, Polygon_2 jarg2_);
  public final static native boolean Polygon_2_not_equals(long jarg1, Polygon_2 jarg1_, long jarg2, Polygon_2 jarg2_);
  public final static native String Polygon_2_toString(long jarg1, Polygon_2 jarg1_);
  public final static native long Polygon_2_clone__SWIG_0(long jarg1, Polygon_2 jarg1_);
  public final static native void Polygon_2_clone__SWIG_1(long jarg1, Polygon_2 jarg1_, long jarg2, Polygon_2 jarg2_);
  public final static native void Polygon_2_insert__SWIG_1(long jarg1, Polygon_2 jarg1_, int jarg2, Iterator<Point_2> jarg3);
  public final static native long new_Polygon_2__SWIG_1(Iterator<Point_2> jarg1);
  public final static native long Polygon_2_vertices(long jarg1, Polygon_2 jarg1_);
  public final static native long Polygon_2_edges(long jarg1, Polygon_2 jarg1_);
  public final static native long Polygon_2_vertices_circulator(long jarg1, Polygon_2 jarg1_);
  public final static native long Polygon_2_edges_circulator(long jarg1, Polygon_2 jarg1_);
  public final static native void delete_Polygon_2(long jarg1);
  public final static native double squared_distance__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double squared_distance__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native double squared_distance__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native double squared_distance__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native double squared_distance__SWIG_4(long jarg1, Point_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native double squared_distance__SWIG_5(long jarg1, Plane_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double squared_distance__SWIG_6(long jarg1, Plane_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native double squared_distance__SWIG_7(long jarg1, Plane_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native double squared_distance__SWIG_8(long jarg1, Plane_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native double squared_distance__SWIG_9(long jarg1, Segment_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double squared_distance__SWIG_10(long jarg1, Segment_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native double squared_distance__SWIG_11(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native double squared_distance__SWIG_12(long jarg1, Segment_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native double squared_distance__SWIG_13(long jarg1, Segment_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native double squared_distance__SWIG_14(long jarg1, Line_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double squared_distance__SWIG_15(long jarg1, Line_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native double squared_distance__SWIG_16(long jarg1, Line_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native double squared_distance__SWIG_17(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native double squared_distance__SWIG_18(long jarg1, Line_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native double squared_distance__SWIG_19(long jarg1, Ray_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double squared_distance__SWIG_20(long jarg1, Ray_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native double squared_distance__SWIG_21(long jarg1, Ray_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native double squared_distance__SWIG_22(long jarg1, Ray_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native double squared_distance__SWIG_23(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native double squared_distance__SWIG_24(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double squared_distance__SWIG_25(long jarg1, Point_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native double squared_distance__SWIG_26(long jarg1, Point_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double squared_distance__SWIG_27(long jarg1, Point_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native double squared_distance__SWIG_28(long jarg1, Point_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native double squared_distance__SWIG_29(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native double squared_distance__SWIG_30(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double squared_distance__SWIG_31(long jarg1, Segment_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double squared_distance__SWIG_32(long jarg1, Segment_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native double squared_distance__SWIG_33(long jarg1, Segment_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native double squared_distance__SWIG_34(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double squared_distance__SWIG_35(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double squared_distance__SWIG_36(long jarg1, Triangle_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native double squared_distance__SWIG_37(long jarg1, Triangle_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native double squared_distance__SWIG_38(long jarg1, Triangle_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native double squared_distance__SWIG_39(long jarg1, Line_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double squared_distance__SWIG_40(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double squared_distance__SWIG_41(long jarg1, Line_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native double squared_distance__SWIG_42(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native double squared_distance__SWIG_43(long jarg1, Line_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native double squared_distance__SWIG_44(long jarg1, Ray_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native double squared_distance__SWIG_45(long jarg1, Ray_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double squared_distance__SWIG_46(long jarg1, Ray_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native double squared_distance__SWIG_47(long jarg1, Ray_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native double squared_distance__SWIG_48(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean do_intersect__SWIG_2(long jarg1, Plane_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_3(long jarg1, Plane_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_4(long jarg1, Plane_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_5(long jarg1, Plane_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_6(long jarg1, Segment_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean do_intersect__SWIG_7(long jarg1, Segment_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_8(long jarg1, Segment_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_9(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_10(long jarg1, Segment_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_11(long jarg1, Segment_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native boolean do_intersect__SWIG_12(long jarg1, Line_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean do_intersect__SWIG_13(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_14(long jarg1, Line_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_15(long jarg1, Line_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_16(long jarg1, Line_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_17(long jarg1, Line_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native boolean do_intersect__SWIG_18(long jarg1, Triangle_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean do_intersect__SWIG_19(long jarg1, Triangle_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean do_intersect__SWIG_20(long jarg1, Triangle_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_21(long jarg1, Triangle_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_22(long jarg1, Triangle_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_23(long jarg1, Triangle_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_24(long jarg1, Ray_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native boolean do_intersect__SWIG_25(long jarg1, Ray_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_26(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_27(long jarg1, Ray_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_28(long jarg1, Ray_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native boolean do_intersect__SWIG_29(long jarg1, Ray_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native boolean do_intersect__SWIG_30(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native boolean do_intersect__SWIG_31(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native boolean do_intersect__SWIG_32(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native boolean do_intersect__SWIG_33(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native boolean do_intersect__SWIG_34(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_35(long jarg1, Point_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_36(long jarg1, Point_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_37(long jarg1, Point_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_38(long jarg1, Point_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_39(long jarg1, Point_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_40(long jarg1, Segment_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_41(long jarg1, Segment_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_42(long jarg1, Segment_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_43(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_44(long jarg1, Segment_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_45(long jarg1, Segment_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_46(long jarg1, Triangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_47(long jarg1, Triangle_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_48(long jarg1, Triangle_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_49(long jarg1, Triangle_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_50(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_51(long jarg1, Line_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_52(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_53(long jarg1, Line_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_54(long jarg1, Line_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_55(long jarg1, Line_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_56(long jarg1, Line_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_57(long jarg1, Ray_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_58(long jarg1, Ray_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_59(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_60(long jarg1, Ray_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_61(long jarg1, Ray_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_62(long jarg1, Ray_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native boolean do_intersect__SWIG_63(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean do_intersect__SWIG_64(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native boolean do_intersect__SWIG_65(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native boolean do_intersect__SWIG_66(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native boolean do_intersect__SWIG_67(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native long intersection__SWIG_0(long jarg1, Plane_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_1(long jarg1, Plane_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_2(long jarg1, Plane_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long intersection__SWIG_3(long jarg1, Plane_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native long intersection__SWIG_4(long jarg1, Plane_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_5(long jarg1, Segment_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long intersection__SWIG_6(long jarg1, Segment_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_7(long jarg1, Segment_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native long intersection__SWIG_8(long jarg1, Segment_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_9(long jarg1, Segment_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_10(long jarg1, Segment_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native long intersection__SWIG_11(long jarg1, Line_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long intersection__SWIG_12(long jarg1, Line_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_13(long jarg1, Line_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native long intersection__SWIG_14(long jarg1, Line_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_15(long jarg1, Line_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_16(long jarg1, Line_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native long intersection__SWIG_17(long jarg1, Triangle_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long intersection__SWIG_18(long jarg1, Triangle_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_19(long jarg1, Triangle_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_20(long jarg1, Triangle_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native long intersection__SWIG_21(long jarg1, Triangle_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_22(long jarg1, Ray_3 jarg1_, long jarg2, Plane_3 jarg2_);
  public final static native long intersection__SWIG_23(long jarg1, Ray_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_24(long jarg1, Ray_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_25(long jarg1, Ray_3 jarg1_, long jarg2, Triangle_3 jarg2_);
  public final static native long intersection__SWIG_26(long jarg1, Ray_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_27(long jarg1, Ray_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native long intersection__SWIG_28(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Segment_3 jarg2_);
  public final static native long intersection__SWIG_29(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Line_3 jarg2_);
  public final static native long intersection__SWIG_30(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Ray_3 jarg2_);
  public final static native long intersection__SWIG_31(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native long intersection__SWIG_32(long jarg1, Segment_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long intersection__SWIG_33(long jarg1, Segment_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native long intersection__SWIG_34(long jarg1, Segment_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native long intersection__SWIG_35(long jarg1, Segment_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long intersection__SWIG_36(long jarg1, Segment_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native long intersection__SWIG_37(long jarg1, Triangle_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native long intersection__SWIG_38(long jarg1, Triangle_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long intersection__SWIG_39(long jarg1, Triangle_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native long intersection__SWIG_40(long jarg1, Triangle_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long intersection__SWIG_41(long jarg1, Line_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native long intersection__SWIG_42(long jarg1, Line_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long intersection__SWIG_43(long jarg1, Line_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native long intersection__SWIG_44(long jarg1, Line_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long intersection__SWIG_45(long jarg1, Line_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native long intersection__SWIG_46(long jarg1, Ray_2 jarg1_, long jarg2, Triangle_2 jarg2_);
  public final static native long intersection__SWIG_47(long jarg1, Ray_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long intersection__SWIG_48(long jarg1, Ray_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native long intersection__SWIG_49(long jarg1, Ray_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long intersection__SWIG_50(long jarg1, Ray_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native long intersection__SWIG_51(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long intersection__SWIG_52(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Ray_2 jarg2_);
  public final static native long intersection__SWIG_53(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Line_2 jarg2_);
  public final static native long intersection__SWIG_54(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native double area(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long centroid__SWIG_0(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_);
  public final static native long centroid__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_, long jarg4, Point_2 jarg4_);
  public final static native long centroid__SWIG_2(long jarg1, Triangle_2 jarg1_);
  public final static native long centroid__SWIG_3(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_);
  public final static native long centroid__SWIG_4(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_, long jarg4, Point_3 jarg4_);
  public final static native long centroid__SWIG_5(long jarg1, Triangle_3 jarg1_);
  public final static native long centroid__SWIG_6(long jarg1, Tetrahedron_3 jarg1_);
  public final static native long cross_product(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native double determinant__SWIG_0(long jarg1, Vector_3 jarg1_, long jarg2, Vector_3 jarg2_, long jarg3, Vector_3 jarg3_);
  public final static native double determinant__SWIG_1(long jarg1, Vector_2 jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Origin_plus__SWIG_0(long jarg1, Origin jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Origin_minus__SWIG_0(long jarg1, Origin jarg1_, long jarg2, Vector_2 jarg2_);
  public final static native long Origin_plus__SWIG_1(long jarg1, Origin jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Origin_minus__SWIG_1(long jarg1, Origin jarg1_, long jarg2, Vector_3 jarg2_);
  public final static native long Origin_minus__SWIG_2(long jarg1, Origin jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Origin_minus__SWIG_3(long jarg1, Origin jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Origin();
  public final static native void delete_Origin(long jarg1);
  public final static native long new_Null_vector();
  public final static native void delete_Null_vector(long jarg1);
  public final static native long new_Iso_rectangle_2__SWIG_0(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long new_Iso_rectangle_2__SWIG_1(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, int jarg3);
  public final static native long new_Iso_rectangle_2__SWIG_2(long jarg1, Point_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Point_2 jarg3_, long jarg4, Point_2 jarg4_);
  public final static native long new_Iso_rectangle_2__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Iso_rectangle_2__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native boolean Iso_rectangle_2_equals(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native boolean Iso_rectangle_2_not_equals(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Iso_rectangle_2 jarg2_);
  public final static native long Iso_rectangle_2_vertex__SWIG_0(long jarg1, Iso_rectangle_2 jarg1_, int jarg2);
  public final static native void Iso_rectangle_2_vertex__SWIG_1(long jarg1, Iso_rectangle_2 jarg1_, int jarg2, long jarg3, Point_2 jarg3_);
  public final static native long Iso_rectangle_2_min__SWIG_0(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native void Iso_rectangle_2_min__SWIG_1(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Iso_rectangle_2_max__SWIG_0(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native void Iso_rectangle_2_max__SWIG_1(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double Iso_rectangle_2_xmin(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native double Iso_rectangle_2_ymin(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native double Iso_rectangle_2_xmax(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native double Iso_rectangle_2_ymax(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native double Iso_rectangle_2_min_coord(long jarg1, Iso_rectangle_2 jarg1_, int jarg2);
  public final static native double Iso_rectangle_2_max_coord(long jarg1, Iso_rectangle_2 jarg1_, int jarg2);
  public final static native long Iso_rectangle_2_bbox__SWIG_0(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native void Iso_rectangle_2_bbox__SWIG_1(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Bbox_2 jarg2_);
  public final static native boolean Iso_rectangle_2_is_degenerate(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native int Iso_rectangle_2_bounded_side(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Iso_rectangle_2_has_on_boundary(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Iso_rectangle_2_has_on_bounded_side(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native boolean Iso_rectangle_2_has_on_unbounded_side(long jarg1, Iso_rectangle_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native double Iso_rectangle_2_area(long jarg1, Iso_rectangle_2 jarg1_);
  public final static native void delete_Iso_rectangle_2(long jarg1);
  public final static native long new_Iso_cuboid_3__SWIG_0(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long new_Iso_cuboid_3__SWIG_1(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, int jarg3);
  public final static native long new_Iso_cuboid_3__SWIG_2(long jarg1, Point_3 jarg1_, long jarg2, Point_3 jarg2_, long jarg3, Point_3 jarg3_, long jarg4, Point_3 jarg4_, long jarg5, Point_3 jarg5_, long jarg6, Point_3 jarg6_);
  public final static native long new_Iso_cuboid_3__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Iso_cuboid_3__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean Iso_cuboid_3_equals(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native boolean Iso_cuboid_3_not_equals(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Iso_cuboid_3 jarg2_);
  public final static native long Iso_cuboid_3_vertex__SWIG_0(long jarg1, Iso_cuboid_3 jarg1_, int jarg2);
  public final static native void Iso_cuboid_3_vertex__SWIG_1(long jarg1, Iso_cuboid_3 jarg1_, int jarg2, long jarg3, Point_3 jarg3_);
  public final static native long Iso_cuboid_3_min__SWIG_0(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native void Iso_cuboid_3_min__SWIG_1(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native long Iso_cuboid_3_max__SWIG_0(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native void Iso_cuboid_3_max__SWIG_1(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Iso_cuboid_3_xmin(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_ymin(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_zmin(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_xmax(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_ymax(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_zmax(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native double Iso_cuboid_3_min_coord(long jarg1, Iso_cuboid_3 jarg1_, int jarg2);
  public final static native double Iso_cuboid_3_max_coord(long jarg1, Iso_cuboid_3 jarg1_, int jarg2);
  public final static native long Iso_cuboid_3_bbox__SWIG_0(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native void Iso_cuboid_3_bbox__SWIG_1(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Bbox_3 jarg2_);
  public final static native boolean Iso_cuboid_3_is_degenerate(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native int Iso_cuboid_3_bounded_side(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Iso_cuboid_3_has_on_boundary(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Iso_cuboid_3_has_on_bounded_side(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native boolean Iso_cuboid_3_has_on_unbounded_side(long jarg1, Iso_cuboid_3 jarg1_, long jarg2, Point_3 jarg2_);
  public final static native double Iso_cuboid_3_volume(long jarg1, Iso_cuboid_3 jarg1_);
  public final static native void delete_Iso_cuboid_3(long jarg1);
  public final static native long ORIGIN_get();
  public final static native long NULL_VECTOR_get();
  public final static native long new_Ref_int__SWIG_0();
  public final static native long new_Ref_int__SWIG_1(int jarg1);
  public final static native void Ref_int_set(long jarg1, Ref_int jarg1_, int jarg2);
  public final static native int Ref_int_object(long jarg1, Ref_int jarg1_);
  public final static native long Ref_int_clone__SWIG_0(long jarg1, Ref_int jarg1_);
  public final static native void Ref_int_clone__SWIG_1(long jarg1, Ref_int jarg1_, long jarg2, Ref_int jarg2_);
  public final static native void delete_Ref_int(long jarg1);
  public final static native long new_Polygon_2_Vertex_iterator();
  public final static native long Polygon_2_Vertex_iterator_slow_next(long jarg1, Polygon_2_Vertex_iterator jarg1_);
  public final static native void Polygon_2_Vertex_iterator_next(long jarg1, Polygon_2_Vertex_iterator jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Polygon_2_Vertex_iterator_clone__SWIG_0(long jarg1, Polygon_2_Vertex_iterator jarg1_);
  public final static native void Polygon_2_Vertex_iterator_clone__SWIG_1(long jarg1, Polygon_2_Vertex_iterator jarg1_, long jarg2, Polygon_2_Vertex_iterator jarg2_);
  public final static native boolean Polygon_2_Vertex_iterator_hasNext(long jarg1, Polygon_2_Vertex_iterator jarg1_);
  public final static native boolean Polygon_2_Vertex_iterator_equals(long jarg1, Polygon_2_Vertex_iterator jarg1_, long jarg2, Polygon_2_Vertex_iterator jarg2_);
  public final static native boolean Polygon_2_Vertex_iterator_not_equals(long jarg1, Polygon_2_Vertex_iterator jarg1_, long jarg2, Polygon_2_Vertex_iterator jarg2_);
  public final static native void delete_Polygon_2_Vertex_iterator(long jarg1);
  public final static native long new_Polygon_2_Edge_const_iterator();
  public final static native long Polygon_2_Edge_const_iterator_slow_next(long jarg1, Polygon_2_Edge_const_iterator jarg1_);
  public final static native void Polygon_2_Edge_const_iterator_next(long jarg1, Polygon_2_Edge_const_iterator jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long Polygon_2_Edge_const_iterator_clone__SWIG_0(long jarg1, Polygon_2_Edge_const_iterator jarg1_);
  public final static native void Polygon_2_Edge_const_iterator_clone__SWIG_1(long jarg1, Polygon_2_Edge_const_iterator jarg1_, long jarg2, Polygon_2_Edge_const_iterator jarg2_);
  public final static native boolean Polygon_2_Edge_const_iterator_hasNext(long jarg1, Polygon_2_Edge_const_iterator jarg1_);
  public final static native boolean Polygon_2_Edge_const_iterator_equals(long jarg1, Polygon_2_Edge_const_iterator jarg1_, long jarg2, Polygon_2_Edge_const_iterator jarg2_);
  public final static native boolean Polygon_2_Edge_const_iterator_not_equals(long jarg1, Polygon_2_Edge_const_iterator jarg1_, long jarg2, Polygon_2_Edge_const_iterator jarg2_);
  public final static native void delete_Polygon_2_Edge_const_iterator(long jarg1);
  public final static native long new_Polygon_2_Vertex_circulator();
  public final static native long Polygon_2_Vertex_circulator_slow_next(long jarg1, Polygon_2_Vertex_circulator jarg1_);
  public final static native void Polygon_2_Vertex_circulator_next(long jarg1, Polygon_2_Vertex_circulator jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Polygon_2_Vertex_circulator_clone__SWIG_0(long jarg1, Polygon_2_Vertex_circulator jarg1_);
  public final static native void Polygon_2_Vertex_circulator_clone__SWIG_1(long jarg1, Polygon_2_Vertex_circulator jarg1_, long jarg2, Polygon_2_Vertex_circulator jarg2_);
  public final static native long Polygon_2_Vertex_circulator_prev(long jarg1, Polygon_2_Vertex_circulator jarg1_);
  public final static native boolean Polygon_2_Vertex_circulator_hasNext(long jarg1, Polygon_2_Vertex_circulator jarg1_);
  public final static native boolean Polygon_2_Vertex_circulator_equals(long jarg1, Polygon_2_Vertex_circulator jarg1_, long jarg2, Polygon_2_Vertex_circulator jarg2_);
  public final static native boolean Polygon_2_Vertex_circulator_not_equals(long jarg1, Polygon_2_Vertex_circulator jarg1_, long jarg2, Polygon_2_Vertex_circulator jarg2_);
  public final static native void delete_Polygon_2_Vertex_circulator(long jarg1);
  public final static native long new_Polygon_2_Edge_const_circulator();
  public final static native long Polygon_2_Edge_const_circulator_slow_next(long jarg1, Polygon_2_Edge_const_circulator jarg1_);
  public final static native void Polygon_2_Edge_const_circulator_next(long jarg1, Polygon_2_Edge_const_circulator jarg1_, long jarg2, Segment_2 jarg2_);
  public final static native long Polygon_2_Edge_const_circulator_clone__SWIG_0(long jarg1, Polygon_2_Edge_const_circulator jarg1_);
  public final static native void Polygon_2_Edge_const_circulator_clone__SWIG_1(long jarg1, Polygon_2_Edge_const_circulator jarg1_, long jarg2, Polygon_2_Edge_const_circulator jarg2_);
  public final static native long Polygon_2_Edge_const_circulator_prev(long jarg1, Polygon_2_Edge_const_circulator jarg1_);
  public final static native boolean Polygon_2_Edge_const_circulator_hasNext(long jarg1, Polygon_2_Edge_const_circulator jarg1_);
  public final static native boolean Polygon_2_Edge_const_circulator_equals(long jarg1, Polygon_2_Edge_const_circulator jarg1_, long jarg2, Polygon_2_Edge_const_circulator jarg2_);
  public final static native boolean Polygon_2_Edge_const_circulator_not_equals(long jarg1, Polygon_2_Edge_const_circulator jarg1_, long jarg2, Polygon_2_Edge_const_circulator jarg2_);
  public final static native void delete_Polygon_2_Edge_const_circulator(long jarg1);
  public final static native int bounded_side_2(Iterator<Point_2> jarg1, long jarg2, Point_2 jarg2_);
}
