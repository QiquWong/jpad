/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Voronoi_diagram_2;

  import CGAL.Kernel.Point_2;
  import CGAL.Kernel.Segment_2;
  import CGAL.Kernel.Iso_rectangle_2;
  import CGAL.Kernel.Polygon_2;
  import CGAL.Triangulation_2.Delaunay_triangulation_2;
  import CGAL.Triangulation_2.Delaunay_triangulation_2_Vertex_handle;
  import CGAL.Triangulation_2.Delaunay_triangulation_2_Face_handle;
  import CGAL.Triangulation_2.Delaunay_triangulation_2_Edge;
  import CGAL.Triangulation_2.Regular_triangulation_2;
  import CGAL.Triangulation_2.Regular_triangulation_2_Vertex_handle;
  import CGAL.Triangulation_2.Regular_triangulation_2_Face_handle;
  import CGAL.Triangulation_2.Regular_triangulation_2_Edge;
  import CGAL.Kernel.Weighted_point_2;
  import java.util.Iterator;
  import java.util.Collection;
  import CGAL.Java.JavaData;

public class CGAL_Voronoi_diagram_2JNI {

    static {
      try {
          System.loadLibrary("CGAL_Voronoi_diagram_2");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Voronoi_diagram_2 failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Voronoi_diagram_2_Vertex_handle();
  public final static native long Voronoi_diagram_2_Vertex_handle_halfedge__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_handle_halfedge__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native int Voronoi_diagram_2_Vertex_handle_degree(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native long Voronoi_diagram_2_Vertex_handle_point__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_handle_point__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Voronoi_diagram_2_Vertex_handle_dual__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_handle_dual__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Delaunay_triangulation_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_Vertex_handle_site__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, int jarg2);
  public final static native void Voronoi_diagram_2_Vertex_handle_site__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, int jarg2, long jarg3, Delaunay_triangulation_2_Vertex_handle jarg3_);
  public final static native boolean Voronoi_diagram_2_Vertex_handle_is_incident_edge(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Vertex_handle_is_incident_face(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Vertex_handle_is_valid(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Vertex_handle_equals(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Vertex_handle_not_equals(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native int Voronoi_diagram_2_Vertex_handle_hashCode(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native long Voronoi_diagram_2_Vertex_handle_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_handle_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_handle jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native void delete_Voronoi_diagram_2_Vertex_handle(long jarg1);
  public final static native long new_Voronoi_diagram_2_Face_handle();
  public final static native long Voronoi_diagram_2_Face_handle_halfedge__SWIG_0(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native void Voronoi_diagram_2_Face_handle_halfedge__SWIG_1(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Face_handle_outer_ccb__SWIG_0(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native void Voronoi_diagram_2_Face_handle_outer_ccb__SWIG_1(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Voronoi_diagram_2_Face_handle_dual__SWIG_0(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native void Voronoi_diagram_2_Face_handle_dual__SWIG_1(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Face_handle_is_unbounded(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Face_handle_is_halfedge_on_ccb(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Face_handle_is_valid(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Face_handle_equals(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Face_handle_not_equals(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native int Voronoi_diagram_2_Face_handle_hashCode(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native long Voronoi_diagram_2_Face_handle_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Face_handle jarg1_);
  public final static native void Voronoi_diagram_2_Face_handle_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Face_handle jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native void delete_Voronoi_diagram_2_Face_handle(long jarg1);
  public final static native long new_Voronoi_diagram_2_Halfedge_handle();
  public final static native long Voronoi_diagram_2_Halfedge_handle_twin__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_twin__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_opposite__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_opposite__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_next__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_next__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_previous__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_previous__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_face__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_face__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_source__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_source__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_target__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_target__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_ccb__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_ccb__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_dual__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_dual__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Delaunay_triangulation_2_Edge jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_up__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_up__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_down__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_down__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_left__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_left__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_right__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_right__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_has_source(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_has_target(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_is_unbounded(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_is_bisector(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_is_segment(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_is_ray(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_is_valid(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_equals(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_Halfedge_handle_not_equals(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native int Voronoi_diagram_2_Halfedge_handle_hashCode(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native long Voronoi_diagram_2_Halfedge_handle_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_handle_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_handle jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native void delete_Voronoi_diagram_2_Halfedge_handle(long jarg1);
  public final static native long new_Voronoi_diagram_2_Face_iterator();
  public final static native long Voronoi_diagram_2_Face_iterator_slow_next(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Face_iterator_next(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_Face_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Face_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Face_iterator_hasNext(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Face_iterator_equals(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Face_iterator_not_equals(long jarg1, Voronoi_diagram_2_Face_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Face_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Bounded_faces_iterator();
  public final static native long Voronoi_diagram_2_Bounded_faces_iterator_slow_next(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Bounded_faces_iterator_next(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_Bounded_faces_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Bounded_faces_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Bounded_faces_iterator_hasNext(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Bounded_faces_iterator_equals(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Bounded_faces_iterator_not_equals(long jarg1, Voronoi_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Bounded_faces_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Unbounded_faces_iterator();
  public final static native long Voronoi_diagram_2_Unbounded_faces_iterator_slow_next(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Unbounded_faces_iterator_next(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_Unbounded_faces_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Unbounded_faces_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Unbounded_faces_iterator_hasNext(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Unbounded_faces_iterator_equals(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Unbounded_faces_iterator_not_equals(long jarg1, Voronoi_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Unbounded_faces_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Edge_iterator();
  public final static native long Voronoi_diagram_2_Edge_iterator_slow_next(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Edge_iterator_next(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Edge_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Edge_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Edge_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Edge_iterator_hasNext(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Edge_iterator_equals(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Edge_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Edge_iterator_not_equals(long jarg1, Voronoi_diagram_2_Edge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Edge_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Edge_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Halfedge_iterator();
  public final static native long Voronoi_diagram_2_Halfedge_iterator_slow_next(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_iterator_next(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Halfedge_iterator_hasNext(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_iterator_equals(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Halfedge_iterator_not_equals(long jarg1, Voronoi_diagram_2_Halfedge_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Halfedge_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Unbounded_halfedges_iterator();
  public final static native long Voronoi_diagram_2_Unbounded_halfedges_iterator_slow_next(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Unbounded_halfedges_iterator_next(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Unbounded_halfedges_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Unbounded_halfedges_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Unbounded_halfedges_iterator_hasNext(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Unbounded_halfedges_iterator_equals(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Unbounded_halfedges_iterator_not_equals(long jarg1, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Unbounded_halfedges_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Bounded_halfedges_iterator();
  public final static native long Voronoi_diagram_2_Bounded_halfedges_iterator_slow_next(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Bounded_halfedges_iterator_next(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Bounded_halfedges_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Bounded_halfedges_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Bounded_halfedges_iterator_hasNext(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Bounded_halfedges_iterator_equals(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Bounded_halfedges_iterator_not_equals(long jarg1, Voronoi_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Voronoi_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Bounded_halfedges_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Ccb_halfedge_circulator();
  public final static native long Voronoi_diagram_2_Ccb_halfedge_circulator_slow_next(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native void Voronoi_diagram_2_Ccb_halfedge_circulator_next(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Ccb_halfedge_circulator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native void Voronoi_diagram_2_Ccb_halfedge_circulator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Voronoi_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Voronoi_diagram_2_Ccb_halfedge_circulator_prev(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native boolean Voronoi_diagram_2_Ccb_halfedge_circulator_hasNext(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native boolean Voronoi_diagram_2_Ccb_halfedge_circulator_equals(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Voronoi_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native boolean Voronoi_diagram_2_Ccb_halfedge_circulator_not_equals(long jarg1, Voronoi_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Voronoi_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Ccb_halfedge_circulator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Halfedge_around_vertex_circulator();
  public final static native long Voronoi_diagram_2_Halfedge_around_vertex_circulator_slow_next(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_around_vertex_circulator_next(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_around_vertex_circulator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native void Voronoi_diagram_2_Halfedge_around_vertex_circulator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native long Voronoi_diagram_2_Halfedge_around_vertex_circulator_prev(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_around_vertex_circulator_hasNext(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native boolean Voronoi_diagram_2_Halfedge_around_vertex_circulator_equals(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native boolean Voronoi_diagram_2_Halfedge_around_vertex_circulator_not_equals(long jarg1, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Halfedge_around_vertex_circulator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Vertex_iterator();
  public final static native long Voronoi_diagram_2_Vertex_iterator_slow_next(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_iterator_next(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native long Voronoi_diagram_2_Vertex_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Vertex_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_, long jarg2, Voronoi_diagram_2_Vertex_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Vertex_iterator_hasNext(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Vertex_iterator_equals(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_, long jarg2, Voronoi_diagram_2_Vertex_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Vertex_iterator_not_equals(long jarg1, Voronoi_diagram_2_Vertex_iterator jarg1_, long jarg2, Voronoi_diagram_2_Vertex_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Vertex_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Site_iterator();
  public final static native long Voronoi_diagram_2_Site_iterator_slow_next(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Site_iterator_next(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Voronoi_diagram_2_Site_iterator_clone__SWIG_0(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_);
  public final static native void Voronoi_diagram_2_Site_iterator_clone__SWIG_1(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_, long jarg2, Voronoi_diagram_2_Site_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Site_iterator_hasNext(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_);
  public final static native boolean Voronoi_diagram_2_Site_iterator_equals(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_, long jarg2, Voronoi_diagram_2_Site_iterator jarg2_);
  public final static native boolean Voronoi_diagram_2_Site_iterator_not_equals(long jarg1, Voronoi_diagram_2_Site_iterator jarg1_, long jarg2, Voronoi_diagram_2_Site_iterator jarg2_);
  public final static native void delete_Voronoi_diagram_2_Site_iterator(long jarg1);
  public final static native long new_Voronoi_diagram_2_Locate_result();
  public final static native long Voronoi_diagram_2_Locate_result_get_vertex_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native long Voronoi_diagram_2_Locate_result_get_halfedge_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native long Voronoi_diagram_2_Locate_result_get_face_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native boolean Voronoi_diagram_2_Locate_result_is_vertex_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native boolean Voronoi_diagram_2_Locate_result_is_halfedge_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native boolean Voronoi_diagram_2_Locate_result_is_face_handle(long jarg1, Voronoi_diagram_2_Locate_result jarg1_);
  public final static native void delete_Voronoi_diagram_2_Locate_result(long jarg1);
  public final static native long new_Voronoi_diagram_2__SWIG_0();
  public final static native long new_Voronoi_diagram_2__SWIG_1(long jarg1, Delaunay_triangulation_2 jarg1_, boolean jarg2);
  public final static native long new_Voronoi_diagram_2__SWIG_2(long jarg1, Delaunay_triangulation_2 jarg1_);
  public final static native long new_Voronoi_diagram_2__SWIG_3(Iterator<Point_2> jarg1);
  public final static native long Voronoi_diagram_2_insert__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Voronoi_diagram_2_insert__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Voronoi_diagram_2_Face_handle jarg3_);
  public final static native int Voronoi_diagram_2_insert__SWIG_2(long jarg1, Voronoi_diagram_2 jarg1_, Iterator<Point_2> jarg2);
  public final static native long Voronoi_diagram_2_dual__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_dual__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2 jarg2_);
  public final static native long Voronoi_diagram_2_dual__SWIG_2(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Edge jarg2_);
  public final static native void Voronoi_diagram_2_dual__SWIG_3(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Edge jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_handle jarg3_);
  public final static native long Voronoi_diagram_2_dual__SWIG_4(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Face_handle jarg2_);
  public final static native void Voronoi_diagram_2_dual__SWIG_5(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Face_handle jarg2_, long jarg3, Voronoi_diagram_2_Vertex_handle jarg3_);
  public final static native long Voronoi_diagram_2_dual__SWIG_6(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_);
  public final static native void Voronoi_diagram_2_dual__SWIG_7(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Delaunay_triangulation_2_Vertex_handle jarg2_, long jarg3, Voronoi_diagram_2_Face_handle jarg3_);
  public final static native int Voronoi_diagram_2_number_of_vertices(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native int Voronoi_diagram_2_number_of_faces(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native int Voronoi_diagram_2_number_of_halfedges(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native int Voronoi_diagram_2_number_of_connected_components(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_unbounded_face__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_unbounded_face__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_bounded_face__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_bounded_face__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native long Voronoi_diagram_2_unbounded_halfedge__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_unbounded_halfedge__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native long Voronoi_diagram_2_bounded_halfedge__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_bounded_halfedge__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Voronoi_diagram_2_is_valid(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_clear(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native void Voronoi_diagram_2_swap(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2 jarg2_);
  public final static native void Voronoi_diagram_2_file_output(long jarg1, Voronoi_diagram_2 jarg1_, String jarg2);
  public final static native void Voronoi_diagram_2_file_input(long jarg1, Voronoi_diagram_2 jarg1_, String jarg2);
  public final static native long Voronoi_diagram_2_faces(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_unbounded_faces(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_bounded_faces(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_edges(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_halfedges(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_unbounded_halfedges(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_bounded_halfedges(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_vertices(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_sites(long jarg1, Voronoi_diagram_2 jarg1_);
  public final static native long Voronoi_diagram_2_ccb_halfedges__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_);
  public final static native void Voronoi_diagram_2_ccb_halfedges__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_, long jarg3, Voronoi_diagram_2_Ccb_halfedge_circulator jarg3_);
  public final static native long Voronoi_diagram_2_ccb_halfedges__SWIG_2(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_handle jarg3_);
  public final static native void Voronoi_diagram_2_ccb_halfedges__SWIG_3(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_handle jarg3_, long jarg4, Voronoi_diagram_2_Ccb_halfedge_circulator jarg4_);
  public final static native long Voronoi_diagram_2_incident_halfedges__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_);
  public final static native void Voronoi_diagram_2_incident_halfedges__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg3_);
  public final static native long Voronoi_diagram_2_incident_halfedges__SWIG_2(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_handle jarg3_);
  public final static native void Voronoi_diagram_2_incident_halfedges__SWIG_3(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Vertex_handle jarg2_, long jarg3, Voronoi_diagram_2_Halfedge_handle jarg3_, long jarg4, Voronoi_diagram_2_Halfedge_around_vertex_circulator jarg4_);
  public final static native long Voronoi_diagram_2_locate__SWIG_0(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Voronoi_diagram_2_locate__SWIG_1(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Voronoi_diagram_2_Locate_result jarg3_);
  public final static native void delete_Voronoi_diagram_2(long jarg1);
  public final static native long new_Power_diagram_2_Vertex_handle();
  public final static native long Power_diagram_2_Vertex_handle_halfedge__SWIG_0(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native void Power_diagram_2_Vertex_handle_halfedge__SWIG_1(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native int Power_diagram_2_Vertex_handle_degree(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native long Power_diagram_2_Vertex_handle_point__SWIG_0(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native void Power_diagram_2_Vertex_handle_point__SWIG_1(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Point_2 jarg2_);
  public final static native long Power_diagram_2_Vertex_handle_dual__SWIG_0(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native void Power_diagram_2_Vertex_handle_dual__SWIG_1(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Regular_triangulation_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_Vertex_handle_site__SWIG_0(long jarg1, Power_diagram_2_Vertex_handle jarg1_, int jarg2);
  public final static native void Power_diagram_2_Vertex_handle_site__SWIG_1(long jarg1, Power_diagram_2_Vertex_handle jarg1_, int jarg2, long jarg3, Regular_triangulation_2_Vertex_handle jarg3_);
  public final static native boolean Power_diagram_2_Vertex_handle_is_incident_edge(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Power_diagram_2_Vertex_handle_is_incident_face(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native boolean Power_diagram_2_Vertex_handle_is_valid(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native boolean Power_diagram_2_Vertex_handle_equals(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native boolean Power_diagram_2_Vertex_handle_not_equals(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native int Power_diagram_2_Vertex_handle_hashCode(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native long Power_diagram_2_Vertex_handle_clone__SWIG_0(long jarg1, Power_diagram_2_Vertex_handle jarg1_);
  public final static native void Power_diagram_2_Vertex_handle_clone__SWIG_1(long jarg1, Power_diagram_2_Vertex_handle jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native void delete_Power_diagram_2_Vertex_handle(long jarg1);
  public final static native long new_Power_diagram_2_Face_handle();
  public final static native long Power_diagram_2_Face_handle_halfedge__SWIG_0(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native void Power_diagram_2_Face_handle_halfedge__SWIG_1(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Face_handle_outer_ccb__SWIG_0(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native void Power_diagram_2_Face_handle_outer_ccb__SWIG_1(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Power_diagram_2_Face_handle_dual__SWIG_0(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native void Power_diagram_2_Face_handle_dual__SWIG_1(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native boolean Power_diagram_2_Face_handle_is_unbounded(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native boolean Power_diagram_2_Face_handle_is_halfedge_on_ccb(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Power_diagram_2_Face_handle_is_valid(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native boolean Power_diagram_2_Face_handle_equals(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native boolean Power_diagram_2_Face_handle_not_equals(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native int Power_diagram_2_Face_handle_hashCode(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native long Power_diagram_2_Face_handle_clone__SWIG_0(long jarg1, Power_diagram_2_Face_handle jarg1_);
  public final static native void Power_diagram_2_Face_handle_clone__SWIG_1(long jarg1, Power_diagram_2_Face_handle jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native void delete_Power_diagram_2_Face_handle(long jarg1);
  public final static native long new_Power_diagram_2_Halfedge_handle();
  public final static native long Power_diagram_2_Halfedge_handle_twin__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_twin__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_opposite__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_opposite__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_next__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_next__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_previous__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_previous__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_face__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_face__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_source__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_source__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_target__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_target__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_ccb__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_ccb__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_dual__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_dual__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Regular_triangulation_2_Edge jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_up__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_up__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_down__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_down__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_left__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_left__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_handle_right__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_right__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native boolean Power_diagram_2_Halfedge_handle_has_source(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_has_target(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_is_unbounded(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_is_bisector(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_is_segment(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_is_ray(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_is_valid(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_handle_equals(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Power_diagram_2_Halfedge_handle_not_equals(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native int Power_diagram_2_Halfedge_handle_hashCode(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native long Power_diagram_2_Halfedge_handle_clone__SWIG_0(long jarg1, Power_diagram_2_Halfedge_handle jarg1_);
  public final static native void Power_diagram_2_Halfedge_handle_clone__SWIG_1(long jarg1, Power_diagram_2_Halfedge_handle jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native void delete_Power_diagram_2_Halfedge_handle(long jarg1);
  public final static native long new_Power_diagram_2_Face_iterator();
  public final static native long Power_diagram_2_Face_iterator_slow_next(long jarg1, Power_diagram_2_Face_iterator jarg1_);
  public final static native void Power_diagram_2_Face_iterator_next(long jarg1, Power_diagram_2_Face_iterator jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_Face_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Face_iterator jarg1_);
  public final static native void Power_diagram_2_Face_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Face_iterator jarg1_, long jarg2, Power_diagram_2_Face_iterator jarg2_);
  public final static native boolean Power_diagram_2_Face_iterator_hasNext(long jarg1, Power_diagram_2_Face_iterator jarg1_);
  public final static native boolean Power_diagram_2_Face_iterator_equals(long jarg1, Power_diagram_2_Face_iterator jarg1_, long jarg2, Power_diagram_2_Face_iterator jarg2_);
  public final static native boolean Power_diagram_2_Face_iterator_not_equals(long jarg1, Power_diagram_2_Face_iterator jarg1_, long jarg2, Power_diagram_2_Face_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Face_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Bounded_faces_iterator();
  public final static native long Power_diagram_2_Bounded_faces_iterator_slow_next(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native void Power_diagram_2_Bounded_faces_iterator_next(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_Bounded_faces_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native void Power_diagram_2_Bounded_faces_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native boolean Power_diagram_2_Bounded_faces_iterator_hasNext(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_);
  public final static native boolean Power_diagram_2_Bounded_faces_iterator_equals(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native boolean Power_diagram_2_Bounded_faces_iterator_not_equals(long jarg1, Power_diagram_2_Bounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_faces_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Bounded_faces_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Unbounded_faces_iterator();
  public final static native long Power_diagram_2_Unbounded_faces_iterator_slow_next(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native void Power_diagram_2_Unbounded_faces_iterator_next(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_Unbounded_faces_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native void Power_diagram_2_Unbounded_faces_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native boolean Power_diagram_2_Unbounded_faces_iterator_hasNext(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_);
  public final static native boolean Power_diagram_2_Unbounded_faces_iterator_equals(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native boolean Power_diagram_2_Unbounded_faces_iterator_not_equals(long jarg1, Power_diagram_2_Unbounded_faces_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_faces_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Unbounded_faces_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Edge_iterator();
  public final static native long Power_diagram_2_Edge_iterator_slow_next(long jarg1, Power_diagram_2_Edge_iterator jarg1_);
  public final static native void Power_diagram_2_Edge_iterator_next(long jarg1, Power_diagram_2_Edge_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Edge_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Edge_iterator jarg1_);
  public final static native void Power_diagram_2_Edge_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Edge_iterator jarg1_, long jarg2, Power_diagram_2_Edge_iterator jarg2_);
  public final static native boolean Power_diagram_2_Edge_iterator_hasNext(long jarg1, Power_diagram_2_Edge_iterator jarg1_);
  public final static native boolean Power_diagram_2_Edge_iterator_equals(long jarg1, Power_diagram_2_Edge_iterator jarg1_, long jarg2, Power_diagram_2_Edge_iterator jarg2_);
  public final static native boolean Power_diagram_2_Edge_iterator_not_equals(long jarg1, Power_diagram_2_Edge_iterator jarg1_, long jarg2, Power_diagram_2_Edge_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Edge_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Halfedge_iterator();
  public final static native long Power_diagram_2_Halfedge_iterator_slow_next(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_);
  public final static native void Power_diagram_2_Halfedge_iterator_next(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_);
  public final static native void Power_diagram_2_Halfedge_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_iterator jarg2_);
  public final static native boolean Power_diagram_2_Halfedge_iterator_hasNext(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_iterator_equals(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_iterator jarg2_);
  public final static native boolean Power_diagram_2_Halfedge_iterator_not_equals(long jarg1, Power_diagram_2_Halfedge_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Halfedge_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Unbounded_halfedges_iterator();
  public final static native long Power_diagram_2_Unbounded_halfedges_iterator_slow_next(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native void Power_diagram_2_Unbounded_halfedges_iterator_next(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Unbounded_halfedges_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native void Power_diagram_2_Unbounded_halfedges_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native boolean Power_diagram_2_Unbounded_halfedges_iterator_hasNext(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_);
  public final static native boolean Power_diagram_2_Unbounded_halfedges_iterator_equals(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native boolean Power_diagram_2_Unbounded_halfedges_iterator_not_equals(long jarg1, Power_diagram_2_Unbounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Unbounded_halfedges_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Unbounded_halfedges_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Bounded_halfedges_iterator();
  public final static native long Power_diagram_2_Bounded_halfedges_iterator_slow_next(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native void Power_diagram_2_Bounded_halfedges_iterator_next(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Bounded_halfedges_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native void Power_diagram_2_Bounded_halfedges_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native boolean Power_diagram_2_Bounded_halfedges_iterator_hasNext(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_);
  public final static native boolean Power_diagram_2_Bounded_halfedges_iterator_equals(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native boolean Power_diagram_2_Bounded_halfedges_iterator_not_equals(long jarg1, Power_diagram_2_Bounded_halfedges_iterator jarg1_, long jarg2, Power_diagram_2_Bounded_halfedges_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Bounded_halfedges_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Ccb_halfedge_circulator();
  public final static native long Power_diagram_2_Ccb_halfedge_circulator_slow_next(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native void Power_diagram_2_Ccb_halfedge_circulator_next(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Ccb_halfedge_circulator_clone__SWIG_0(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native void Power_diagram_2_Ccb_halfedge_circulator_clone__SWIG_1(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Power_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native long Power_diagram_2_Ccb_halfedge_circulator_prev(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native boolean Power_diagram_2_Ccb_halfedge_circulator_hasNext(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_);
  public final static native boolean Power_diagram_2_Ccb_halfedge_circulator_equals(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Power_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native boolean Power_diagram_2_Ccb_halfedge_circulator_not_equals(long jarg1, Power_diagram_2_Ccb_halfedge_circulator jarg1_, long jarg2, Power_diagram_2_Ccb_halfedge_circulator jarg2_);
  public final static native void delete_Power_diagram_2_Ccb_halfedge_circulator(long jarg1);
  public final static native long new_Power_diagram_2_Halfedge_around_vertex_circulator();
  public final static native long Power_diagram_2_Halfedge_around_vertex_circulator_slow_next(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native void Power_diagram_2_Halfedge_around_vertex_circulator_next(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_Halfedge_around_vertex_circulator_clone__SWIG_0(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native void Power_diagram_2_Halfedge_around_vertex_circulator_clone__SWIG_1(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Power_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native long Power_diagram_2_Halfedge_around_vertex_circulator_prev(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_around_vertex_circulator_hasNext(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_);
  public final static native boolean Power_diagram_2_Halfedge_around_vertex_circulator_equals(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Power_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native boolean Power_diagram_2_Halfedge_around_vertex_circulator_not_equals(long jarg1, Power_diagram_2_Halfedge_around_vertex_circulator jarg1_, long jarg2, Power_diagram_2_Halfedge_around_vertex_circulator jarg2_);
  public final static native void delete_Power_diagram_2_Halfedge_around_vertex_circulator(long jarg1);
  public final static native long new_Power_diagram_2_Vertex_iterator();
  public final static native long Power_diagram_2_Vertex_iterator_slow_next(long jarg1, Power_diagram_2_Vertex_iterator jarg1_);
  public final static native void Power_diagram_2_Vertex_iterator_next(long jarg1, Power_diagram_2_Vertex_iterator jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native long Power_diagram_2_Vertex_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Vertex_iterator jarg1_);
  public final static native void Power_diagram_2_Vertex_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Vertex_iterator jarg1_, long jarg2, Power_diagram_2_Vertex_iterator jarg2_);
  public final static native boolean Power_diagram_2_Vertex_iterator_hasNext(long jarg1, Power_diagram_2_Vertex_iterator jarg1_);
  public final static native boolean Power_diagram_2_Vertex_iterator_equals(long jarg1, Power_diagram_2_Vertex_iterator jarg1_, long jarg2, Power_diagram_2_Vertex_iterator jarg2_);
  public final static native boolean Power_diagram_2_Vertex_iterator_not_equals(long jarg1, Power_diagram_2_Vertex_iterator jarg1_, long jarg2, Power_diagram_2_Vertex_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Vertex_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Site_iterator();
  public final static native long Power_diagram_2_Site_iterator_slow_next(long jarg1, Power_diagram_2_Site_iterator jarg1_);
  public final static native void Power_diagram_2_Site_iterator_next(long jarg1, Power_diagram_2_Site_iterator jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native long Power_diagram_2_Site_iterator_clone__SWIG_0(long jarg1, Power_diagram_2_Site_iterator jarg1_);
  public final static native void Power_diagram_2_Site_iterator_clone__SWIG_1(long jarg1, Power_diagram_2_Site_iterator jarg1_, long jarg2, Power_diagram_2_Site_iterator jarg2_);
  public final static native boolean Power_diagram_2_Site_iterator_hasNext(long jarg1, Power_diagram_2_Site_iterator jarg1_);
  public final static native boolean Power_diagram_2_Site_iterator_equals(long jarg1, Power_diagram_2_Site_iterator jarg1_, long jarg2, Power_diagram_2_Site_iterator jarg2_);
  public final static native boolean Power_diagram_2_Site_iterator_not_equals(long jarg1, Power_diagram_2_Site_iterator jarg1_, long jarg2, Power_diagram_2_Site_iterator jarg2_);
  public final static native void delete_Power_diagram_2_Site_iterator(long jarg1);
  public final static native long new_Power_diagram_2_Locate_result();
  public final static native long Power_diagram_2_Locate_result_get_vertex_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native long Power_diagram_2_Locate_result_get_halfedge_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native long Power_diagram_2_Locate_result_get_face_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native boolean Power_diagram_2_Locate_result_is_vertex_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native boolean Power_diagram_2_Locate_result_is_halfedge_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native boolean Power_diagram_2_Locate_result_is_face_handle(long jarg1, Power_diagram_2_Locate_result jarg1_);
  public final static native void delete_Power_diagram_2_Locate_result(long jarg1);
  public final static native long new_Power_diagram_2__SWIG_0();
  public final static native long new_Power_diagram_2__SWIG_1(long jarg1, Regular_triangulation_2 jarg1_, boolean jarg2);
  public final static native long new_Power_diagram_2__SWIG_2(long jarg1, Regular_triangulation_2 jarg1_);
  public final static native long new_Power_diagram_2__SWIG_3(Iterator<Weighted_point_2> jarg1);
  public final static native long Power_diagram_2_insert__SWIG_0(long jarg1, Power_diagram_2 jarg1_, long jarg2, Weighted_point_2 jarg2_);
  public final static native void Power_diagram_2_insert__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Weighted_point_2 jarg2_, long jarg3, Power_diagram_2_Face_handle jarg3_);
  public final static native int Power_diagram_2_insert__SWIG_2(long jarg1, Power_diagram_2 jarg1_, Iterator<Weighted_point_2> jarg2);
  public final static native long Power_diagram_2_dual__SWIG_0(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_dual__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2 jarg2_);
  public final static native long Power_diagram_2_dual__SWIG_2(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Edge jarg2_);
  public final static native void Power_diagram_2_dual__SWIG_3(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Edge jarg2_, long jarg3, Power_diagram_2_Halfedge_handle jarg3_);
  public final static native long Power_diagram_2_dual__SWIG_4(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Face_handle jarg2_);
  public final static native void Power_diagram_2_dual__SWIG_5(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Face_handle jarg2_, long jarg3, Power_diagram_2_Vertex_handle jarg3_);
  public final static native long Power_diagram_2_dual__SWIG_6(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_);
  public final static native void Power_diagram_2_dual__SWIG_7(long jarg1, Power_diagram_2 jarg1_, long jarg2, Regular_triangulation_2_Vertex_handle jarg2_, long jarg3, Power_diagram_2_Face_handle jarg3_);
  public final static native int Power_diagram_2_number_of_vertices(long jarg1, Power_diagram_2 jarg1_);
  public final static native int Power_diagram_2_number_of_faces(long jarg1, Power_diagram_2 jarg1_);
  public final static native int Power_diagram_2_number_of_halfedges(long jarg1, Power_diagram_2 jarg1_);
  public final static native int Power_diagram_2_number_of_connected_components(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_unbounded_face__SWIG_0(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_unbounded_face__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_bounded_face__SWIG_0(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_bounded_face__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native long Power_diagram_2_unbounded_halfedge__SWIG_0(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_unbounded_halfedge__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native long Power_diagram_2_bounded_halfedge__SWIG_0(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_bounded_halfedge__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Halfedge_handle jarg2_);
  public final static native boolean Power_diagram_2_is_valid(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_clear(long jarg1, Power_diagram_2 jarg1_);
  public final static native void Power_diagram_2_swap(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2 jarg2_);
  public final static native void Power_diagram_2_file_output(long jarg1, Power_diagram_2 jarg1_, String jarg2);
  public final static native void Power_diagram_2_file_input(long jarg1, Power_diagram_2 jarg1_, String jarg2);
  public final static native long Power_diagram_2_faces(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_unbounded_faces(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_bounded_faces(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_edges(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_halfedges(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_unbounded_halfedges(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_bounded_halfedges(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_vertices(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_sites(long jarg1, Power_diagram_2 jarg1_);
  public final static native long Power_diagram_2_ccb_halfedges__SWIG_0(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_);
  public final static native void Power_diagram_2_ccb_halfedges__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_, long jarg3, Power_diagram_2_Ccb_halfedge_circulator jarg3_);
  public final static native long Power_diagram_2_ccb_halfedges__SWIG_2(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_, long jarg3, Power_diagram_2_Halfedge_handle jarg3_);
  public final static native void Power_diagram_2_ccb_halfedges__SWIG_3(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Face_handle jarg2_, long jarg3, Power_diagram_2_Halfedge_handle jarg3_, long jarg4, Power_diagram_2_Ccb_halfedge_circulator jarg4_);
  public final static native long Power_diagram_2_incident_halfedges__SWIG_0(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_);
  public final static native void Power_diagram_2_incident_halfedges__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_, long jarg3, Power_diagram_2_Halfedge_around_vertex_circulator jarg3_);
  public final static native long Power_diagram_2_incident_halfedges__SWIG_2(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_, long jarg3, Power_diagram_2_Halfedge_handle jarg3_);
  public final static native void Power_diagram_2_incident_halfedges__SWIG_3(long jarg1, Power_diagram_2 jarg1_, long jarg2, Power_diagram_2_Vertex_handle jarg2_, long jarg3, Power_diagram_2_Halfedge_handle jarg3_, long jarg4, Power_diagram_2_Halfedge_around_vertex_circulator jarg4_);
  public final static native long Power_diagram_2_locate__SWIG_0(long jarg1, Power_diagram_2 jarg1_, long jarg2, Point_2 jarg2_);
  public final static native void Power_diagram_2_locate__SWIG_1(long jarg1, Power_diagram_2 jarg1_, long jarg2, Point_2 jarg2_, long jarg3, Power_diagram_2_Locate_result jarg3_);
  public final static native void delete_Power_diagram_2(long jarg1);
  public final static native void crop_voronoi_facet(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_, long jarg3, Iso_rectangle_2 jarg3_, Collection<Segment_2> jarg4);
  public final static native long new_Optional_segment_2();
  public final static native boolean Optional_segment_2_empty(long jarg1, Optional_segment_2 jarg1_);
  public final static native long Optional_segment_2_value(long jarg1, Optional_segment_2 jarg1_);
  public final static native long Optional_segment_2_clone__SWIG_0(long jarg1, Optional_segment_2 jarg1_);
  public final static native void Optional_segment_2_clone__SWIG_1(long jarg1, Optional_segment_2 jarg1_, long jarg2, Optional_segment_2 jarg2_);
  public final static native void delete_Optional_segment_2(long jarg1);
  public final static native void crop_voronoi_facet_polygon(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Face_handle jarg2_, long jarg3, Iso_rectangle_2 jarg3_, long jarg4, Polygon_2 jarg4_);
  public final static native long crop_voronoi_edge(long jarg1, Voronoi_diagram_2 jarg1_, long jarg2, Voronoi_diagram_2_Halfedge_handle jarg2_, long jarg3, Iso_rectangle_2 jarg3_);
}
