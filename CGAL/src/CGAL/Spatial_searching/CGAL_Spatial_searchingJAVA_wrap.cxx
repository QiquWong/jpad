/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13




  #include <SWIG_CGAL/Java/exception.h>


SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <stdexcept>


#include <string>


#if !defined(SWIGPYTHON) && !defined(SWIGJAVA)
  #define SWIG_CGAL_NON_SUPPORTED_TARGET_LANGUAGE 1
#else
  #define SWIG_CGAL_NON_SUPPORTED_TARGET_LANGUAGE 0
#endif  


  #include <SWIG_CGAL/Kernel/typedefs.h>
  #include <SWIG_CGAL/Kernel/Point_2.h>
  #include <SWIG_CGAL/Kernel/Point_3.h>
  #include <SWIG_CGAL/Spatial_searching/all_includes.h>


typedef Fuzzy_sphere_wrapper <CGAL_FS_2,Point_2>  SWIG_FS_2;
typedef Fuzzy_iso_box_wrapper<CGAL_FB_2,Point_2>  SWIG_FB_2;
typedef Fuzzy_sphere_wrapper <CGAL_FS_3,Point_3>  SWIG_FS_3;
typedef Fuzzy_iso_box_wrapper<CGAL_FB_3,Point_3>  SWIG_FB_3;
typedef std::pair<Point_2,double> SWIG_PTD_2;
typedef std::pair<Point_3,double> SWIG_PTD_3;


  typedef Kd_tree_wrapper  <CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >       SWIG_OI_T_2;
  typedef NN_search_wrapper_incremental<CGAL_OI_S_2,Point_2,SWIG_OI_T_2 >   SWIG_OI_S_2;
  typedef Kd_tree_wrapper  <CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >       SWIG_OI_T_3;
  typedef NN_search_wrapper_incremental<CGAL_OI_S_3,Point_3,SWIG_OI_T_3 >   SWIG_OI_S_3;


  typedef Kd_tree_wrapper  <CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >       SWIG_I_T_2;
  typedef NN_search_wrapper_incremental<CGAL_I_S_2,Point_2,SWIG_I_T_2 >   SWIG_I_S_2;
  typedef Kd_tree_wrapper  <CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >       SWIG_I_T_3;
  typedef NN_search_wrapper_incremental<CGAL_I_S_3,Point_3,SWIG_I_T_3 >   SWIG_I_S_3;


  typedef Kd_tree_wrapper  <CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >       SWIG_OK_T_2;
  typedef NN_search_wrapper<CGAL_OK_S_2,Point_2,SWIG_OK_T_2 >   SWIG_OK_S_2;
  typedef Kd_tree_wrapper  <CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >       SWIG_OK_T_3;
  typedef NN_search_wrapper<CGAL_OK_S_3,Point_3,SWIG_OK_T_3 >   SWIG_OK_S_3;


  typedef Kd_tree_wrapper  <CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >       SWIG_K_T_2;
  typedef NN_search_wrapper<CGAL_K_S_2,Point_2,SWIG_K_T_2 >   SWIG_K_S_2;
  typedef Kd_tree_wrapper  <CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >       SWIG_K_T_3;
  typedef NN_search_wrapper<CGAL_K_S_3,Point_3,SWIG_K_T_3 >   SWIG_K_S_3;


#include <stdexcept>


#include <utility>


#include <CGAL/Search_traits_adapter.h>
#include <SWIG_CGAL/Spatial_searching/First_of_pair.h>
#include <SWIG_CGAL/Java/JavaData.h>

typedef First_of_pair<EPIC_Kernel::Point_2,JavaData>                 PPmap_2;
typedef std::pair<EPIC_Kernel::Point_2,JavaData>                     Point_WI_2;
typedef CGAL::Search_traits_adapter<Point_WI_2,PPmap_2,CGAL_ST_2>  CGAL_ST_WI_2;
typedef CGAL::Fuzzy_sphere <CGAL_ST_WI_2>                            CGAL_FS_WI_2;
typedef CGAL::Fuzzy_iso_box<CGAL_ST_WI_2>                            CGAL_FB_WI_2;
//2D search methods
typedef CGAL::Orthogonal_incremental_neighbor_search<CGAL_ST_WI_2>   CGAL_OI_WI_S_2;
typedef CGAL::Incremental_neighbor_search<CGAL_ST_WI_2>              CGAL_I_WI_S_2;
typedef CGAL::K_neighbor_search<CGAL_ST_WI_2>                        CGAL_K_WI_S_2;
typedef CGAL::Orthogonal_k_neighbor_search<CGAL_ST_WI_2>             CGAL_OK_WI_S_2;
//2D trees
typedef CGAL_OI_WI_S_2::Tree                                         CGAL_OI_WI_T_2;
typedef CGAL_I_WI_S_2 ::Tree                                         CGAL_I_WI_T_2;
typedef CGAL_K_WI_S_2 ::Tree                                         CGAL_K_WI_T_2;
typedef CGAL_OK_WI_S_2::Tree                                         CGAL_OK_WI_T_2;
  
typedef First_of_pair<EPIC_Kernel::Point_3,JavaData>                 PPmap_3;
typedef std::pair<EPIC_Kernel::Point_3,JavaData>                     Point_WI_3;
typedef CGAL::Search_traits_adapter<Point_WI_3,PPmap_3,CGAL_ST_3>  CGAL_ST_WI_3;
typedef CGAL::Fuzzy_sphere <CGAL_ST_WI_3>                            CGAL_FS_WI_3;
typedef CGAL::Fuzzy_iso_box<CGAL_ST_WI_3>                            CGAL_FB_WI_3;
//3D search methods
typedef CGAL::Orthogonal_incremental_neighbor_search<CGAL_ST_WI_3>   CGAL_OI_WI_S_3;
typedef CGAL::Incremental_neighbor_search<CGAL_ST_WI_3>              CGAL_I_WI_S_3;
typedef CGAL::K_neighbor_search<CGAL_ST_WI_3>                        CGAL_K_WI_S_3;
typedef CGAL::Orthogonal_k_neighbor_search<CGAL_ST_WI_3>             CGAL_OK_WI_S_3;  
//3D trees
typedef CGAL_OI_WI_S_3::Tree                                         CGAL_OI_WI_T_3;
typedef CGAL_I_WI_S_3 ::Tree                                         CGAL_I_WI_T_3;
typedef CGAL_K_WI_S_3 ::Tree                                         CGAL_K_WI_T_3;
typedef CGAL_OK_WI_S_3::Tree                                         CGAL_OK_WI_T_3;


typedef std::pair<Point_2,JavaData> SWIG_Point_WI_2;
typedef std::pair<Point_3,JavaData> SWIG_Point_WI_3;
typedef Fuzzy_sphere_wrapper <CGAL_FS_WI_2,SWIG_Point_WI_2>  SWIG_FS_WI_2;
typedef Fuzzy_iso_box_wrapper<CGAL_FB_WI_2,SWIG_Point_WI_2>  SWIG_FB_WI_2;
typedef Fuzzy_sphere_wrapper <CGAL_FS_WI_3,SWIG_Point_WI_3>  SWIG_FS_WI_3;
typedef Fuzzy_iso_box_wrapper<CGAL_FB_WI_3,SWIG_Point_WI_3>  SWIG_FB_WI_3;
typedef std::pair<SWIG_Point_WI_2,double> SWIG_PTD_WI_2;
typedef std::pair<SWIG_Point_WI_3,double> SWIG_PTD_WI_3;


  typedef Kd_tree_wrapper  <CGAL_OI_WI_T_2,SWIG_Point_WI_2,SWIG_FS_WI_2,SWIG_FB_WI_2 >       SWIG_OI_WI_T_2;
  typedef NN_search_wrapper_incremental<CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 >   SWIG_OI_WI_S_2;
  typedef Kd_tree_wrapper  <CGAL_OI_WI_T_3,SWIG_Point_WI_3,SWIG_FS_WI_3,SWIG_FB_WI_3 >       SWIG_OI_WI_T_3;
  typedef NN_search_wrapper_incremental<CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 >   SWIG_OI_WI_S_3;


  typedef Kd_tree_wrapper  <CGAL_I_WI_T_2,SWIG_Point_WI_2,SWIG_FS_WI_2,SWIG_FB_WI_2 >       SWIG_I_WI_T_2;
  typedef NN_search_wrapper_incremental<CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 >   SWIG_I_WI_S_2;
  typedef Kd_tree_wrapper  <CGAL_I_WI_T_3,SWIG_Point_WI_3,SWIG_FS_WI_3,SWIG_FB_WI_3 >       SWIG_I_WI_T_3;
  typedef NN_search_wrapper_incremental<CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 >   SWIG_I_WI_S_3;


  typedef Kd_tree_wrapper  <CGAL_OK_WI_T_2,SWIG_Point_WI_2,SWIG_FS_WI_2,SWIG_FB_WI_2 >       SWIG_OK_WI_T_2;
  typedef NN_search_wrapper<CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 >   SWIG_OK_WI_S_2;
  typedef Kd_tree_wrapper  <CGAL_OK_WI_T_3,SWIG_Point_WI_3,SWIG_FS_WI_3,SWIG_FB_WI_3 >       SWIG_OK_WI_T_3;
  typedef NN_search_wrapper<CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 >   SWIG_OK_WI_S_3;


  typedef Kd_tree_wrapper  <CGAL_K_WI_T_2,SWIG_Point_WI_2,SWIG_FS_WI_2,SWIG_FB_WI_2 >       SWIG_K_WI_T_2;
  typedef NN_search_wrapper<CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 >   SWIG_K_WI_S_2;
  typedef Kd_tree_wrapper  <CGAL_K_WI_T_3,SWIG_Point_WI_3,SWIG_FS_WI_3,SWIG_FB_WI_3 >       SWIG_K_WI_T_3;
  typedef NN_search_wrapper<CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 >   SWIG_K_WI_S_3;


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< Point_2,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< Point_2,double > *)new std::pair< Point_2,double >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  Point_2 arg1 ;
  double arg2 ;
  Point_2 *argp1 ;
  std::pair< Point_2,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(Point_2 **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Point_2");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (double)jarg2; 
  {
    try{
      result = (std::pair< Point_2,double > *)new std::pair< Point_2,double >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_2,double > *arg1 = 0 ;
  std::pair< Point_2,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,double > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< Point_2,double > *)new std::pair< Point_2,double >((std::pair< Point_2,double > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_12_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_2,double > *arg1 = (std::pair< Point_2,double > *) 0 ;
  Point_2 *arg2 = (Point_2 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_2,double > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_12_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_2,double > *arg1 = (std::pair< Point_2,double > *) 0 ;
  Point_2 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,double > **)&jarg1; 
  result = (Point_2 *)& ((arg1)->first);
  *(Point_2 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_12_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::pair< Point_2,double > *arg1 = (std::pair< Point_2,double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,double > **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jdouble JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_12_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  std::pair< Point_2,double > *arg1 = (std::pair< Point_2,double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,double > **)&jarg1; 
  result = (double) ((arg1)->second);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1transformed_1distance_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< Point_2,double > *arg1 = (std::pair< Point_2,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< Point_2,double > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< Point_3,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< Point_3,double > *)new std::pair< Point_3,double >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  Point_3 arg1 ;
  double arg2 ;
  Point_3 *argp1 ;
  std::pair< Point_3,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(Point_3 **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Point_3");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (double)jarg2; 
  {
    try{
      result = (std::pair< Point_3,double > *)new std::pair< Point_3,double >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1transformed_1distance_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_3,double > *arg1 = 0 ;
  std::pair< Point_3,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,double > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< Point_3,double > *)new std::pair< Point_3,double >((std::pair< Point_3,double > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_13_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_3,double > *arg1 = (std::pair< Point_3,double > *) 0 ;
  Point_3 *arg2 = (Point_3 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_3,double > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_13_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_3,double > *arg1 = (std::pair< Point_3,double > *) 0 ;
  Point_3 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,double > **)&jarg1; 
  result = (Point_3 *)& ((arg1)->first);
  *(Point_3 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_13_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::pair< Point_3,double > *arg1 = (std::pair< Point_3,double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,double > **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jdouble JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1transformed_1distance_13_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  std::pair< Point_3,double > *arg1 = (std::pair< Point_3,double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,double > **)&jarg1; 
  result = (double) ((arg1)->second);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1transformed_1distance_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< Point_3,double > *arg1 = (std::pair< Point_3,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< Point_3,double > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  Point_2 *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point_2 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *)new Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >((Point_2 const &)*arg1,arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  Point_2 *arg1 = 0 ;
  double arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point_2 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *)new Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >((Point_2 const &)*arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_12_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *) 0 ;
  SwigValueWrapper< Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self **)&jresult = new Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self((const Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *) 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg1; 
  arg2 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1sphere_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Point_2 *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point_2 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *)new Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >((Point_2 const &)*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point_2 *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point_2 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *)new Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >((Point_2 const &)*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_12_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *) 0 ;
  SwigValueWrapper< Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self **)&jresult = new Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self((const Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *) 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg1; 
  arg2 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1iso_1box_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  Point_3 *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point_3 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *)new Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >((Point_3 const &)*arg1,arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  Point_3 *arg1 = 0 ;
  double arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point_3 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *)new Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >((Point_3 const &)*arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_13_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *) 0 ;
  SwigValueWrapper< Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self **)&jresult = new Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self((const Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *) 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg1; 
  arg2 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1sphere_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Point_3 *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point_3 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *)new Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >((Point_3 const &)*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point_3 *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point_3 **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *)new Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >((Point_3 const &)*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_13_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *) 0 ;
  SwigValueWrapper< Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self **)&jresult = new Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self((const Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *) 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg1; 
  arg2 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1iso_1box_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator((const Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator((const NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_12_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d((const NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_2,Point_2,SWIG_OI_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *)new SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  Point_2 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_2 **)&jresult = new Point_2((const Point_2 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self((const SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *)new SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = new std::pair< Point_2,double >((const std::pair< Point_2,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(std::pair< Point_2,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator((const Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator((const NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_12_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d((const NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,Kd_tree_wrapper< CGAL_I_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_2,Point_2,SWIG_I_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *)new SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  Point_2 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_2 **)&jresult = new Point_2((const Point_2 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self((const SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *)new SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = new std::pair< Point_2,double >((const std::pair< Point_2,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(std::pair< Point_2,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self((const SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator((const Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *)new NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *)new NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *)new NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_12_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *)new NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *arg1 = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *) 0 ;
  NN_search_wrapper< CGAL_K_S_2,Point_2,Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_2,Point_2,Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_K_S_2,Point_2,Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator((const NN_search_wrapper< CGAL_K_S_2,Point_2,Kd_tree_wrapper< CGAL_K_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *arg1 = (NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_K_S_2,Point_2,SWIG_K_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *)new SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  Point_2 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_2 **)&jresult = new Point_2((const Point_2 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self((const SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *)new SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = new std::pair< Point_2,double >((const std::pair< Point_2,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(std::pair< Point_2,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self((const SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *)new Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_end;
    Input_iterator_wrapper<Point_2,Point_2::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator((const Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_2 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_2,Point_2::cpp_base>(jarg2,"LCGAL/Kernel/Point_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,SWIG_FS_2,SWIG_FB_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *)new NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *)new NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *)new NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_12_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *)new NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *arg1 = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *) 0 ;
  NN_search_wrapper< CGAL_OK_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_OK_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator((const NN_search_wrapper< CGAL_OK_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_T_2,Point_2,Fuzzy_sphere_wrapper< CGAL_FS_2,Point_2 >,Fuzzy_iso_box_wrapper< CGAL_FB_2,Point_2 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *arg1 = (NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_OK_S_2,Point_2,SWIG_OK_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *)new SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  Point_2 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_2 **)&jresult = new Point_2((const Point_2 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  Point_2 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self((const SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_2::iterator,Point_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *)new SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,double > **)&jresult = new std::pair< Point_2,double >((const std::pair< Point_2,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  std::pair< Point_2,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(std::pair< Point_2,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,std::pair< Point_2,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1iterator_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_2::iterator,SWIG_PTD_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator((const Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator((const NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_13_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d((const NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_S_3,Point_3,SWIG_OI_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *)new SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self((const SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *)new SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = new std::pair< Point_3,double >((const std::pair< Point_3,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(std::pair< Point_3,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator((const Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator((const NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_13_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d((const NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,Kd_tree_wrapper< CGAL_I_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_S_3,Point_3,SWIG_I_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *)new SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self((const SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *)new SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = new std::pair< Point_3,double >((const std::pair< Point_3,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(std::pair< Point_3,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self((const SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator((const Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *)new NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *)new NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *)new NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_13_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *)new NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *arg1 = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *) 0 ;
  NN_search_wrapper< CGAL_K_S_3,Point_3,Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_S_3,Point_3,Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_K_S_3,Point_3,Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator((const NN_search_wrapper< CGAL_K_S_3,Point_3,Kd_tree_wrapper< CGAL_K_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *arg1 = (NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_K_S_3,Point_3,SWIG_K_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *)new SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self((const SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *)new SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = new std::pair< Point_3,double >((const std::pair< Point_3,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(std::pair< Point_3,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self((const SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg1,"(LCGAL/Kernel/Point_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *)new Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_end;
    Input_iterator_wrapper<Point_3,Point_3::cpp_base> it_begin(jarg2,"(LCGAL/Kernel/Point_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator((const Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< Point_3 >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<Point_3,Point_3::cpp_base>(jarg2,"LCGAL/Kernel/Point_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,SWIG_FS_3,SWIG_FB_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *)new NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *)new NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *)new NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_13_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *)new NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *arg1 = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *) 0 ;
  NN_search_wrapper< CGAL_OK_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_OK_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator((const NN_search_wrapper< CGAL_OK_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_T_3,Point_3,Fuzzy_sphere_wrapper< CGAL_FS_3,Point_3 >,Fuzzy_iso_box_wrapper< CGAL_FB_3,Point_3 > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *arg1 = (NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_OK_S_3,Point_3,SWIG_OK_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *)new SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  Point_3 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Point_3 **)&jresult = new Point_3((const Point_3 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  Point_3 *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self((const SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_T_3::iterator,Point_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *)new SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,double > **)&jresult = new std::pair< Point_3,double >((const std::pair< Point_3,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  std::pair< Point_3,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(std::pair< Point_3,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,std::pair< Point_3,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1iterator_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_S_3::iterator,SWIG_PTD_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *)new Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >((std::pair< Point_2,JavaData > const &)*arg1,arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = 0 ;
  double arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *)new Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >((std::pair< Point_2,JavaData > const &)*arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_12_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((std::pair< Point_2,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  SwigValueWrapper< Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self **)&jresult = new Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self((const Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1sphere_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  double arg3 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *)new Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >((std::pair< Point_2,JavaData > const &)*arg1,(std::pair< Point_2,JavaData > const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *)new Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >((std::pair< Point_2,JavaData > const &)*arg1,(std::pair< Point_2,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_12_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((std::pair< Point_2,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  SwigValueWrapper< Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self **)&jresult = new Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self((const Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1iso_1box_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *)new Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >((std::pair< Point_3,JavaData > const &)*arg1,arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1sphere_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = 0 ;
  double arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  {
    try{
      result = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *)new Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >((std::pair< Point_3,JavaData > const &)*arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_13_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((std::pair< Point_3,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  SwigValueWrapper< Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self **)&jresult = new Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self((const Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1sphere_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1sphere_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  double arg3 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *)new Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >((std::pair< Point_3,JavaData > const &)*arg1,(std::pair< Point_3,JavaData > const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Fuzzy_1iso_1box_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *)new Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >((std::pair< Point_3,JavaData > const &)*arg1,(std::pair< Point_3,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_13_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->contains((std::pair< Point_3,JavaData > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  SwigValueWrapper< Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self **)&jresult = new Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self((const Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Fuzzy_1iso_1box_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Fuzzy_1iso_1box_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg1 = (Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< Point_2,JavaData > *)new std::pair< Point_2,JavaData >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point_2 arg1 ;
  JavaData arg2 ;
  Point_2 *argp1 ;
  JavaData *argp2 ;
  std::pair< Point_2,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  argp1 = *(Point_2 **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Point_2");
    return 0;
  }
  arg1 = *argp1; 
  argp2 = *(JavaData **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null JavaData");
    return 0;
  }
  arg2 = *argp2; 
  {
    try{
      result = (std::pair< Point_2,JavaData > *)new std::pair< Point_2,JavaData >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = 0 ;
  std::pair< Point_2,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< Point_2,JavaData > *)new std::pair< Point_2,JavaData >((std::pair< Point_2,JavaData > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_12_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_2,JavaData > *arg1 = (std::pair< Point_2,JavaData > *) 0 ;
  Point_2 *arg2 = (Point_2 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  arg2 = *(Point_2 **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_12_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = (std::pair< Point_2,JavaData > *) 0 ;
  Point_2 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  result = (Point_2 *)& ((arg1)->first);
  *(Point_2 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_12_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_2,JavaData > *arg1 = (std::pair< Point_2,JavaData > *) 0 ;
  JavaData *arg2 = (JavaData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  arg2 = *(JavaData **)&jarg2; 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_12_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > *arg1 = (std::pair< Point_2,JavaData > *) 0 ;
  JavaData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  result = (JavaData *)& ((arg1)->second);
  *(JavaData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< Point_2,JavaData > *arg1 = (std::pair< Point_2,JavaData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< Point_3,JavaData > *)new std::pair< Point_3,JavaData >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point_3 arg1 ;
  JavaData arg2 ;
  Point_3 *argp1 ;
  JavaData *argp2 ;
  std::pair< Point_3,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  argp1 = *(Point_3 **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Point_3");
    return 0;
  }
  arg1 = *argp1; 
  argp2 = *(JavaData **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null JavaData");
    return 0;
  }
  arg2 = *argp2; 
  {
    try{
      result = (std::pair< Point_3,JavaData > *)new std::pair< Point_3,JavaData >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = 0 ;
  std::pair< Point_3,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< Point_3,JavaData > *)new std::pair< Point_3,JavaData >((std::pair< Point_3,JavaData > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_13_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_3,JavaData > *arg1 = (std::pair< Point_3,JavaData > *) 0 ;
  Point_3 *arg2 = (Point_3 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  arg2 = *(Point_3 **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_13_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = (std::pair< Point_3,JavaData > *) 0 ;
  Point_3 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  result = (Point_3 *)& ((arg1)->first);
  *(Point_3 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_13_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< Point_3,JavaData > *arg1 = (std::pair< Point_3,JavaData > *) 0 ;
  JavaData *arg2 = (JavaData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  arg2 = *(JavaData **)&jarg2; 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_13_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > *arg1 = (std::pair< Point_3,JavaData > *) 0 ;
  JavaData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  result = (JavaData *)& ((arg1)->second);
  *(JavaData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< Point_3,JavaData > *arg1 = (std::pair< Point_3,JavaData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< std::pair< Point_2,JavaData >,double > *)new std::pair< std::pair< Point_2,JavaData >,double >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  std::pair< Point_2,JavaData > arg1 ;
  double arg2 ;
  std::pair< Point_2,JavaData > *argp1 ;
  std::pair< std::pair< Point_2,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::pair< Point_2,JavaData > **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::pair< Point_2,JavaData >");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (double)jarg2; 
  {
    try{
      result = (std::pair< std::pair< Point_2,JavaData >,double > *)new std::pair< std::pair< Point_2,JavaData >,double >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_2,JavaData >,double > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< std::pair< Point_2,JavaData >,double > *)new std::pair< std::pair< Point_2,JavaData >,double >((std::pair< std::pair< Point_2,JavaData >,double > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_12_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = (std::pair< std::pair< Point_2,JavaData >,double > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = (std::pair< Point_2,JavaData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_12_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = (std::pair< std::pair< Point_2,JavaData >,double > *) 0 ;
  std::pair< Point_2,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1; 
  result = (std::pair< Point_2,JavaData > *)& ((arg1)->first);
  *(std::pair< Point_2,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_12_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = (std::pair< std::pair< Point_2,JavaData >,double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jdouble JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_12_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = (std::pair< std::pair< Point_2,JavaData >,double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1; 
  result = (double) ((arg1)->second);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1info_1with_1transformed_1distance_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< std::pair< Point_2,JavaData >,double > *arg1 = (std::pair< std::pair< Point_2,JavaData >,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (std::pair< std::pair< Point_3,JavaData >,double > *)new std::pair< std::pair< Point_3,JavaData >,double >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  std::pair< Point_3,JavaData > arg1 ;
  double arg2 ;
  std::pair< Point_3,JavaData > *argp1 ;
  std::pair< std::pair< Point_3,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(std::pair< Point_3,JavaData > **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::pair< Point_3,JavaData >");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (double)jarg2; 
  {
    try{
      result = (std::pair< std::pair< Point_3,JavaData >,double > *)new std::pair< std::pair< Point_3,JavaData >,double >(arg1,arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Point_1with_1info_1with_1transformed_1distance_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_3,JavaData >,double > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (std::pair< std::pair< Point_3,JavaData >,double > *)new std::pair< std::pair< Point_3,JavaData >,double >((std::pair< std::pair< Point_3,JavaData >,double > const &)*arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_13_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = (std::pair< std::pair< Point_3,JavaData >,double > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = (std::pair< Point_3,JavaData > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_13_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = (std::pair< std::pair< Point_3,JavaData >,double > *) 0 ;
  std::pair< Point_3,JavaData > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1; 
  result = (std::pair< Point_3,JavaData > *)& ((arg1)->first);
  *(std::pair< Point_3,JavaData > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_13_1second_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = (std::pair< std::pair< Point_3,JavaData >,double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT jdouble JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Point_1with_1info_1with_1transformed_1distance_13_1second_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = (std::pair< std::pair< Point_3,JavaData >,double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1; 
  result = (double) ((arg1)->second);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Point_1with_1info_1with_1transformed_1distance_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::pair< std::pair< Point_3,JavaData >,double > *arg1 = (std::pair< std::pair< Point_3,JavaData >,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator((const NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1with_1info_12_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d((const NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OI_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_2,Point_2,SWIG_OI_WI_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = new std::pair< Point_2,JavaData >((const std::pair< Point_2,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *)new SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_2,JavaData >,double >((const std::pair< std::pair< Point_2,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_2,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator((const NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1with_1info_12_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d((const NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_I_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_2,Point_2,SWIG_I_WI_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = new std::pair< Point_2,JavaData >((const std::pair< Point_2,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *)new SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_2,JavaData >,double >((const std::pair< std::pair< Point_2,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_2,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *)new NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *)new NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *)new NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_12_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *)new NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *arg1 = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *) 0 ;
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_K_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator((const NN_search_wrapper< CGAL_K_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_K_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *arg1 = (NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_K_WI_S_2,Point_2,SWIG_K_WI_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = new std::pair< Point_2,JavaData >((const std::pair< Point_2,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *)new SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_2,JavaData >,double >((const std::pair< std::pair< Point_2,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_2,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *)new Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_2;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_2,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_2,JavaData> ,internal::Converter<std::pair<Point_2,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_2;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,SWIG_FS_WI_2,SWIG_FB_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_12_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *)new NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 >(*arg1,(Point_2 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_12_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *)new NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_12_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *)new NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_12_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > *arg1 = 0 ;
  Point_2 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_2 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_2 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *)new NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 >(*arg1,(Point_2 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1with_1info_12_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *arg1 = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *) 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator((const NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,Kd_tree_wrapper< CGAL_OK_WI_T_2,std::pair< Point_2,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_2,std::pair< Point_2,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_2,std::pair< Point_2,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *arg1 = (NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_OK_WI_S_2,Point_2,SWIG_OK_WI_T_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_2,JavaData > **)&jresult = new std::pair< Point_2,JavaData >((const std::pair< Point_2,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  std::pair< Point_2,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_2,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_2,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_2::iterator,std::pair< Point_2,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *)new SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_2,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_2,JavaData >,double >((const std::pair< std::pair< Point_2,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  std::pair< std::pair< Point_2,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_2,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_2,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,std::pair< std::pair< Point_2,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_2::iterator,SWIG_PTD_WI_2 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1with_1info_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator((const NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1with_1info_13_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d((const NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OI_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_OI_WI_S_3,Point_3,SWIG_OI_WI_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = new std::pair< Point_3,JavaData >((const std::pair< Point_3,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *)new SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_3,JavaData >,double >((const std::pair< std::pair< Point_3,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_3,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1incremental_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OI_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1with_1info_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1with_1info_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try{
      result = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *)new NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator((const NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1with_1info_13_1value(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *) 0 ;
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->value();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d **)&jresult = new NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d((const NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_I_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Point_d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *arg1 = (NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper_incremental< CGAL_I_WI_S_3,Point_3,SWIG_I_WI_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = new std::pair< Point_3,JavaData >((const std::pair< Point_3,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Incremental_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *)new SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_3,JavaData >,double >((const std::pair< std::pair< Point_3,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_3,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Incremental_1neighbor_1search_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Incremental_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_I_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1with_1info_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *)new NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *)new NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *)new NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1with_1info_13_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *)new NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *arg1 = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *) 0 ;
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_K_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator((const NN_search_wrapper< CGAL_K_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_K_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *arg1 = (NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_K_WI_S_3,Point_3,SWIG_K_WI_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = new std::pair< Point_3,JavaData >((const std::pair< Point_3,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1tree_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1K_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *)new SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_3,JavaData >,double >((const std::pair< std::pair< Point_3,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_3,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_K_1neighbor_1search_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1K_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_K_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jlong jresult = 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg1 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg1,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg1=std::make_pair(it_begin,it_end);
  }
  {
    try{
      result = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *)new Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 >(arg1);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->insert((Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Point_d const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1insert_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::input > arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_end;
    Input_iterator_wrapper<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type> it_begin(jarg2,"(LCGAL/Spatial_searching/Point_with_info_3;)J");
    arg2=std::make_pair(it_begin,it_end);
  }
  {
    try{
      (arg1)->insert(arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator **)&jresult = new Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator((const Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->clear();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jint JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      result = (int)(arg1)->size();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1search_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  SwigValueWrapper< Query_iterator_helper< std::pair< Point_3,JavaData > >::output > arg2 ;
  Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    arg2=boost::make_function_output_iterator( Container_writer<std::pair<Point_3,JavaData> ,internal::Converter<std::pair<Point_3,JavaData> >::result_type>(jarg2,"LCGAL/Spatial_searching/Point_with_info_3;") );
  }
  arg3 = *(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->search(arg2,(Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > const &)*arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      (arg1)->build();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13_1same_1internal_1object(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  arg2 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)(arg1)->same_internal_object((Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *arg1 = (Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,SWIG_FS_WI_3,SWIG_FB_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_13_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *)new NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 >(*arg1,(Point_3 const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_13_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *)new NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_13_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *)new NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1with_1info_13_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > *arg1 = 0 ;
  Point_3 *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  bool arg5 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > & reference is null");
    return 0;
  } 
  arg2 = *(Point_3 **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point_3 const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try{
      result = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *)new NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 >(*arg1,(Point_3 const &)*arg2,arg3,arg4,arg5);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1with_1info_13_1iterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *arg1 = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *) 0 ;
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->iterator();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator **)&jresult = new NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator((const NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,Kd_tree_wrapper< CGAL_OK_WI_T_3,std::pair< Point_3,JavaData >,Fuzzy_sphere_wrapper< CGAL_FS_WI_3,std::pair< Point_3,JavaData > >,Fuzzy_iso_box_wrapper< CGAL_FB_WI_3,std::pair< Point_3,JavaData > > > >::Iterator &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *arg1 = (NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NN_search_wrapper< CGAL_OK_WI_S_3,Point_3,SWIG_OK_WI_T_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *)new SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< Point_3,JavaData > **)&jresult = new std::pair< Point_3,JavaData >((const std::pair< Point_3,JavaData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  std::pair< Point_3,JavaData > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(std::pair< Point_3,JavaData > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< Point_3,JavaData > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1tree_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_T_3::iterator,std::pair< Point_3,JavaData > > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_new_1Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try{
      result = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *)new SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 >();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1slow_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (arg1)->slow_next();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(std::pair< std::pair< Point_3,JavaData >,double > **)&jresult = new std::pair< std::pair< Point_3,JavaData >,double >((const std::pair< std::pair< Point_3,JavaData >,double > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  std::pair< std::pair< Point_3,JavaData >,double > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(std::pair< std::pair< Point_3,JavaData >,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::pair< std::pair< Point_3,JavaData >,double > & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->next(*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jlong JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = ((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->deepcopy();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jresult = new SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self((const SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1clone_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return ;
  } 
  {
    try{
      (arg1)->deepcopy((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      result = (bool)(arg1)->hasNext();
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator ==((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13_1not_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  arg2 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const & reference is null");
    return 0;
  } 
  {
    try{
      result = (bool)((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > const *)arg1)->operator !=((SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,std::pair< std::pair< Point_3,JavaData >,double > >::Self const &)*arg2);
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_CGAL_Spatial_1searching_CGAL_1Spatial_1searchingJNI_delete_1Orthogonal_1k_1neighbor_1search_1iterator_1with_1info_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *arg1 = (SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SWIG_CGAL_Iterator< CGAL_OK_WI_S_3::iterator,SWIG_PTD_WI_3 > **)&jarg1; 
  {
    try{
      delete arg1;
    }
    catch(std::exception& e){
      std::string error_msg("Error in SWIG_CGAL code. Here is the text of the C++ exception:\n");
      error_msg += e.what();
      if ( !throwJavaException(error_msg.c_str()) )
      throw; //rethrow exception that could not be thrown in java
    }
    catch(...){
      if ( !throwJavaException("Unknown error in SWIG_CGAL code") )
      throw; //rethrow exception that could not be thrown in java
    }
  }
}


#ifdef __cplusplus
}
#endif

