/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Convex_hull_2;
import CGAL.Kernel.Point_2; import java.util.Iterator; import java.util.Collection; 
public class CGAL_Convex_hull_2 {
  public static void convex_hull_2(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.convex_hull_2(range, result);
  }

  public static void ch_bykat(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_bykat(range, result);
  }

  public static void ch_eddy(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_eddy(range, result);
  }

  public static void ch_graham_andrew(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_graham_andrew(range, result);
  }

  public static void ch_melkman(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_melkman(range, result);
  }

  public static void ch_jarvis(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_jarvis(range, result);
  }

  public static void lower_hull_points_2(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.lower_hull_points_2(range, result);
  }

  public static void upper_hull_points_2(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.upper_hull_points_2(range, result);
  }

  public static void ch_akl_toussaint(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_akl_toussaint(range, result);
  }

  public static void ch_graham_andrew_scan(Iterator<Point_2> range, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_graham_andrew_scan(range, result);
  }

  public static void ch_jarvis_march(Iterator<Point_2> range, Point_2 start_p, Point_2 stop_p, Collection<Point_2> result) {
    CGAL_Convex_hull_2JNI.ch_jarvis_march(range, Point_2.getCPtr(start_p), start_p, Point_2.getCPtr(stop_p), stop_p, result);
  }

  public static boolean is_ccw_strongly_convex_2(Iterator<Point_2> range) {
    return CGAL_Convex_hull_2JNI.is_ccw_strongly_convex_2(range);
  }

  public static boolean is_cw_strongly_convex_2(Iterator<Point_2> range) {
    return CGAL_Convex_hull_2JNI.is_cw_strongly_convex_2(range);
  }

  public static void ch_n_point(Iterator<Point_2> range, Point_2 n) {
    CGAL_Convex_hull_2JNI.ch_n_point(range, Point_2.getCPtr(n), n);
  }

  public static void ch_s_point(Iterator<Point_2> range, Point_2 s) {
    CGAL_Convex_hull_2JNI.ch_s_point(range, Point_2.getCPtr(s), s);
  }

  public static void ch_e_point(Iterator<Point_2> range, Point_2 e) {
    CGAL_Convex_hull_2JNI.ch_e_point(range, Point_2.getCPtr(e), e);
  }

  public static void ch_w_point(Iterator<Point_2> range, Point_2 w) {
    CGAL_Convex_hull_2JNI.ch_w_point(range, Point_2.getCPtr(w), w);
  }

  public static void ch_we_point(Iterator<Point_2> range, Point_2 w, Point_2 e) {
    CGAL_Convex_hull_2JNI.ch_we_point(range, Point_2.getCPtr(w), w, Point_2.getCPtr(e), e);
  }

  public static void ch_ns_point(Iterator<Point_2> range, Point_2 n, Point_2 s) {
    CGAL_Convex_hull_2JNI.ch_ns_point(range, Point_2.getCPtr(n), n, Point_2.getCPtr(s), s);
  }

  public static void ch_nswe_point(Iterator<Point_2> range, Point_2 n, Point_2 s, Point_2 w, Point_2 e) {
    CGAL_Convex_hull_2JNI.ch_nswe_point(range, Point_2.getCPtr(n), n, Point_2.getCPtr(s), s, Point_2.getCPtr(w), w, Point_2.getCPtr(e), e);
  }

}
