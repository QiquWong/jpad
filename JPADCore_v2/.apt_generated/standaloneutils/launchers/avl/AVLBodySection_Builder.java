// Autogenerated code. Do not modify.
package standaloneutils.launchers.avl;

import com.google.common.annotations.VisibleForTesting;
import com.google.common.base.Joiner;
import com.google.common.base.Preconditions;
import java.io.File;
import java.util.EnumSet;
import java.util.Objects;
import java.util.function.UnaryOperator;
import javax.annotation.Generated;
import standaloneutils.launchers.avl.AVLBodySection;

/**
 * Auto-generated superclass of {@link AVLBodySection.Builder},
 * derived from the API of {@link AVLBodySection}.
 */
@Generated("org.inferred.freebuilder.processor.CodeGenerator")
abstract class AVLBodySection_Builder {

  /**
   * Creates a new builder using {@code value} as a template.
   */
  public static AVLBodySection.Builder from(AVLBodySection value) {
    return new AVLBodySection.Builder().mergeFrom(value);
  }

  private static final Joiner COMMA_JOINER = Joiner.on(", ").skipNulls();

  private enum Property {
    DESCRIPTION("description"),
    ORIGIN("origin"),
    BODY_SECTION_COORD_FILE("bodySectionCoordFile"),
    ;

    private final String name;

    private Property(String name) {
      this.name = name;
    }

    @Override
    public String toString() {
      return name;
    }
  }

  private String description;
  private java.lang.Double[] origin;
  private File bodySectionCoordFile;
  private final EnumSet<AVLBodySection_Builder.Property> _unsetProperties =
      EnumSet.allOf(AVLBodySection_Builder.Property.class);

  /**
   * Sets the value to be returned by {@link AVLBodySection#getDescription()}.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code description} is null
   */
  public AVLBodySection.Builder setDescription(String description) {
    this.description = Preconditions.checkNotNull(description);
    _unsetProperties.remove(AVLBodySection_Builder.Property.DESCRIPTION);
    return (AVLBodySection.Builder) this;
  }

  /**
   * Replaces the value to be returned by {@link AVLBodySection#getDescription()}
   * by applying {@code mapper} to it and using the result.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code mapper} is null or returns null
   * @throws IllegalStateException if the field has not been set
   */
  public AVLBodySection.Builder mapDescription(UnaryOperator<String> mapper) {
    Preconditions.checkNotNull(mapper);
    return setDescription(mapper.apply(getDescription()));
  }

  /**
   * Returns the value that will be returned by {@link AVLBodySection#getDescription()}.
   *
   * @throws IllegalStateException if the field has not been set
   */
  public String getDescription() {
    Preconditions.checkState(
        !_unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION),
        "description not set");
    return description;
  }

  /**
   * Sets the value to be returned by {@link AVLBodySection#getOrigin()}.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code origin} is null
   */
  public AVLBodySection.Builder setOrigin(java.lang.Double[] origin) {
    this.origin = Preconditions.checkNotNull(origin);
    _unsetProperties.remove(AVLBodySection_Builder.Property.ORIGIN);
    return (AVLBodySection.Builder) this;
  }

  /**
   * Replaces the value to be returned by {@link AVLBodySection#getOrigin()}
   * by applying {@code mapper} to it and using the result.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code mapper} is null or returns null
   * @throws IllegalStateException if the field has not been set
   */
  public AVLBodySection.Builder mapOrigin(UnaryOperator<java.lang.Double[]> mapper) {
    Preconditions.checkNotNull(mapper);
    return setOrigin(mapper.apply(getOrigin()));
  }

  /**
   * Returns the value that will be returned by {@link AVLBodySection#getOrigin()}.
   *
   * @throws IllegalStateException if the field has not been set
   */
  public java.lang.Double[] getOrigin() {
    Preconditions.checkState(
        !_unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN), "origin not set");
    return origin;
  }

  /**
   * Sets the value to be returned by {@link AVLBodySection#getBodySectionCoordFile()}.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code bodySectionCoordFile} is null
   */
  public AVLBodySection.Builder setBodySectionCoordFile(File bodySectionCoordFile) {
    this.bodySectionCoordFile = Preconditions.checkNotNull(bodySectionCoordFile);
    _unsetProperties.remove(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE);
    return (AVLBodySection.Builder) this;
  }

  /**
   * Replaces the value to be returned by {@link AVLBodySection#getBodySectionCoordFile()}
   * by applying {@code mapper} to it and using the result.
   *
   * @return this {@code Builder} object
   * @throws NullPointerException if {@code mapper} is null or returns null
   * @throws IllegalStateException if the field has not been set
   */
  public AVLBodySection.Builder mapBodySectionCoordFile(UnaryOperator<File> mapper) {
    Preconditions.checkNotNull(mapper);
    return setBodySectionCoordFile(mapper.apply(getBodySectionCoordFile()));
  }

  /**
   * Returns the value that will be returned by {@link AVLBodySection#getBodySectionCoordFile()}.
   *
   * @throws IllegalStateException if the field has not been set
   */
  public File getBodySectionCoordFile() {
    Preconditions.checkState(
        !_unsetProperties.contains(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE),
        "bodySectionCoordFile not set");
    return bodySectionCoordFile;
  }

  /**
   * Sets all property values using the given {@code AVLBodySection} as a template.
   */
  public AVLBodySection.Builder mergeFrom(AVLBodySection value) {
    AVLBodySection_Builder _defaults = new AVLBodySection.Builder();
    if (_defaults._unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION)
        || !value.getDescription().equals(_defaults.getDescription())) {
      setDescription(value.getDescription());
    }
    if (_defaults._unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN)
        || !value.getOrigin().equals(_defaults.getOrigin())) {
      setOrigin(value.getOrigin());
    }
    if (_defaults._unsetProperties.contains(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE)
        || !value.getBodySectionCoordFile().equals(_defaults.getBodySectionCoordFile())) {
      setBodySectionCoordFile(value.getBodySectionCoordFile());
    }
    return (AVLBodySection.Builder) this;
  }

  /**
   * Copies values from the given {@code Builder}.
   * Does not affect any properties not set on the input.
   */
  public AVLBodySection.Builder mergeFrom(AVLBodySection.Builder template) {
    // Upcast to access private fields; otherwise, oddly, we get an access violation.
    AVLBodySection_Builder base = (AVLBodySection_Builder) template;
    AVLBodySection_Builder _defaults = new AVLBodySection.Builder();
    if (!base._unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION)
        && (_defaults._unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION)
            || !template.getDescription().equals(_defaults.getDescription()))) {
      setDescription(template.getDescription());
    }
    if (!base._unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN)
        && (_defaults._unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN)
            || !template.getOrigin().equals(_defaults.getOrigin()))) {
      setOrigin(template.getOrigin());
    }
    if (!base._unsetProperties.contains(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE)
        && (_defaults._unsetProperties.contains(
                AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE)
            || !template.getBodySectionCoordFile().equals(_defaults.getBodySectionCoordFile()))) {
      setBodySectionCoordFile(template.getBodySectionCoordFile());
    }
    return (AVLBodySection.Builder) this;
  }

  /**
   * Resets the state of this builder.
   */
  public AVLBodySection.Builder clear() {
    AVLBodySection_Builder _defaults = new AVLBodySection.Builder();
    description = _defaults.description;
    origin = _defaults.origin;
    bodySectionCoordFile = _defaults.bodySectionCoordFile;
    _unsetProperties.clear();
    _unsetProperties.addAll(_defaults._unsetProperties);
    return (AVLBodySection.Builder) this;
  }

  /**
   * Returns a newly-created {@link AVLBodySection} based on the contents of the {@code Builder}.
   *
   * @throws IllegalStateException if any field has not been set
   */
  public AVLBodySection build() {
    Preconditions.checkState(_unsetProperties.isEmpty(), "Not set: %s", _unsetProperties);
    return new AVLBodySection_Builder.Value(this);
  }

  /**
   * Returns a newly-created partial {@link AVLBodySection}
   * based on the contents of the {@code Builder}.
   * State checking will not be performed.
   * Unset properties will throw an {@link UnsupportedOperationException}
   * when accessed via the partial object.
   *
   * <p>Partials should only ever be used in tests.
   */
  @VisibleForTesting()
  public AVLBodySection buildPartial() {
    return new AVLBodySection_Builder.Partial(this);
  }

  private static final class Value implements AVLBodySection {
    private final String description;
    private final java.lang.Double[] origin;
    private final File bodySectionCoordFile;

    private Value(AVLBodySection_Builder builder) {
      this.description = builder.description;
      this.origin = builder.origin;
      this.bodySectionCoordFile = builder.bodySectionCoordFile;
    }

    @Override
    public String getDescription() {
      return description;
    }

    @Override
    public java.lang.Double[] getOrigin() {
      return origin;
    }

    @Override
    public File getBodySectionCoordFile() {
      return bodySectionCoordFile;
    }

    @Override
    public boolean equals(Object obj) {
      if (!(obj instanceof AVLBodySection_Builder.Value)) {
        return false;
      }
      AVLBodySection_Builder.Value other = (AVLBodySection_Builder.Value) obj;
      return Objects.equals(description, other.description)
          && Objects.equals(origin, other.origin)
          && Objects.equals(bodySectionCoordFile, other.bodySectionCoordFile);
    }

    @Override
    public int hashCode() {
      return Objects.hash(description, origin, bodySectionCoordFile);
    }

    @Override
    public String toString() {
      return "AVLBodySection{"
          + "description="
          + description
          + ", "
          + "origin="
          + origin
          + ", "
          + "bodySectionCoordFile="
          + bodySectionCoordFile
          + "}";
    }
  }

  private static final class Partial implements AVLBodySection {
    private final String description;
    private final java.lang.Double[] origin;
    private final File bodySectionCoordFile;
    private final EnumSet<AVLBodySection_Builder.Property> _unsetProperties;

    Partial(AVLBodySection_Builder builder) {
      this.description = builder.description;
      this.origin = builder.origin;
      this.bodySectionCoordFile = builder.bodySectionCoordFile;
      this._unsetProperties = builder._unsetProperties.clone();
    }

    @Override
    public String getDescription() {
      if (_unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION)) {
        throw new UnsupportedOperationException("description not set");
      }
      return description;
    }

    @Override
    public java.lang.Double[] getOrigin() {
      if (_unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN)) {
        throw new UnsupportedOperationException("origin not set");
      }
      return origin;
    }

    @Override
    public File getBodySectionCoordFile() {
      if (_unsetProperties.contains(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE)) {
        throw new UnsupportedOperationException("bodySectionCoordFile not set");
      }
      return bodySectionCoordFile;
    }

    @Override
    public boolean equals(Object obj) {
      if (!(obj instanceof AVLBodySection_Builder.Partial)) {
        return false;
      }
      AVLBodySection_Builder.Partial other = (AVLBodySection_Builder.Partial) obj;
      return Objects.equals(description, other.description)
          && Objects.equals(origin, other.origin)
          && Objects.equals(bodySectionCoordFile, other.bodySectionCoordFile)
          && Objects.equals(_unsetProperties, other._unsetProperties);
    }

    @Override
    public int hashCode() {
      return Objects.hash(description, origin, bodySectionCoordFile, _unsetProperties);
    }

    @Override
    public String toString() {
      return "partial AVLBodySection{"
          + COMMA_JOINER.join(
              (!_unsetProperties.contains(AVLBodySection_Builder.Property.DESCRIPTION)
                  ? "description=" + description
                  : null),
              (!_unsetProperties.contains(AVLBodySection_Builder.Property.ORIGIN)
                  ? "origin=" + origin
                  : null),
              (!_unsetProperties.contains(AVLBodySection_Builder.Property.BODY_SECTION_COORD_FILE)
                  ? "bodySectionCoordFile=" + bodySectionCoordFile
                  : null))
          + "}";
    }
  }
}
