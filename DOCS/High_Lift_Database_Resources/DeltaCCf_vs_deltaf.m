clc; close all; clear all;

%% Import data
DeltaCCf_1Slot = importdata('DeltaCCfIIa.mat');
DeltaCCf_2Slot = importdata('DeltaCCfIIb.mat');
DeltaCCf_Plain = importdata('DeltaCCfIa.mat');
DeltaCCf_Fowler = importdata('DeltaCCfIVa.mat');
DeltaCCf_3Slot = importdata('DeltaCCfIVb.mat');

nPoints = 50;
dfVector = transpose(linspace(0, 60, nPoints));

%% 1-Slot  (1)
smoothingParameter = 0.999999;
DeltaCCf_1Slot_SplineStatic = csaps( ...
    DeltaCCf_1Slot(:,1), ...
    DeltaCCf_1Slot(:,2), ...
    smoothingParameter ...
    );

DeltaCCf_1Slot_Static = ppval( ...
    DeltaCCf_1Slot_SplineStatic, ...
    dfVector ...
    );

%% 2-Slot  (2)
smoothingParameter = 0.999999;
DeltaCCf_2Slot_SplineStatic = csaps( ...
    DeltaCCf_2Slot(:,1), ...
    DeltaCCf_2Slot(:,2), ...
    smoothingParameter ...
    );

DeltaCCf_2Slot_Static = ppval( ...
    DeltaCCf_2Slot_SplineStatic, ...
    dfVector ...
    );

%% Plain Flap zh/cf = 0.2 (4)
smoothingParameter = 0.999999;
DeltaCCf_Plain_SplineStatic = csaps( ...
    DeltaCCf_Plain(:,1), ...
    DeltaCCf_Plain(:,2), ...
    smoothingParameter ...
    );

DeltaCCf_Plain_Static = ppval( ...
    DeltaCCf_Plain_SplineStatic, ...
    dfVector ...
    );

%% Fowler (5)
smoothingParameter = 0.999999;
DeltaCCf_Fowler_SplineStatic = csaps( ...
    DeltaCCf_Fowler(:,1), ...
    DeltaCCf_Fowler(:,2), ...
    smoothingParameter ...
    );

DeltaCCf_Fowler_Static = ppval( ...
    DeltaCCf_Fowler_SplineStatic, ...
    dfVector ...
    );

%% 3-Slot  (6)
smoothingParameter = 0.999999;
DeltaCCf_3Slot_SplineStatic = csaps( ...
    DeltaCCf_3Slot(:,1), ...
    DeltaCCf_3Slot(:,2), ...
    smoothingParameter ...
    );

DeltaCCf_3Slot_Static = ppval( ...
    DeltaCCf_3Slot_SplineStatic, ...
    dfVector ...
    );

%% Plots
figure(1)
plot ( ...
    dfVector(13:42), DeltaCCf_1Slot_Static(13:42), 'b-*' ... , ...
 );
 hold on
 
 plot ( ...
    dfVector(13:end), DeltaCCf_2Slot_Static(13:end), 'b-+' ... , ...
 );

hold on

plot ( ...
    dfVector(1:38), DeltaCCf_Plain_Static(1:38), 'b-.' ... , ...
 );

hold on

plot ( ...
    dfVector(1:38), DeltaCCf_Fowler_Static(1:38), 'b-^' ... , ...
 );
hold on

plot ( ...
    dfVector, DeltaCCf_3Slot_Static, 'b' ... , ...
 );

 xlabel('\delta_f (deg)'); ylabel('\Deltac/c_f');
 title('\Deltac/c_f variation with \delta_f (deg)');
  legend('1-Slot', '2-Slot', 'Plain Flap', 'Fowler', '3-Slot');
 
 axis([0 60 0 1]);
 grid on;
 %% preparing output to HDF

% FlapType (see number for each section)
flapTypeVector = [ ...
    1;2;3;4;5 ...
    ]; 
 
%columns --> curves
myData = [ ...
    DeltaCCf_1Slot_Static,...
    DeltaCCf_2Slot_Static, ...
    DeltaCCf_Plain_Static, ...
    DeltaCCf_Fowler_Static, ...
    DeltaCCf_3Slot_Static];    
hdfFileName = 'DeltacCf_vs_deltaf.h5';

if ( exist(hdfFileName, 'file') )
    fprintf('file %s exists, deleting and creating a new one\n', hdfFileName);
    delete(hdfFileName)
else
    fprintf('Creating new file %s\n', hdfFileName);
end

% Dataset: data
h5create(hdfFileName, '/DeltacCf_vs_deltaf/data', size(myData'));
h5write(hdfFileName, '/DeltacCf_vs_deltaf/data', myData');

% Dataset: var_0
h5create(hdfFileName, '/DeltacCf_vs_deltaf/var_0', size(flapTypeVector'));
h5write(hdfFileName, '/DeltacCf_vs_deltaf/var_0', flapTypeVector');

% Dataset: var_1
h5create(hdfFileName, '/DeltacCf_vs_deltaf/var_1', size(dfVector'));
h5write(hdfFileName, '/DeltacCf_vs_deltaf/var_1', dfVector');