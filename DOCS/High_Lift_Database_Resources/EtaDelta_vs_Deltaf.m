clc; close all; clear all;

%% Import data
EtaDeltaSingleSlotted = importdata('EtaDeltaSimpleHinged.mat');
EtaDeltaDoubleSlotted = importdata('EtaDeltaDoubleSlotted.mat');
EtaDeltaFowler = importdata('EtaDeltaFowler.mat');
EtaDeltaTripleSlotted = importdata('EtaDeltaTripleSlotted.mat');

nPoints = 50;
deltafVector = transpose(linspace(0, 80, nPoints));

%% Single Slotted (1)
smoothingParameter = 0.999999;
EtaDeltaSingleSlotted_SplineStatic = csaps( ...
    EtaDeltaSingleSlotted(:,1), ...
    EtaDeltaSingleSlotted(:,2), ...
    smoothingParameter ...
    );

EtaDeltaSingleSlotted_Static = ppval( ...
    EtaDeltaSingleSlotted_SplineStatic, ...
    deltafVector ...
    );

%% Double Slotted  (2)
smoothingParameter = 0.999999;
EtaDeltaDoubleSlotted_SplineStatic = csaps( ...
    EtaDeltaDoubleSlotted(:,1), ...
    EtaDeltaDoubleSlotted(:,2), ...
    smoothingParameter ...
    );

EtaDeltaDoubleSlotted_Static = ppval( ...
    EtaDeltaDoubleSlotted_SplineStatic, ...
    deltafVector ...
    );

%% Fowler  (5)
smoothingParameter = 0.999999;
EtaDeltaFowler_SplineStatic = csaps( ...
    EtaDeltaFowler(:,1), ...
    EtaDeltaFowler(:,2), ...
    smoothingParameter ...
    );

EtaDeltaFowler_Static = ppval( ...
    EtaDeltaFowler_SplineStatic, ...
    deltafVector ...
    );

%% Triple Soltted  (6)
smoothingParameter = 0.999999;
EtaDeltaTripleSlotted_SplineStatic = csaps( ...
    EtaDeltaTripleSlotted(:,1), ...
    EtaDeltaTripleSlotted(:,2), ...
    smoothingParameter ...
    );

EtaDeltaTripleSlotted_Static = ppval( ...
    EtaDeltaTripleSlotted_SplineStatic, ...
    deltafVector ...
    );

%% Plots
figure(1)

plot ( ...
    deltafVector(1:33), EtaDeltaSingleSlotted_Static(1:33), 'b-*' ... , ...
 );

hold on;

plot ( ...
    deltafVector(1:41), EtaDeltaDoubleSlotted_Static(1:41), 'b-+' ... , ...
 );

hold on;

hold on;

plot ( ...
    deltafVector(1:29), EtaDeltaFowler_Static(1:29), 'b-^' ... , ...
 );

hold on;

plot ( ...
    deltafVector(1:45), EtaDeltaTripleSlotted_Static(1:45), 'b' ... , ...
 );

xlabel('\delta_f'); ylabel('\eta_\delta');
 title('\eta_\delta variation with \delta_f');
 legend('1-Slot', '2-Slot', 'Fowler', '3-Slot');
 
 axis([0 80 0.3 1]);
 grid on;
 %% preparing output to HDF
 
% FlapType (see number for each section)
flapTypeVector = [ ...
    1;2;4;5 ...
    ]; 
 
%columns --> curves
myData = [ ...
    EtaDeltaSingleSlotted_Static, ...
    EtaDeltaDoubleSlotted_Static, ...
    EtaDeltaFowler_Static, ...
    EtaDeltaTripleSlotted_Static
    ];    
hdfFileName = 'EtaDelta_vs_DeltaFlap.h5';

if ( exist(hdfFileName, 'file') )
    fprintf('file %s exists, deleting and creating a new one\n', hdfFileName);
    delete(hdfFileName)
else
    fprintf('Creating new file %s\n', hdfFileName);
end

% Dataset: data
h5create(hdfFileName, '/EtaDelta_vs_DeltaFlap/data', size(myData'));
h5write(hdfFileName, '/EtaDelta_vs_DeltaFlap/data', myData');

% Dataset: var_0
h5create(hdfFileName, '/EtaDelta_vs_DeltaFlap/var_0', size(flapTypeVector'));
h5write(hdfFileName, '/EtaDelta_vs_DeltaFlap/var_0', flapTypeVector');

% Dataset: var_1
h5create(hdfFileName, '/EtaDelta_vs_DeltaFlap/var_1', size(deltafVector'));
h5write(hdfFileName, '/EtaDelta_vs_DeltaFlap/var_1', deltafVector');