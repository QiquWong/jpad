clc; close all; clear all;

%% Import data
Mu2PitchingMomenttaper0 = importdata('Mu2PitchingMomenttaper0.mat');
Mu2PitchingMomenttaper0p2 = importdata('Mu2PitchingMomenttaper0p2.mat');
Mu2PitchingMomenttaper0p33 = importdata('Mu2PitchingMomenttaper0p33.mat');
Mu2PitchingMomenttaper0p5 = importdata('Mu2PitchingMomenttaper0p5.mat');
Mu2PitchingMomenttaper1 = importdata('Mu2PitchingMomenttaper1.mat');

nPoints = 50;
bf_b_Vector = transpose(linspace(0, 1, nPoints));

%% Mu_2 v.s bf/b taper ratio = 0
smoothingParameter = 0.999999;
Mu2PitchingMomenttaper0_SplineStatic = csaps( ...
    Mu2PitchingMomenttaper0(:,1), ...
    Mu2PitchingMomenttaper0(:,2), ...
    smoothingParameter ...
    );

Mu2PitchingMomenttaper0_Static = ppval( ...
    Mu2PitchingMomenttaper0_SplineStatic, ...
    bf_b_Vector ...
    );

%% Mu_2 v.s bf/b taper ratio = 0.2
smoothingParameter = 0.999999;
Mu2PitchingMomenttaper0p2_SplineStatic = csaps( ...
    Mu2PitchingMomenttaper0p2(:,1), ...
    Mu2PitchingMomenttaper0p2(:,2), ...
    smoothingParameter ...
    );

Mu2PitchingMomenttaper0p2_Static = ppval( ...
    Mu2PitchingMomenttaper0p2_SplineStatic, ...
    bf_b_Vector ...
    );

%% Mu_2 v.s bf/b taper ratio = 0.33
smoothingParameter = 0.999999;
Mu2PitchingMomenttaper0p33_SlpineStatic = csaps( ...
    Mu2PitchingMomenttaper0p33(:,1), ...
    Mu2PitchingMomenttaper0p33(:,2), ...
    smoothingParameter ...
    );

Mu2PitchingMomenttaper0p33_Static = ppval( ...
    Mu2PitchingMomenttaper0p33_SlpineStatic, ...
    bf_b_Vector ...
    );

%% Mu_2 v.s bf/b taper ratio = 0.5
smoothingParameter = 0.999999;
Mu2PitchingMomenttaper0p5_SplineStatic = csaps( ...
    Mu2PitchingMomenttaper0p5(:,1), ...
    Mu2PitchingMomenttaper0p5(:,2), ...
    smoothingParameter ...
    );

Mu2PitchingMomenttaper0p5_Static = ppval( ...
    Mu2PitchingMomenttaper0p5_SplineStatic, ...
    bf_b_Vector ...
    );

%% Mu_2 v.s bf/b taper ratio = 1
smoothingParameter = 0.999999;
Mu2PitchingMomenttaper1_SplineStatic = csaps( ...
    Mu2PitchingMomenttaper1(:,1), ...
    Mu2PitchingMomenttaper1(:,2), ...
    smoothingParameter ...
    );

Mu2PitchingMomenttaper1_Static = ppval( ...
    Mu2PitchingMomenttaper1_SplineStatic, ...
    bf_b_Vector ...
    );

%% Plots
figure(1)
plot ( ...
    bf_b_Vector, Mu2PitchingMomenttaper0_Static, 'b-+' ... , ...
 );
 hold on
 
 plot ( ...
    bf_b_Vector, Mu2PitchingMomenttaper0p2_Static, 'b-o' ... , ...
 );

hold on

plot ( ...
    bf_b_Vector, Mu2PitchingMomenttaper0p33_Static, 'b-*' ... , ...
 );

hold on

plot ( ...
    bf_b_Vector, Mu2PitchingMomenttaper0p5_Static, 'b-.' ... , ...
 );

hold on

plot ( ...
    bf_b_Vector, Mu2PitchingMomenttaper1_Static, 'b-x' ... , ...
 );

 xlabel('b_f/b'''); ylabel('\mu_2');
 title('\mu_2 coefficient variation with b_f/b''');
  legend('Taper Ratio = 0', 'Taper Ratio = 0.2', 'Taper Ratio = 0.33', ...
      'Taper Ratio = 0.5', 'Taper Ratio = 1');
 axis([0 1 0 1.4]);
 grid on;
 %% preparing output to HDF

% alphaDelta
TaperRatio_Vector = [ ...
    0;0.2;0.33;0.5;1 ...
    ];

%columns --> curves
myData = [ ...
    Mu2PitchingMomenttaper0_Static,...
        Mu2PitchingMomenttaper0p2_Static, ... 
        Mu2PitchingMomenttaper0p33_Static, ... 
        Mu2PitchingMomenttaper0p5_Static, ...
        Mu2PitchingMomenttaper1_Static]; 
hdfFileName = 'Mu_2_pitching_moment.h5';

if ( exist(hdfFileName, 'file') )
    fprintf('file %s exists, deleting and creating a new one\n', hdfFileName);
    delete(hdfFileName)
else
    fprintf('Creating new file %s\n', hdfFileName);
end

% Dataset: data
h5create(hdfFileName, '/Mu_2_pitching_moment/data', size(myData'));
h5write(hdfFileName, '/Mu_2_pitching_moment/data', myData');

% Dataset: var_0
h5create(hdfFileName, '/Mu_2_pitching_moment/var_0', size(TaperRatio_Vector'));
h5write(hdfFileName, '/Mu_2_pitching_moment/var_0', TaperRatio_Vector');

% Dataset: var_1
h5create(hdfFileName, '/Mu_2_pitching_moment/var_1', size(bf_b_Vector'));
h5write(hdfFileName, '/Mu_2_pitching_moment/var_1', bf_b_Vector');
